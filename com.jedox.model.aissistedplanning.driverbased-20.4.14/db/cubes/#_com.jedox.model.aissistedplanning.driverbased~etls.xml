<?xml version='1.0' encoding='utf-8'?><!-- CUBE "#_com.jedox.model.aissistedplanning.driverbased~etls" --><cube><e0><e0><e0><!-- name / p0 / ~ -->Driver-Based Prediction</e0></e0><e1><e0><!-- name / p3 / ~ -->DeleteAIElements</e0></e1></e0><e1><e0><e0><!-- definition / p0 / ~ -->&lt;?xml version="1.0" encoding="UTF-8"?>&#xd;
&lt;project modified="1610983519215" modifiedBy="peter" name="Driver-Based Prediction" olapId="p0" version="20.4" format="strict">&#xd;
  &lt;headers>&#xd;
    &lt;header modified="1585707944872" name="comment" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Project description : This project calculates Driver-Based Predictions with AIssisted(tm) Planning Services.

Developed by: Peter Strohm, Jedox AG; Ibrahim Alshibani, Jedox AG]]&gt;&lt;/comment>&#xd;
    &lt;/header>&#xd;
    &lt;header modified="1582538264434" name="protection" modifiedBy="admin">&#xd;
      &lt;value>0&lt;/value>&#xd;
    &lt;/header>&#xd;
  &lt;/headers>&#xd;
  &lt;variables>&#xd;
    &lt;variable modified="1582538264434" name="db_elementVersion" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
version element for input values]]&gt;&lt;/comment>&#xd;
      &lt;default>elemVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_database" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Name of database used.]]&gt;&lt;/comment>&#xd;
      &lt;default>CUSTOM-DATABASE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="aip_trainFeatures" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[To be filled from groovy job/ADAPT
Is automatically filled with values from extract "EXTRACT_InputValues".
Adapt extract "EXTRACT_InputValues" to change input for your project.

866076.14,894050.43,1033661.87,1173359.95,1290713.3,1447213.23,921938.05,1014175.09,1137071.37,1257196.1,1382950.41,1550536.16,1145385.76,1219261.96,1367101.2,1387973.6,1431364.07,1518058.24,1180080.704,1358994.621,1809016.538,1500934.208,1558923.164,2263782.794,1408824.485,1499692.211,1681534.476,1707207.528,1760577.806,1867211.635,1451499.266,1671563.383,2225090.341,1846149.076,1917475.492,2784452.836,2406.69,2484.41,2872.39,3260.59,3586.69,4021.57,2561.93,2818.23,3159.74,3493.55,3843.02,4308.7,3182.85,3388.14,3798.97,3856.96,3977.53,4218.45,3279.2704,3776.4282,5026.9625,4170.8568,4332.002,6290.702,3914.9055,4167.4122,4672.7331,4744.0608,4892.3619,5188.6935,4033.502592,4645.006686,6183.163875,5130.153864,5328.36246,7737.56346,5131.28,5297.04,6124.18,6951.86,7647.18,8574.34,5462.23,6008.69,6736.83,7448.6,8193.62,9186.55,6786.09,7223.84,8099.74,8223.38,8480.47,8994.13,6991.6544,7631.0363,10889.4118,9027.3522,9310.75,12953.0355,8346.8907,8885.3232,9962.6802,10114.7574,10430.9781,11062.7799,8599.734912,9386.174649,13393.97651,11103.64321,11452.2225,15932.23367]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582883110678" name="intern_bearer" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[INTERN:
To be filled from token connection
Authentication Token for Jedox AIssisted Planning WebService]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_sourceCube" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Cube to use in database.]]&gt;&lt;/comment>&#xd;
      &lt;default>SOURCE-CUBE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="aip_predictionType" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Type for prediction:
Best Selection = 0, Linear Regression = 1,  Support Vector Regression = 2, Extra Trees= 3, Random Forest = 4]]&gt;&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_yearRegExpAccept" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
To be filled from user (depending on time dimension).&#xd;
(-0.$|-1.$)&lt;/comment>&#xd;
      &lt;default>(0.|1.)&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_yearRegExpDeny" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
Prefilled. Add more elements that should be ignored (depending on time dimension)&#xd;
-00&lt;/comment>&#xd;
      &lt;default>00&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementMeasure" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Measures which should be predicted.
Enter like this: M1|M2|M3|M4
-> variable "aip_numInputs" has to be the number of measures you put in here]]&gt;&lt;/comment>&#xd;
      &lt;default>elemMeasure&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_firstDBYear" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
First year in database (or first year that should be used for prediction)]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_connection" modifiedBy="admin">&#xd;
      &lt;comment>UPDATE:&#xd;
Connection to Jedox database&lt;/comment>&#xd;
      &lt;default setting="System.connection">localhost&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementTargetVersion" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Defines the version element for prediction]]&gt;&lt;/comment>&#xd;
      &lt;default>elemTargetVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592922317587" name="sys_AIssistedUser" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your user name for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-12);
val = API.getConfigSetting("System.aissisted_user", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>USER&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592922253501" name="sys_AIssistedPass" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your password for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-12);
val = API.getConfigSetting("System.aissisted_pass", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>AIP-PASS&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimensionMeasure" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"
Use this for dimension with measures.]]&gt;&lt;/comment>&#xd;
      &lt;default>DimMeasure&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimensionTime" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"
Use this dimension for time]]&gt;&lt;/comment>&#xd;
      &lt;default>DimTime&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimensionVersion" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"
Use this dimension for version]]&gt;&lt;/comment>&#xd;
      &lt;default>DimVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_accuracyFlag" modifiedBy="admin">&#xd;
      &lt;comment>UPDATE:&#xd;
Cube to store accuracy in database.&#xd;
NOTE: Leave empty if you do not want to store Accuracy.&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_elementEnd" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT (optional if aip_numValues is set):
Put last element of prediction period here (e.g. 2019-10 if you want the last predicted element to be 2019-10).
If you do not put sth. here, elementEnd will be calculated from: time_elementStart + aip_numValues
RELATED: time_elementStart; aip_numValues
WAS empty]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_elementStart" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Put first element of prediction period here (e.g. 2018-11 if you want to start with prediction at November 2018-11 using all previous data froo 2018-10 backwards)
RELATED: time_elementEnd; aip_numValues]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_dateSeparator" modifiedBy="admin">&#xd;
      &lt;comment>UPDATE:&#xd;
e.g. 2019-02 -&amp;gt; date separator would be -&#xd;
if no separator exists, keep empty&lt;/comment>&#xd;
      &lt;default>-&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_dateFormat" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[INTERN:
Date format of Integrator project for sorting, date calculation etc.]]&gt;&lt;/comment>&#xd;
      &lt;default>yyyyMMdd&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_dateFormatSourceMonthly" modifiedBy="admin">&#xd;
      &lt;comment>UPDATE:&#xd;
time format of custom time dimension until MONTH&#xd;
&#xd;
NOTE: if you want to use daily data, please set variable time_dateDailySeparator&lt;/comment>&#xd;
      &lt;default>yyyy-MM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_leadingZero" modifiedBy="admin">&#xd;
      &lt;comment>UPDATE:&#xd;
If there is no leading zero keep variable EMPTY.&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_targetCube" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Cube to use in database. In most cases this will be the same as source cube.]]&gt;&lt;/comment>&#xd;
      &lt;default>TARGET-CUBE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_dateDailySeparator" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE (if you want to use daily data):
e.g. 2019-02-17 -> date separator daily would be (..) (for 2 day digits)
if you do not want to use daily data, leave it $]]&gt;&lt;/comment>&#xd;
      &lt;default>$&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_dateFormatSourceDaily" modifiedBy="admin">&#xd;
      &lt;comment>UPDATE:&#xd;
time format of custom time dimension until MONTH&#xd;
&#xd;
NOTE: if you want to use daily data, please set variable time_dateDailySeparator&lt;/comment>&#xd;
      &lt;default>yyyy-MM-dd&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_extractSourceAccept" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_extractSourceDeny" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_extractTargetDeny" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_extractTargetAccept" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_extractCopyAccept" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_extractCopyDeny" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_accuracyDim" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[INTERN:
Name of Accuracy dimension]]&gt;&lt;/comment>&#xd;
      &lt;default>Accuracy&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_inputSum" modifiedBy="admin">&#xd;
      &lt;comment>INTERN&#xd;
Sum of input values for zero checking&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592922284392" name="sys_AIssistedURL" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT
IP to AI Engine
E.g. could be Virtual Private Network (10.xx.xx.xx) or global (predictive-aissistedplanning.cloud.jedox.com)]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-12);
val = API.getConfigSetting("System.aissisted_url", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>predictive-aissistedplanning.cloud.jedox.com&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592922239851" name="sys_AIssistedAPIKEY" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your API key for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-12);
val = API.getConfigSetting("System.aissisted_apikey", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>API-KEY&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="ext_numValues" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[SET FROM EXTERNAL
number of values to be forecasted (e.g. 12 if you want the next 12 month to be predicted)]]&gt;&lt;/comment>&#xd;
      &lt;default>12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension1" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim1" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode1" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension2" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim2" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode2" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension3" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim3&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim3" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem3&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode3" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension4" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim4&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim4" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem4&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode4" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension5" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim5&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim5" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem5&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode5" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension6" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim6&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim6" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem6&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode6" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension7" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim7&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim7" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem7&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode7" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension8" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim8&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim8" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem8&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode8" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension9" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim9&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim9" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem9&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode9" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension10" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim10" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode10" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension11" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim11&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim11" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem11&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode11" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension12" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim12" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode12" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension13" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim13&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim13" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem13&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode13" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension14" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim14&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim14" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem14&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode14" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension15" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim15&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim15" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem15&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode15" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension16" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim16&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim16" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem16&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode16" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_dimension17" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim17&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementDim17" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem17&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode17" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension18" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim18&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim18" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element18&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode18" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension19" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim19&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim19" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element19&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode19" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension20" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim20&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim20" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element20&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode20" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension21" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim21&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim21" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element21&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode21" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension22" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim22&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim22" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element22&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode22" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension23" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim23&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim23" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element23&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode23" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension24" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim24&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim24" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element24&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode24" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension25" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim25&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim25" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element25&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode25" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension26" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim26&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim26" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element26&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode26" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension27" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default&gt;Dim27&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim27" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element27&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode27" modified="1582538264434" modifiedBy="admin">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="db_elementTargetMeasure" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>elemTargetMeasure&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="ext_shiftValue" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="aip_testFeatures" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="aip_featureNames" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_rowEndInput" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_rowBeginLabels" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="aip_targetFeature" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="aip_numPeriods" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_currentFormat" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>yyyy-MM-dd&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_extractQueryAccept" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_extractQueryDeny" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_inputSizeMonths" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_rowBeginQuery" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="intern_shiftValue" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[INTERNAL shift value
calculated for daily/monthly]]&gt;&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582849069550" name="sys_prefix" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>DB&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_configCubes" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>AICubes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_configSettings" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>AISettings&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_aiConfigCube" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIConfigCube&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_configSettingsValue" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>~&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="sys_configParameters" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIParameters&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582538264434" name="time_inputStartDate" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
First year in database (or first year that should be used for prediction)]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="intern_numberOfCombs" modified="1582538264434" modifiedBy="admin" />&#xd;
    &lt;variable modified="1592922266863" name="sys_AIssistedPort" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Port of AIssisted Planning engine]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-12);
val = API.getConfigSetting("System.aissisted_port", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>12800&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606315233965" name="service_api" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>ai/api&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606310593929" name="service_protocol" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>https&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606310593929" name="service_combinedURL" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>jedox&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606310853352" name="service_version" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>1.0.2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606310843642" name="service_function" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIssistedRegression&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606947735360" name="service_pod" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>_pod&lt;/default>&#xd;
    &lt;/variable>&#xd;
  &lt;/variables>&#xd;
  &lt;connections>&#xd;
    &lt;connection modified="1582538264434" name="CON_jedoxGlobal" type="JedoxOlap" modifiedBy="admin">&#xd;
      &lt;global nameref="localhost" />&#xd;
      &lt;database>${sys_database}&lt;/database>&#xd;
      &lt;ssl>trust&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1582538264434" name="AIP_getToken" type="Rest" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Authenticate on AAD Server with AIssisted Planning user &amp; password.
Enter credentials in variables or AIssisted Planning Model settings.]]&gt;&lt;/comment>&#xd;
      &lt;resource>https://login.microsoftonline.com/aissistedplanning.onmicrosoft.com/oauth2/token&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;ignoreCookiesPolicy>false&lt;/ignoreCookiesPolicy>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Content-Type">application/x-www-form-urlencoded&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;parameters>&#xd;
        &lt;parameter name="grant_type">password&lt;/parameter>&#xd;
        &lt;parameter name="client_id">89b28630-088f-46a9-85eb-14a919c2f94a&lt;/parameter>&#xd;
        &lt;parameter name="username">${sys_AIssistedUser}&lt;/parameter>&#xd;
        &lt;parameter name="password">${sys_AIssistedPass}&lt;/parameter>&#xd;
        &lt;parameter name="resource">7bb350cb-5757-4c85-b098-0f9fd5c7e4e4&lt;/parameter>&#xd;
      &lt;/parameters>&#xd;
      &lt;ssl>verify&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1606310660462" name="AIP_functionCall" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[REST Call to Jedox AIssistedPlanning Web Service
FUNCTION: forecastValuesJedox/v1.1.0

Documentation:
The time series forecasting web service uses several time series forecasting algorithms. These are simple linear modelling, seasonal naive forecasting, random walk with drift for forecasting, Holt Winters method, exponential smoothing and Autoregressive integrating moving averages (ARIMA). The Linear modelling method fits a full linear model and then makes prediction. Seasonal naive model is a basic time series model with consideration for seasonality of data. Holt winters method requires seasonal data with the number of inputs at least a multiple of period + 3 for quarterly data and period+5 for monthly data. Exponential smoothing, on the other hand, can also be used for non-seasonal data. The Random walk model uses Seasonal and Trend decomposition using Loess (STL) decomposition for time series analysis and forecast using random walk with drift (long-term trend assumed constant). This method requires a series length of >2*period (period - 12 monthly data, 4 quarterly data, 52 weekly data, 365 daily data). In case the choice of algorithm is not clear, automatic selection can also be performed. The web service also calculates accuracy and lower/upper bounds for the forecasts.]]&gt;&lt;/comment>&#xd;
      &lt;resource>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;timeout>0&lt;/timeout>&#xd;
      &lt;ignoreCookiesPolicy>false&lt;/ignoreCookiesPolicy>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Authorization">Bearer ${intern_bearer}&lt;/header>&#xd;
        &lt;header name="Content-Type">application/json&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;ssl>verify&lt;/ssl>&#xd;
      &lt;requestBody>&lt;![CDATA[{
    "feature_names": "${aip_featureNames}",
    "train_features": "${aip_trainFeatures}",
    "test_features": "${aip_testFeatures}",
    "target": "prediction_target_${aip_targetFeature}",
    "alg": ${aip_predictionType},
	"correlation_threshold":1.0,
	"variance_threshold":0.0,
    "cv": 2,
    "use_bagging": true,
    "optimize_parameters": 0,
    "normalize": false,
	"model_name" : "",
	"result_file_name" : "",
	"fix_random_state": true,
	"user" : "${sys_AIssistedUser}",
	"api_key" : "${sys_AIssistedAPIKEY}"
}]]&gt;&lt;/requestBody>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1606310710776" name="AIP_functionCall_pod" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[REST Call to Jedox AIssistedPlanning Web Service
FUNCTION: forecastValuesJedox/v1.1.0

Documentation:
The time series forecasting web service uses several time series forecasting algorithms. These are simple linear modelling, seasonal naive forecasting, random walk with drift for forecasting, Holt Winters method, exponential smoothing and Autoregressive integrating moving averages (ARIMA). The Linear modelling method fits a full linear model and then makes prediction. Seasonal naive model is a basic time series model with consideration for seasonality of data. Holt winters method requires seasonal data with the number of inputs at least a multiple of period + 3 for quarterly data and period+5 for monthly data. Exponential smoothing, on the other hand, can also be used for non-seasonal data. The Random walk model uses Seasonal and Trend decomposition using Loess (STL) decomposition for time series analysis and forecast using random walk with drift (long-term trend assumed constant). This method requires a series length of >2*period (period - 12 monthly data, 4 quarterly data, 52 weekly data, 365 daily data). In case the choice of algorithm is not clear, automatic selection can also be performed. The web service also calculates accuracy and lower/upper bounds for the forecasts.]]&gt;&lt;/comment>&#xd;
      &lt;resource>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;timeout>0&lt;/timeout>&#xd;
      &lt;ignoreCookiesPolicy>false&lt;/ignoreCookiesPolicy>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Authorization">Bearer ${intern_bearer}&lt;/header>&#xd;
        &lt;header name="Content-Type">application/json&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;ssl>off&lt;/ssl>&#xd;
      &lt;requestBody>&lt;![CDATA[{
    "feature_names": "${aip_featureNames}",
    "train_features": "${aip_trainFeatures}",
    "test_features": "${aip_testFeatures}",
    "target": "prediction_target_${aip_targetFeature}",
    "alg": ${aip_predictionType},
	"correlation_threshold":1.0,
	"variance_threshold":0.0,
    "cv": 2,
    "use_bagging": true,
    "optimize_parameters": 0,
    "normalize": false,
	"model_name" : "",
	"result_file_name" : "",
	"fix_random_state": true
}]]&gt;&lt;/requestBody>&#xd;
    &lt;/connection>&#xd;
  &lt;/connections>&#xd;
  &lt;extracts>&#xd;
    &lt;extract modified="1582538264434" modifiedBy="admin" name="AIP_extractToken" type="Json">&#xd;
      &lt;comment>token for authetication&lt;/comment>&#xd;
      &lt;connection nameref="AIP_getToken" />&#xd;
      &lt;query>&#xd;
        &lt;level>$&lt;/level>&#xd;
        &lt;fields>&#xd;
          &lt;field>token_type&lt;/field>&#xd;
          &lt;field>access_token&lt;/field>&#xd;
        &lt;/fields>&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606311206733" name="AIP_extractResult" type="Json" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Results from Jedox AIssisted Planning Web Service]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="AIP_functionCall${service_pod}" />&#xd;
      &lt;alias_map>&#xd;
        &lt;alias name="validation_accuracy">1&lt;/alias>&#xd;
        &lt;alias name="train_accuracy">2&lt;/alias>&#xd;
        &lt;alias name="index">3&lt;/alias>&#xd;
        &lt;alias name="predictions">4&lt;/alias>&#xd;
        &lt;alias name="success">5&lt;/alias>&#xd;
        &lt;alias name="errorMessage">6&lt;/alias>&#xd;
        &lt;alias name="consoleOutput">7&lt;/alias>&#xd;
        &lt;alias name="web_success">8&lt;/alias>&#xd;
        &lt;alias name="web_errorMessage">9&lt;/alias>&#xd;
      &lt;/alias_map>&#xd;
      &lt;query>&#xd;
        &lt;level>$&lt;/level>&#xd;
        &lt;fields>&#xd;
          &lt;field>outputParameters.values["validation accuracies"]&lt;/field>&#xd;
          &lt;field>outputParameters.values['train scores']["accuracy"]&lt;/field>&#xd;
          &lt;field>outputParameters.values['test indices']&lt;/field>&#xd;
          &lt;field>outputParameters.values['test predictions']&lt;/field>&#xd;
          &lt;field>outputParameters.values['success']&lt;/field>&#xd;
          &lt;field>outputParameters.values['error message']&lt;/field>&#xd;
          &lt;field>consoleOutput&lt;/field>&#xd;
          &lt;field>success&lt;/field>&#xd;
          &lt;field>errorMessage&lt;/field>&#xd;
        &lt;/fields>&#xd;
      &lt;/query>&#xd;
      &lt;cache>true&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="INPUT_clearAccuracy" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>Accuracy data for clearing&#xd;
ADAPT for own dimensions&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query celltype="only_string" drillthrough="false" onlyBasisAsDefault="false" useRules="false" zeroSuppressionType="excludeEmpty">&#xd;
        &lt;cube name="Accuracy_${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="CT_addVersions" type="ConstantTable" modifiedBy="admin">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>Version&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementTargetVersion}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1583857644863" name="CT_addAcuracyDim" type="ConstantTable" modifiedBy="admin">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>Accuracy&lt;/value>&#xd;
          &lt;value>:nodetype&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>Linear Regression&lt;/value>&#xd;
          &lt;value>S&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>Support Vector Regression&lt;/value>&#xd;
          &lt;value>S&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>Random Forest&lt;/value>&#xd;
          &lt;value>S&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>Extra Trees&lt;/value>&#xd;
          &lt;value>S&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>Adaptive Boosting Regression&lt;/value>&#xd;
          &lt;value>S&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>Gradient Boosting Regression&lt;/value>&#xd;
          &lt;value>S&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>Nearest Neighbour Regression&lt;/value>&#xd;
          &lt;value>S&lt;/value>&#xd;
        &lt;/row&gt;&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="INPUT_targetValues_clearJob" type="CubeSlice" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[^${db_elementTargetVersion}$|^${db_elementTargetVersion}_lower$|^${db_elementTargetVersion}_upper$]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="CT_dummy" type="ConstantTable" modifiedBy="admin">&#xd;
      &lt;comment>Dummy Constant Table&lt;/comment>&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>Column1&lt;/value>&#xd;
          &lt;value>Column2&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>dummy&lt;/value>&#xd;
          &lt;value>dummy&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="OUTPUT_copyValues" type="CubeSlice" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[^${db_elementTargetVersion}$]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractCopyAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractCopyDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementTargetMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="SAVE_variablesDatabase" type="ConstantTable" modifiedBy="admin">&#xd;
      &lt;comment>Saves the variables for export/import to another integrator project.&#xd;
right click and "copy with dependancies", then paste into new project, click "yes" when asked to overwrite existing values.&lt;/comment>&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>Column1&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimensionMeasure}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimensionVersion}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimensionTime}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementMeasure}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementTargetVersion}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${sys_accuracyFlag}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${sys_database}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementVersion}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${sys_sourceCube}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${sys_connection}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${sys_AIssistedPass}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${sys_AIssistedUser}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${sys_targetCube}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension1}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension2}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension3}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension4}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension5}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension6}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension7}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension8}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension9}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension10}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension11}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension12}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension13}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension14}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension15}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension16}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension17}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension18}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension19}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension20}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension21}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension22}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension23}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension24}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension25}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension26}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_dimension27}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim1}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim2}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim3}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim4}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim5}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim6}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim7}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim8}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim9}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim10}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim11}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim12}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim13}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim14}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim15}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim16}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim17}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim18}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim19}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim20}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim21}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim22}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim23}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim24}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim25}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim26}&lt;/value>&#xd;
        &lt;/row>&#xd;
        &lt;row>&#xd;
          &lt;value>${db_elementDim27}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="OUTPUT_targetWithValues" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Input data
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query celltype="both" drillthrough="false" onlyBasisAsDefault="false" useRules="true" zeroSuppressionType="includeEmptyDefaultMapping">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[^${db_elementTargetVersion}$]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractTargetAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractTargetDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementTargetMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="CT_inputCheck" type="ConstantTable" modifiedBy="admin">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>inputValues&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${intern_inputSum}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="INPUT_inputFeatures" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Input data
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query celltype="both" drillthrough="false" onlyBasisAsDefault="false" useRules="true" zeroSuppressionType="includeEmptyDefaultMapping">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractSourceAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractSourceDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="INPUT_accuracyTarget" type="CubeSlice" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementTargetVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementTargetMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="INPUT_inputLabels" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Input data
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query celltype="both" drillthrough="false" onlyBasisAsDefault="false" useRules="true" zeroSuppressionType="includeEmptyDefaultMapping">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractSourceAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractSourceDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementTargetMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="INPUT_inputQuerySet" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Input data
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query celltype="both" drillthrough="false" onlyBasisAsDefault="false" useRules="true" zeroSuppressionType="includeEmptyDefaultMapping">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractQueryAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractQueryDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1589980460120" name="INPUT_reportVariables" type="Cube" modifiedBy="peter">&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query drillthrough="false" onlyBasisAsDefault="true" useRules="false" zeroSuppressionType="includeEmpty">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${sys_configCubes}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_sourceCube}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${sys_configSettings}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_configSettingsValue}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${sys_configParameters}">&#xd;
            &lt;condition mode="onlyBases" operator="like" type="accept">&lt;![CDATA[^${sys_prefix}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_aiConfigCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582538264434" name="OUTPUT_numberOfCombs" type="CubeSlice" modifiedBy="admin">&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${time_elementStart}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1582883171046" name="CT_removeAICube" type="ConstantTable" modifiedBy="admin">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>AIConfigCubes&lt;/value>&#xd;
          &lt;value>:nodetype&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${sys_sourceCube}&lt;/value>&#xd;
          &lt;value>N&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1583189373429" name="CT_accuracyFlag" type="ConstantTable" modifiedBy="admin">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>flag&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${sys_accuracyFlag}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606310593929" name="VAR_service" type="ConstantTable" modifiedBy="peter">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>Column1&lt;/value>&#xd;
          &lt;value>Column2&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/value>&#xd;
          &lt;value>${service_pod}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
  &lt;/extracts>&#xd;
  &lt;transforms>&#xd;
    &lt;transform modified="1592375983829" name="FT_indexTarget" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Add row numbers for table join.
ADAPT: If using the extended dimension version change the Data Source to "PM_SP_SORT_cube_target_extended"]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortTarget" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592376084719" name="FT_indexOutput" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[add rownumbers for table join]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FN_output" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="§§§row§§§" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592375983829" name="TJ_mergeOutput" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Join target dimensions and result values.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_indexTarget" />&#xd;
        &lt;source nameref="FT_indexOutput" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" unique="false">&#xd;
          &lt;left nameref="FT_indexTarget">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/left>&#xd;
          &lt;right nameref="FT_indexOutput">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/right>&#xd;
          &lt;conditions>&#xd;
            &lt;condition type="eq" />&#xd;
          &lt;/conditions>&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1610983502457" name="FT_processForecast" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Arrange dimensions in correct format for writing results to the cube.
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_filterZeros" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^§§§row§§§$|^#Value$|^date_sort$" include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_trimOutputUpperLower" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Trim result values.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractResult" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="split1" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="predictions" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>[&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="values" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="split1" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>]&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="index_split" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="index" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>[&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="indices" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="index_split" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>]&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TV_sortInput" type="TableView" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions
${intern_rowStop}
${intern_rowStart}]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_trimInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimensionMeasure}" />&#xd;
        &lt;input nameref="${db_dimension1}" />&#xd;
        &lt;input nameref="${db_dimension2}" />&#xd;
        &lt;input nameref="${db_dimension3}" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TV_sortTarget" type="TableView" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Paths for output have to be sorted in the same way as the input (time, measure....)
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_dateTransformTarget" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimensionMeasure}" />&#xd;
        &lt;input nameref="${db_dimension1}" />&#xd;
        &lt;input nameref="${db_dimension2}" />&#xd;
        &lt;input nameref="${db_dimension3}" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FN_output" type="FieldNormalization" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Transform Comma separated values from Web service result into a column where each value is in a separate row.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_trimOutputUpperLower" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>values&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TA_trainInputs" type="TableAggregation" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Convert a column with a value in each row into a single string with comma separated values (this format is required for the web service).]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="true" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="group_concat" name="aip_trainInputs">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure aggregate="sum" name="sum">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure aggregate="concat_distinct" name="selectedInputs">&#xd;
            &lt;input nameref="${db_dimensionMeasure}" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606324553171" name="FT_variablesStaticTokenInput" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input for Loop job containing variables.
Calculates all the time related variables automatically.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractToken" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="format_date" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstTrgYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="format_date" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numPeriods" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_firstTrgYear" type="int" />&#xd;
            &lt;input nameref="intern_firstDbYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>false&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return intern_firstTrgYear-intern_firstDbYear;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstDbYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_inputStartDate}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_inputStartDate}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstTargetMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_periodEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="strVal" constant="${ext_numValues}" type="String" />&#xd;
            &lt;input alias="elemEnd" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="date" nameref="format_date" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${intern_dateFormat}" type="String" />&#xd;
            &lt;input alias="usedFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[import groovy.time.TimeCategory;

Date e;



if("${time_elementEnd}"=="")



{

  Date d = Date.parse(internFormat, date);

  use(TimeCategory) {

  e = d + (strVal.toInteger()-1).months; 

  }

}

else {

 e = Date.parse(usedFormat, elemEnd);



}

return e.format(internFormat);]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastTrgYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_srcYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_numPeriods" type="int" />&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstTargetMonth" type="String" />&#xd;
            &lt;input nameref="intern_firstTrgYear" type="String" />&#xd;
            &lt;input alias="firstDbYear" nameref="intern_firstDbYear" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[srcYearRng = "(" + firstDbYear;
int firstDBYear = firstDbYear.toInteger();
for(i=1;i&lt;intern_numPeriods;i++){







 srcYearRng =  srcYearRng+"|"+(firstDBYear+i);







}















if(intern_firstMonth == "01")







{







  srcYearRng = srcYearRng + ")";







}







else







{







  srcYearRng = srcYearRng +"|"+ intern_firstTrgYear + ")";







}







return srcYearRng;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastTargetMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)







  return "§";







nval = 12+12-intern_firstMonth+1; // full year plus rest of year







rolling = "(";







for (i = 1; i &lt;intern_firstMonth; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(i&lt;10)







  rolling = rolling+"|"+"${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstTargetMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-intern_firstMonth+1; // full year plus rest of year







rolling = "(";







//first month







first = intern_firstMonth;







if(first > 12)







  return "§";







if(first &lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(first &lt;10)







  rolling = rolling+"${time_leadingZero}"+first;







  else







  rolling = rolling+""+first;







for (i = intern_firstMonth+1; i &lt;=12; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}1";







  else if(i&lt;10)







  rolling = rolling+"|${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockTrgBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="lastTrgMonth" nameref="intern_lastTargetMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-lastTrgMonth+1; // full year plus rest of year



rolling = "(";







//first month







first = lastTrgMonth+1;







if(first > 12)







  return "§";







if(first &lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(first &lt;10)







  rolling = rolling+"${time_leadingZero}"+first;







  else







  rolling = rolling+""+first;







for (i = lastTrgMonth+2; i &lt;=12; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}1";







  else if(i&lt;10)







  rolling = rolling+"|${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockTrgEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstTargetMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)







  return "§";







nval = 12+12-intern_firstMonth+1; // full year plus rest of year







rolling = "(";







for (i = 1; i &lt;intern_firstMonth; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(i&lt;10)







  rolling = rolling+"|"+"${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_trgtYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_firstTrgYear" type="int" />&#xd;
            &lt;input nameref="intern_lastTrgYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[range = intern_lastTrgYear-intern_firstTrgYear;















trgtRng = "("+intern_firstTrgYear;















for(i=1;i&lt;=range;i++)















{















  trgtRng+= "|"+(intern_firstTrgYear+i) ;















}







return trgtRng+")";]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numValues" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="firstYear" nameref="intern_firstTrgYear" type="int" />&#xd;
            &lt;input alias="lastYear" nameref="intern_lastTrgYear" type="int" />&#xd;
            &lt;input alias="firstMonth" nameref="intern_firstTargetMonth" type="int" />&#xd;
            &lt;input alias="lastMonth" nameref="intern_lastTargetMonth" type="int" />&#xd;
            &lt;input alias="daily" constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[points = 0;







if(firstYear==lastYear){







  points = 1 + lastMonth-firstMonth;







} else{







  points = 1+(lastMonth + ((lastYear-firstYear)*12)) - firstMonth;







}















if(daily != "\$"){







  points = points * 31;







}















return points;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_srcYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" /&gt;&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days



arr = format.split("\\" + sep);



if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  return "^" + month + sep + year + day



}



  else {



  return "^" + year + sep + month + day 



  }



}



else{



df = dailyFormat.split("\\" + sep);



def resultArr = new String[3];



  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    resultArr[i] = month



    }



    else if (df[i].toUpperCase().contains("D")) {



    resultArr[i] = day    



    }



    else {



    resultArr[i] = year



    } 



  }



return resultArr.join(sep);  



}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_srcYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_firstTrgYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockSrcEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_firstDbYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockSrcBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);







if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  //Don't need to care for days for s1.



  s1 = month1 + sep + year1;



  s2 = month2 + sep + year2 + day;



  s3 = month3 + sep + year3 + day;



  }



  else {



  s1 = year1 + sep + month1; 



  s2 = year2 + sep + month2 + day;



  s3 = year3 + sep + month3 + day;



  }



}



else{



df = dailyFormat.split("\\" + sep);



s1 = new String[3];



s2 = new String[3];



s3 = new String[3];







  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    s1[i] = month1;



    s2[i] = month2;



    s3[i] = month3;



    }



    else if (df[i].toUpperCase().contains("D")) {



    s2[i] = day;



    s3[i] = day;    



    }



    else if (df[i].toUpperCase().contains("Y")){



    s1[i] = year1;



    s2[i] = year2;



    s3[i] = year3;



    } 



  }



  s1 = s1 - null;



  s1 = s1.join(sep);



  s2 = s2.join(sep);



  s3 = s3.join(sep);



  



}



return s1 + "|" + s2 +"|"+ s3 ;







//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractTargetAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_trgtYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days



arr = format.split("\\" + sep);



if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  return "^" + month + sep + year + day



}



  else {



  return "^" + year + sep + month + day 



  }



}



else{



df = dailyFormat.split("\\" + sep);



def resultArr = new String[3];



  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    resultArr[i] = month



    }



    else if (df[i].toUpperCase().contains("D")) {



    resultArr[i] = day    



    }



    else {



    resultArr[i] = year



    } 



  }



return resultArr.join(sep);  



}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractTargetDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_trgtYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_firstTrgYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockTrgEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_lastTrgYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockTrgBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);







if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  //Don't need to care for days for s1.



  s1 = month1 + sep + year1;



  s2 = month2 + sep + year2 + day;



  s3 = month3 + sep + year3 + day;



  }



  else {



  s1 = year1 + sep + month1; 



  s2 = year2 + sep + month2 + day;



  s3 = year3 + sep + month3 + day;



  }



}



else{



df = dailyFormat.split("\\" + sep);



s1 = new String[3];



s2 = new String[3];



s3 = new String[3];







  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    s1[i] = month1;



    s2[i] = month2;



    s3[i] = month3;



    }



    else if (df[i].toUpperCase().contains("D")) {



    s2[i] = day;



    s3[i] = day;    



    }



    else if (df[i].toUpperCase().contains("Y")){



    s1[i] = year1;



    s2[i] = year2;



    s3[i] = year3;



    } 



  }



  s1 = s1 - null;



  s1 = s1.join(sep);



  s2 = s2.join(sep);



  s3 = s3.join(sep);



  



}



return s1 + "|" + s2 +"|"+ s3 ;







//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_trgtYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days



arr = format.split("\\" + sep);



  if (arr[0].toUpperCase().contains("M")){



  return "^" + month + sep + year + "\$";



}



  else {



  return "^" + year + sep + month + "\$"; 



  }]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_trgtYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_firstTrgYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockTrgEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_lastTrgYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockTrgBeginning" />&#xd;
            &lt;input alias="day" constant="$" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);







  if (arr[0].toUpperCase().contains("M")){



  //Don't need to care for days for s1.



  s1 = month1 + sep + year1;



  s2 = month2 + sep + year2 + day;



  s3 = month3 + sep + year3 + day;



  }



  else {



  s1 = year1 + sep + month1; 



  s2 = year2 + sep + month2 + day;



  s3 = year3 + sep + month3 + day;



  }







return s1 + "|" + s2 +"|"+ s3 ;







//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="time_currentFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="${time_dateFormatSourceDaily}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="yyyyMM" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="yyyyMM" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="yyyyMMdd" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="ext_shiftValue" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="sep" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="shift" constant="${ext_shiftValue}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[if (sep == "\$")
{
	return shift
}
  else
  {
  return shift*28
  }]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_api" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="ai/api" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
            &lt;default>&#xd;
              &lt;result constant="api" />&#xd;
            &lt;/default>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_combinedURL" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${sys_AIssistedURL}:${sys_AIssistedPort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="jedox" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_protocol" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="https" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="http" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate name="intern_bearer">&#xd;
            &lt;input nameref="access_token" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_numPeriods">&#xd;
            &lt;input nameref="intern_numPeriods" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="time_elementEnd">&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractSourceAccept">&#xd;
            &lt;input nameref="intern_extractSourceAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractSourceDeny">&#xd;
            &lt;input nameref="intern_extractSourceDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractTargetAccept">&#xd;
            &lt;input nameref="intern_extractTargetAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractTargetDeny">&#xd;
            &lt;input nameref="intern_extractTargetDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractCopyAccept">&#xd;
            &lt;input nameref="intern_extractCopyAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractCopyDeny">&#xd;
            &lt;input nameref="intern_extractCopyDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="time_currentFormat">&#xd;
            &lt;input nameref="time_currentFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_dateFormat">&#xd;
            &lt;input nameref="intern_dateFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_shiftValue">&#xd;
            &lt;input nameref="ext_shiftValue" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_api" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_combinedURL" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_protocol" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_splitAccuracy" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Only needed if you want to store accuracy]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractResult" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="split1" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="validation_accuracy" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;separator>[&lt;/separator>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="values" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="split1" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>]&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TLE_DIM_addAccuracy" type="TreeLE" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="CT_addAcuracyDim" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;element>&#xd;
          &lt;input nameref="Accuracy" />&#xd;
        &lt;/element>&#xd;
        &lt;level>&#xd;
          &lt;input constant="1" />&#xd;
        &lt;/level>&#xd;
        &lt;weight>&#xd;
          &lt;input constant="1" />&#xd;
        &lt;/weight>&#xd;
        &lt;type>&#xd;
          &lt;input nameref=":nodetype" />&#xd;
        &lt;/type>&#xd;
      &lt;/target>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592381171217" name="FT_processCopy" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Arrange dimensions in correct format for writing results to the cube.
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="OUTPUT_copyValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="sourceMonth" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="dateOfPrediction" nameref="${db_dimensionTime}" type="Date" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[Date date = Date.parse("${time_dateFormatSourceMonthly}", dateOfPrediction);

// year from -365 days

y = date.minus(365).format("yyyy");

// month from original date (leap years!)

m = date.format("MM");

// concatenate in yyyy-MM format plus separator

d = y+"${time_dateSeparator}"+m;

// create date object

date = Date.parse("yyyy${time_dateSeparator}MM", d);

// transform to custom date format

d = date.format("${time_dateFormatSourceMonthly}");

return d;]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^#Value$" include=".">&#xd;
          &lt;coordinate name="sourceMonth">&#xd;
            &lt;input nameref="sourceMonth" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="sourceVersion">&#xd;
            &lt;input constant="${db_elementVersion}" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="targetVersion">&#xd;
            &lt;input nameref="${db_dimensionVersion}" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_dateTransformInput" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Adds date column which can be sorted for input]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_inputFeatures" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_dateTransformTarget" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Adds date column which can be sorted for target]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="OUTPUT_targetWithValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1610983519215" name="TV_filterZeros" type="TableView" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_mergeOutput" />&#xd;
      &lt;/sources>&#xd;
      &lt;filter>&#xd;
        &lt;input nameref="#Value">&#xd;
          &lt;condition operator="inRange" type="deny" value="[-0.001,0.001]" />&#xd;
        &lt;/input>&#xd;
      &lt;/filter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1583857321075" name="FT_switchControlResult" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractResult" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="switchInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="success" type="boolean" />&#xd;
            &lt;input nameref="web_success" type="boolean" />&#xd;
            &lt;input alias="acc" constant="${sys_accuracyFlag}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(!web_success || !success )

	return 0;

else if( acc == 1)

  	return 1;

else

  return 2;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="combinedErrorMessage" type="Concatenation">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="web_errorMessage" />&#xd;
            &lt;input nameref="errorMessage" />&#xd;
            &lt;input nameref="consoleOutput" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;delimiter>§&lt;/delimiter>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="predictions" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="train_accuracy" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="success" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="combinedErrorMessage" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="switchInput" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TD_macroVariables" type="TableDenormalization" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures aggregate="first" denormalize="${sys_configParameters}" source="FT_macroVariables" valuename="#Value" />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_macroVariables" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="${sys_configParameters}" />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TA_countInput" type="TableAggregation" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_accuracyTarget" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="count" name="Count" type="text">&#xd;
            &lt;input nameref="${db_dimensionMeasure}" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606312757856" name="FT_macroVariablesDimLoop" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TD_macroVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="service_pod" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="_pod" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
            &lt;default>&#xd;
              &lt;result constant="" />&#xd;
            &lt;/default>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters&gt;&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" /&gt;&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type&gt;String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d1]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed3" type="String" /&gt;&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered&gt;true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d1]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="${sys_prefix}OtherDim" include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache&gt;false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592375992294" name="FT_accuracyAddIndex" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[add rownumbers for table join]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FN_accuracyValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include=".">&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="§§§row§§§" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="#Value">&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FN_accuracyValues" type="FieldNormalization" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_splitAccuracy" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>values&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592375983829" name="TJ_mergeAccuracyAndDIms" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_accuracyDimsAddIndex" />&#xd;
        &lt;source nameref="FT_accuracyAddIndex" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" type="inner" unique="false">&#xd;
          &lt;left nameref="FT_accuracyDimsAddIndex">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/left>&#xd;
          &lt;right nameref="FT_accuracyAddIndex">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/right>&#xd;
          &lt;conditions>&#xd;
            &lt;condition type="eq" />&#xd;
          &lt;/conditions>&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592375962012" name="FT_accuracyDimsAddIndex" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[add rownumbers for table join]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TN_createAccuracy" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592376048730" name="FT_accuracy" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[add rownumbers for table join]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_mergeAccuracyAndDIms" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^§§§row§§§$|${db_dimensionTime}|^#Values$" include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1583857874279" name="TN_createAccuracy" type="TableNormalization" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Normalization for accuracy
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_accuracyTarget" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="#Value$|Month" include="." keepSourceOrder="false" />&#xd;
        &lt;measures normalize="${intern_accuracyDim}" valuename="#Values">&#xd;
          &lt;measure name="Linear Regression" type="text">&#xd;
            &lt;input constant="0" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure name="Support Vector Regression" type="text">&#xd;
            &lt;input constant="0" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure name="Extra Trees" type="text">&#xd;
            &lt;input constant="0" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure name="Random Forest" type="text">&#xd;
            &lt;input constant="0" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure name="Adaptive Boosting Regression" type="text">&#xd;
            &lt;input constant="0" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure name="Gradient Boosting Regression" type="text">&#xd;
            &lt;input constant="0" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure name="Nearest Neighbour Regression" type="text">&#xd;
            &lt;input constant="0" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_calculateShiftValues" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_inputFeatures" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="shift_by" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="c" constant="${intern_numberOfCombs}" type="int" />&#xd;
            &lt;input alias="shift" constant="${intern_shiftValue}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return shift * c;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="number_of_measures" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="measures" constant="${db_elementMeasure}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return measures.split("\\|").length]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="index" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowEndInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="index" type="int" />&#xd;
            &lt;input nameref="shift_by" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return index - shift_by]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowBeginLabels" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="shift" constant="${intern_shiftValue}" type="int" />&#xd;
            &lt;input alias="c" constant="${intern_numberOfCombs}" type="int" />&#xd;
            &lt;input alias="m" nameref="number_of_measures" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
            &lt;script>&lt;![CDATA[return ((shift * c) / m) + 1;]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowBeginQuery" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="index" type="int" />&#xd;
            &lt;input nameref="shift_by" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return index - shift_by + 1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^chunkStart$" include="_">&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="shift_by" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowEndInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowBeginLabels" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowBeginQuery" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_inputSize">&#xd;
            &lt;input nameref="index" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TA_trainLabels" type="TableAggregation" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Convert a column with a value in each row into a single string with comma separated values (this format is required for the web service).]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortLabels" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="true" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="group_concat" name="aip_trainLabels">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure aggregate="concat_distinct" name="selectedTarget">&#xd;
            &lt;input nameref="${db_dimensionMeasure}" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TJ_trainData" type="TableJoin" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TA_trainInputs" />&#xd;
        &lt;source nameref="TA_trainLabels" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" unique="false">&#xd;
          &lt;left nameref="TA_trainInputs" />&#xd;
          &lt;right nameref="TA_trainLabels" />&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_trainData" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_trainData" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="targetRename" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="target" nameref="selectedTarget" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return "prediction_target_" + target]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="aip_trainFeatures" type="Concatenation">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="aip_trainInputs" />&#xd;
            &lt;input nameref="aip_trainLabels" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;delimiter>,&lt;/delimiter>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="aip_featureNames" type="Concatenation">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="selectedInputs" />&#xd;
            &lt;input nameref="targetRename" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;delimiter>,&lt;/delimiter>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="sum" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="selectedInputs" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="selectedTarget" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="aip_trainFeatures" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="aip_featureNames" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TA_testData" type="TableAggregation" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Convert a column with a value in each row into a single string with comma separated values (this format is required for the web service).]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortQuerySet" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="true" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="group_concat" name="aip_testFeatures">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure aggregate="sum" name="test_set_sum">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_dateTransformQuery" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Adds date column which can be sorted for input]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_inputQuerySet" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache&gt;&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TV_sortQuerySet" type="TableView" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions
${intern_rowStop}
${intern_rowStart}]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TU_querySet" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimensionMeasure}" />&#xd;
        &lt;input nameref="${db_dimension1}" />&#xd;
        &lt;input nameref="${db_dimension2}" />&#xd;
        &lt;input nameref="${db_dimension3}" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TJ_regressionInput" type="TableJoin" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_trainData" />&#xd;
        &lt;source nameref="TA_testData" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" unique="false">&#xd;
          &lt;left nameref="FT_trainData" />&#xd;
          &lt;right nameref="TA_testData" />&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TA_getShiftValue" type="TableAggregation" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_calculateShiftValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="last" name="intern_rowEndInput">&#xd;
            &lt;input nameref="intern_rowEndInput" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure aggregate="last" name="intern_rowBeginLabels">&#xd;
            &lt;input nameref="intern_rowBeginLabels" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure aggregate="last" name="intern_rowBeginQuery">&#xd;
            &lt;input nameref="intern_rowBeginQuery" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TV_trimInput" type="TableView" modifiedBy="admin">&#xd;
      &lt;end>${intern_rowEndInput}&lt;/end>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortDate" />&#xd;
      &lt;/sources>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TV_trimLabels" type="TableView" modifiedBy="admin">&#xd;
      &lt;start>${intern_rowBeginLabels}&lt;/start>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortLabelsDate" />&#xd;
      &lt;/sources>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TV_trimQuerySetBeginning" type="TableView" modifiedBy="admin">&#xd;
      &lt;start>${intern_rowBeginQuery}&lt;/start>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortDate" />&#xd;
      &lt;/sources>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TU_querySet" type="TableUnion" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_trimQuerySetBeginning" />&#xd;
        &lt;source nameref="FT_dateTransformQuery" />&#xd;
      &lt;/sources>&#xd;
      &lt;cache>true&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_getNumberCombs" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="OUTPUT_numberOfCombs" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="index" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate name="index">&#xd;
            &lt;input nameref="index" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TA_getNumberCombs" type="TableAggregation" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_getNumberCombs" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="last" name="intern_numberOfCombs">&#xd;
            &lt;input nameref="index" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TV_sortDate" type="TableView" modifiedBy="admin">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_dateTransformInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="date_sort" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TV_sortLabelsDate" type="TableView" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions
${intern_rowStop}
${intern_rowStart}]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_dateTransformLabels" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="date_sort" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_dateTransformLabels" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Adds date column which can be sorted for input]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_inputLabels" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="TV_sortLabels" type="TableView" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions
${intern_rowStop}
${intern_rowStart}]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_trimLabels" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimension1}" />&#xd;
        &lt;input nameref="${db_dimension2}" />&#xd;
        &lt;input nameref="${db_dimension3}" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1582538264434" name="FT_shiftedInput" type="FieldTransform" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Input for Loop job containing variables.
Calculates all the time related variables automatically.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TA_getNumberCombs" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="format_date" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstTrgYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="format_date" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstTargetMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_periodEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="strVal" constant="${ext_numValues}" type="String" />&#xd;
            &lt;input alias="elemEnd" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="date" nameref="format_date" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${intern_dateFormat}" type="String" />&#xd;
            &lt;input alias="usedFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="shift" constant="${ext_shiftValue}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
            &lt;script>&lt;![CDATA[import groovy.time.TimeCategory;

Date e;



  Date d = Date.parse(internFormat, date);

  use(TimeCategory) {

  e = d + (strVal.toInteger()-1-shift).months; 

  }


return e.format(internFormat);]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastTrgYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastTargetMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockTrgBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="lastTrgMonth" nameref="intern_lastTargetMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-lastTrgMonth+1; // full year plus rest of year



rolling = "(";







//first month







first = lastTrgMonth+1;







if(first > 12)







  return "§";







if(first &lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(first &lt;10)







  rolling = rolling+"${time_leadingZero}"+first;







  else







  rolling = rolling+""+first;







for (i = lastTrgMonth+2; i &lt;=12; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}1";







  else if(i&lt;10)







  rolling = rolling+"|${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockTrgEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstTargetMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)







  return "§";







nval = 12+12-intern_firstMonth+1; // full year plus rest of year







rolling = "(";







for (i = 1; i &lt;intern_firstMonth; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(i&lt;10)







  rolling = rolling+"|"+"${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_trgtYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_firstTrgYear" type="int" />&#xd;
            &lt;input nameref="intern_lastTrgYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[range = intern_lastTrgYear-intern_firstTrgYear;















trgtRng = "("+intern_firstTrgYear;















for(i=1;i&lt;=range;i++)















{















  trgtRng+= "|"+(intern_firstTrgYear+i) ;















}







return trgtRng+")";]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractQueryAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_trgtYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days



arr = format.split("\\" + sep);



if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  return "^" + month + sep + year + day



}



  else {



  return "^" + year + sep + month + day 



  }



}



else{



df = dailyFormat.split("\\" + sep);



def resultArr = new String[3];



  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    resultArr[i] = month



    }



    else if (df[i].toUpperCase().contains("D")) {



    resultArr[i] = day    



    }



    else {



    resultArr[i] = year



    } 



  }



return resultArr.join(sep);  



}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractQueryDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_trgtYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_firstTrgYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockTrgEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_lastTrgYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockTrgBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);







if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  //Don't need to care for days for s1.



  s1 = month1 + sep + year1;



  s2 = month2 + sep + year2 + day;



  s3 = month3 + sep + year3 + day;



  }



  else {



  s1 = year1 + sep + month1; 



  s2 = year2 + sep + month2 + day;



  s3 = year3 + sep + month3 + day;



  }



}



else{



df = dailyFormat.split("\\" + sep);



s1 = new String[3];



s2 = new String[3];



s3 = new String[3];







  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    s1[i] = month1;



    s2[i] = month2;



    s3[i] = month3;



    }



    else if (df[i].toUpperCase().contains("D")) {



    s2[i] = day;



    s3[i] = day;    



    }



    else if (df[i].toUpperCase().contains("Y")){



    s1[i] = year1;



    s2[i] = year2;



    s3[i] = year3;



    } 



  }



  s1 = s1 - null;



  s1 = s1.join(sep);



  s2 = s2.join(sep);



  s3 = s3.join(sep);



  



}



return s1 + "|" + s2 +"|"+ s3 ;







//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate name="intern_extractQueryAccept">&#xd;
            &lt;input nameref="intern_extractQueryAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractQueryDeny">&#xd;
            &lt;input nameref="intern_extractQueryDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_numberOfCombs">&#xd;
            &lt;input nameref="intern_numberOfCombs" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606947877840" name="FT_variablesStaticTokenInput_pod" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input for Loop job containing variables.
Calculates all the time related variables automatically.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="VAR_service" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="format_date" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstTrgYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="format_date" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numPeriods" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_firstTrgYear" type="int" />&#xd;
            &lt;input nameref="intern_firstDbYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>false&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return intern_firstTrgYear-intern_firstDbYear;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstDbYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_inputStartDate}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_inputStartDate}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstTargetMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_periodEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="strVal" constant="${ext_numValues}" type="String" />&#xd;
            &lt;input alias="elemEnd" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="date" nameref="format_date" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${intern_dateFormat}" type="String" />&#xd;
            &lt;input alias="usedFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[import groovy.time.TimeCategory;

Date e;



if("${time_elementEnd}"=="")



{

  Date d = Date.parse(internFormat, date);

  use(TimeCategory) {

  e = d + (strVal.toInteger()-1).months; 

  }

}

else {

 e = Date.parse(usedFormat, elemEnd);



}

return e.format(internFormat);]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastTrgYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_srcYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_numPeriods" type="int" />&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstTargetMonth" type="String" />&#xd;
            &lt;input nameref="intern_firstTrgYear" type="String" />&#xd;
            &lt;input alias="firstDbYear" nameref="intern_firstDbYear" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[srcYearRng = "(" + firstDbYear;
int firstDBYear = firstDbYear.toInteger();
for(i=1;i&lt;intern_numPeriods;i++){







 srcYearRng =  srcYearRng+"|"+(firstDBYear+i);







}















if(intern_firstMonth == "01")







{







  srcYearRng = srcYearRng + ")";







}







else







{







  srcYearRng = srcYearRng +"|"+ intern_firstTrgYear + ")";







}







return srcYearRng;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastTargetMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)







  return "§";







nval = 12+12-intern_firstMonth+1; // full year plus rest of year







rolling = "(";







for (i = 1; i &lt;intern_firstMonth; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(i&lt;10)







  rolling = rolling+"|"+"${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstTargetMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-intern_firstMonth+1; // full year plus rest of year







rolling = "(";







//first month







first = intern_firstMonth;







if(first > 12)







  return "§";







if(first &lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(first &lt;10)







  rolling = rolling+"${time_leadingZero}"+first;







  else







  rolling = rolling+""+first;







for (i = intern_firstMonth+1; i &lt;=12; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}1";







  else if(i&lt;10)







  rolling = rolling+"|${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockTrgBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="lastTrgMonth" nameref="intern_lastTargetMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-lastTrgMonth+1; // full year plus rest of year



rolling = "(";







//first month







first = lastTrgMonth+1;







if(first > 12)







  return "§";







if(first &lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(first &lt;10)







  rolling = rolling+"${time_leadingZero}"+first;







  else







  rolling = rolling+""+first;







for (i = lastTrgMonth+2; i &lt;=12; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}1";







  else if(i&lt;10)







  rolling = rolling+"|${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockTrgEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstTargetMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)







  return "§";







nval = 12+12-intern_firstMonth+1; // full year plus rest of year







rolling = "(";







for (i = 1; i &lt;intern_firstMonth; i++)







{







  if(i&lt;2)







  rolling += "${time_leadingZero}"+"1";







  else if(i&lt;10)







  rolling = rolling+"|"+"${time_leadingZero}"+i;







  else







  rolling = rolling+"|"+i;







}







rolling +=")";







return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_trgtYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_firstTrgYear" type="int" />&#xd;
            &lt;input nameref="intern_lastTrgYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[range = intern_lastTrgYear-intern_firstTrgYear;















trgtRng = "("+intern_firstTrgYear;















for(i=1;i&lt;=range;i++)















{















  trgtRng+= "|"+(intern_firstTrgYear+i) ;















}







return trgtRng+")";]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numValues" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="firstYear" nameref="intern_firstTrgYear" type="int" />&#xd;
            &lt;input alias="lastYear" nameref="intern_lastTrgYear" type="int" />&#xd;
            &lt;input alias="firstMonth" nameref="intern_firstTargetMonth" type="int" />&#xd;
            &lt;input alias="lastMonth" nameref="intern_lastTargetMonth" type="int" />&#xd;
            &lt;input alias="daily" constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[points = 0;







if(firstYear==lastYear){







  points = 1 + lastMonth-firstMonth;







} else{







  points = 1+(lastMonth + ((lastYear-firstYear)*12)) - firstMonth;







}















if(daily != "\$"){







  points = points * 31;







}















return points;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_srcYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days



arr = format.split("\\" + sep);



if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  return "^" + month + sep + year + day



}



  else {



  return "^" + year + sep + month + day 



  }



}



else{



df = dailyFormat.split("\\" + sep);



def resultArr = new String[3];



  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    resultArr[i] = month



    }



    else if (df[i].toUpperCase().contains("D")) {



    resultArr[i] = day    



    }



    else {



    resultArr[i] = year



    } 



  }



return resultArr.join(sep);  



}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_srcYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_firstTrgYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockSrcEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_firstDbYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockSrcBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);







if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  //Don't need to care for days for s1.



  s1 = month1 + sep + year1;



  s2 = month2 + sep + year2 + day;



  s3 = month3 + sep + year3 + day;



  }



  else {



  s1 = year1 + sep + month1; 



  s2 = year2 + sep + month2 + day;



  s3 = year3 + sep + month3 + day;



  }



}



else{



df = dailyFormat.split("\\" + sep);



s1 = new String[3];



s2 = new String[3];



s3 = new String[3];







  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    s1[i] = month1;



    s2[i] = month2;



    s3[i] = month3;



    }



    else if (df[i].toUpperCase().contains("D")) {



    s2[i] = day;



    s3[i] = day;    



    }



    else if (df[i].toUpperCase().contains("Y")){



    s1[i] = year1;



    s2[i] = year2;



    s3[i] = year3;



    } 



  }



  s1 = s1 - null;



  s1 = s1.join(sep);



  s2 = s2.join(sep);



  s3 = s3.join(sep);



  



}



return s1 + "|" + s2 +"|"+ s3 ;







//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractTargetAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_trgtYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days



arr = format.split("\\" + sep);



if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  return "^" + month + sep + year + day



}



  else {



  return "^" + year + sep + month + day 



  }



}



else{



df = dailyFormat.split("\\" + sep);



def resultArr = new String[3];



  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    resultArr[i] = month



    }



    else if (df[i].toUpperCase().contains("D")) {



    resultArr[i] = day    



    }



    else {



    resultArr[i] = year



    } 



  }



return resultArr.join(sep);  



}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractTargetDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_trgtYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_firstTrgYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockTrgEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_lastTrgYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockTrgBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);







if (day == "\$") {



  if (arr[0].toUpperCase().contains("M")){



  //Don't need to care for days for s1.



  s1 = month1 + sep + year1;



  s2 = month2 + sep + year2 + day;



  s3 = month3 + sep + year3 + day;



  }



  else {



  s1 = year1 + sep + month1; 



  s2 = year2 + sep + month2 + day;



  s3 = year3 + sep + month3 + day;



  }



}



else{



df = dailyFormat.split("\\" + sep);



s1 = new String[3];



s2 = new String[3];



s3 = new String[3];







  for (i = 0; i &lt; 3; i++){



    if (df[i].toUpperCase().contains("M")) {



    s1[i] = month1;



    s2[i] = month2;



    s3[i] = month3;



    }



    else if (df[i].toUpperCase().contains("D")) {



    s2[i] = day;



    s3[i] = day;    



    }



    else if (df[i].toUpperCase().contains("Y")){



    s1[i] = year1;



    s2[i] = year2;



    s3[i] = year3;



    } 



  }



  s1 = s1 - null;



  s1 = s1.join(sep);



  s2 = s2.join(sep);



  s3 = s3.join(sep);



  



}



return s1 + "|" + s2 +"|"+ s3 ;







//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_trgtYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days



arr = format.split("\\" + sep);



  if (arr[0].toUpperCase().contains("M")){



  return "^" + month + sep + year + "\$";



}



  else {



  return "^" + year + sep + month + "\$"; 



  }]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_trgtYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_firstTrgYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockTrgEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_lastTrgYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockTrgBeginning" />&#xd;
            &lt;input alias="day" constant="$" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);







  if (arr[0].toUpperCase().contains("M")){



  //Don't need to care for days for s1.



  s1 = month1 + sep + year1;



  s2 = month2 + sep + year2 + day;



  s3 = month3 + sep + year3 + day;



  }



  else {



  s1 = year1 + sep + month1; 



  s2 = year2 + sep + month2 + day;



  s3 = year3 + sep + month3 + day;



  }







return s1 + "|" + s2 +"|"+ s3 ;







//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="time_currentFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
            &lt;/default&gt;&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="${time_dateFormatSourceDaily}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="yyyyMM" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="yyyyMM" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="yyyyMMdd" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="ext_shiftValue" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="sep" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="shift" constant="${ext_shiftValue}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[if (sep == "\$")
{
	return shift
}
  else
  {
  return shift*28
  }]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_api" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="api" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="ai/api" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_combinedURL" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${sys_AIssistedURL}:${sys_AIssistedPort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="jedox" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_protocol" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="https" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="http" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate name="aip_numPeriods">&#xd;
            &lt;input nameref="intern_numPeriods" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="time_elementEnd">&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractSourceAccept">&#xd;
            &lt;input nameref="intern_extractSourceAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractSourceDeny">&#xd;
            &lt;input nameref="intern_extractSourceDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractTargetAccept">&#xd;
            &lt;input nameref="intern_extractTargetAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractTargetDeny">&#xd;
            &lt;input nameref="intern_extractTargetDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractCopyAccept">&#xd;
            &lt;input nameref="intern_extractCopyAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_extractCopyDeny">&#xd;
            &lt;input nameref="intern_extractCopyDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="time_currentFormat">&#xd;
            &lt;input nameref="time_currentFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_dateFormat">&#xd;
            &lt;input nameref="intern_dateFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_shiftValue">&#xd;
            &lt;input nameref="ext_shiftValue" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_api" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_combinedURL" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_protocol" /&gt;&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_bearer">&#xd;
            &lt;input constant="QUAMQUAMSUNTSUBAQUASUBAQUAMALEDICERETRACTANT" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1610462021000" name="FT_roundValues" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_mergeOutput" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="values1" type="NumberFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;pattern>0.0000&lt;/pattern>&#xd;
            &lt;moveSign>left&lt;/moveSign>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="values2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="fff" nameref="values1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[sign = fff.substring(0,1);
res = sign =~ /d/;
if (res)
	return res[0];
else
  return "-"+fff.substring(1);]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
  &lt;/transforms>&#xd;
  &lt;loads>&#xd;
    &lt;load modified="1582538264434" name="LOAD_result" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>Load Prediction data&#xd;
ADAPT for own dimensions - Make sure you have added version(s) for prediction/upper/lower or accuracy&lt;/comment>&#xd;
      &lt;source nameref="FT_processForecast" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>insert&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="none" deactivateSVS="false" name="${sys_targetCube}" splash="default" />&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1582538264434" name="LOAD_accuracy" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Only needed if you want to store Accuracy values]]&gt;&lt;/comment>&#xd;
      &lt;source nameref="FT_accuracy" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>insert&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="none" deactivateSVS="false" name="Accuracy_${sys_sourceCube}" splash="default" />&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1582538264434" name="LOAD_clearOutput" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>Clear prediction data&#xd;
ADAPT for own dimensions&#xd;
If using the extended dimension version change the Data Source to "EXTRACT_clear_target_values_extended"&lt;/comment>&#xd;
      &lt;source nameref="INPUT_targetValues_clearJob" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>delete&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="noneWithDefaultWrite" deactivateSVS="false" name="${sys_targetCube}" splash="default" />&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1582538264434" name="LOAD_clearAccuracy" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Clear accuracy data]]&gt;&lt;/comment>&#xd;
      &lt;source nameref="INPUT_clearAccuracy" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>delete&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="none" deactivateSVS="false" name="Accuracy_${sys_sourceCube}" splash="default" />&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1582538264434" name="DIM_updateVersions" type="Dimension" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Adds the prediction element &amp; ..._loer, ..._upper to the Version dimension]]&gt;&lt;/comment>&#xd;
      &lt;source nameref="CT_addVersions" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;dimension name="${db_dimensionVersion}">&#xd;
        &lt;elements mode="insert" />&#xd;
        &lt;consolidations mode="inactive" />&#xd;
        &lt;attributes mode="inactive" />&#xd;
      &lt;/dimension>&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1582538264434" name="DIM_addAccuracy" type="Dimension" modifiedBy="admin">&#xd;
      &lt;comment>Adds the Accuracy dimension to the database.&lt;/comment>&#xd;
      &lt;source nameref="TLE_DIM_addAccuracy" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;dimension name="${intern_accuracyDim}">&#xd;
        &lt;elements mode="insert" />&#xd;
        &lt;consolidations mode="inactive" />&#xd;
        &lt;attributes mode="inactive" />&#xd;
      &lt;/dimension>&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1582538264434" name="LOAD_createAccuracyCube" type="Cube" modifiedBy="admin">&#xd;
      &lt;comment>Only needed if you want to store Accuracy values&lt;/comment>&#xd;
      &lt;source nameref="TN_createAccuracy" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>create&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="none" deactivateSVS="false" name="Accuracy_${sys_sourceCube}" splash="default" />&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1582538264434" name="CP_copyFunction" type="CubeSliceCopy" modifiedBy="admin">&#xd;
      &lt;source nameref="FT_processCopy" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;copyMode>copy&lt;/copyMode>&#xd;
      &lt;cube name="${sys_sourceCube}" useRules="true" />&#xd;
      &lt;dimensions>&#xd;
        &lt;dimension name="${db_dimensionMeasure}">&#xd;
          &lt;mapFrom nameref="${db_dimensionMeasure}" />&#xd;
          &lt;mapTo nameref="${db_dimensionMeasure}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimensionTime}">&#xd;
          &lt;mapFrom nameref="sourceMonth" />&#xd;
          &lt;mapTo nameref="${db_dimensionTime}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimensionVersion}">&#xd;
          &lt;mapFrom nameref="sourceVersion" />&#xd;
          &lt;mapTo nameref="targetVersion" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension1}">&#xd;
          &lt;mapFrom nameref="${db_dimension1}" />&#xd;
          &lt;mapTo nameref="${db_dimension1}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension2}">&#xd;
          &lt;mapFrom nameref="${db_dimension2}" />&#xd;
          &lt;mapTo nameref="${db_dimension2}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension3}">&#xd;
          &lt;mapFrom nameref="${db_dimension3}" />&#xd;
          &lt;mapTo nameref="${db_dimension3}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension4}">&#xd;
          &lt;mapFrom nameref="${db_dimension4}" />&#xd;
          &lt;mapTo nameref="${db_dimension4}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension5}">&#xd;
          &lt;mapFrom nameref="${db_dimension5}" />&#xd;
          &lt;mapTo nameref="${db_dimension5}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension6}">&#xd;
          &lt;mapFrom nameref="${db_dimension6}" />&#xd;
          &lt;mapTo nameref="${db_dimension6}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension7}">&#xd;
          &lt;mapFrom nameref="${db_dimension7}" />&#xd;
          &lt;mapTo nameref="${db_dimension7}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension8}">&#xd;
          &lt;mapFrom nameref="${db_dimension8}" />&#xd;
          &lt;mapTo nameref="${db_dimension8}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension9}">&#xd;
          &lt;mapFrom nameref="${db_dimension9}" />&#xd;
          &lt;mapTo nameref="${db_dimension9}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension10}">&#xd;
          &lt;mapFrom nameref="${db_dimension10}" />&#xd;
          &lt;mapTo nameref="${db_dimension10}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension11}">&#xd;
          &lt;mapFrom nameref="${db_dimension11}" />&#xd;
          &lt;mapTo nameref="${db_dimension11}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension12}">&#xd;
          &lt;mapFrom nameref="${db_dimension12}" />&#xd;
          &lt;mapTo nameref="${db_dimension12}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension13}">&#xd;
          &lt;mapFrom nameref="${db_dimension13}" />&#xd;
          &lt;mapTo nameref="${db_dimension13}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension14}">&#xd;
          &lt;mapFrom nameref="${db_dimension14}" />&#xd;
          &lt;mapTo nameref="${db_dimension14}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension15}">&#xd;
          &lt;mapFrom nameref="${db_dimension15}" />&#xd;
          &lt;mapTo nameref="${db_dimension15}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension16}">&#xd;
          &lt;mapFrom nameref="${db_dimension16}" />&#xd;
          &lt;mapTo nameref="${db_dimension16}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension17}">&#xd;
          &lt;mapFrom nameref="${db_dimension17}" />&#xd;
          &lt;mapTo nameref="${db_dimension17}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension18}">&#xd;
          &lt;mapFrom nameref="${db_dimension18}" />&#xd;
          &lt;mapTo nameref="${db_dimension18}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension19}">&#xd;
          &lt;mapFrom nameref="${db_dimension19}" />&#xd;
          &lt;mapTo nameref="${db_dimension19}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension20}">&#xd;
          &lt;mapFrom nameref="${db_dimension20}" />&#xd;
          &lt;mapTo nameref="${db_dimension20}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension21}">&#xd;
          &lt;mapFrom nameref="${db_dimension21}" />&#xd;
          &lt;mapTo nameref="${db_dimension21}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension22}">&#xd;
          &lt;mapFrom nameref="${db_dimension22}" />&#xd;
          &lt;mapTo nameref="${db_dimension22}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension23}">&#xd;
          &lt;mapFrom nameref="${db_dimension23}" />&#xd;
          &lt;mapTo nameref="${db_dimension23}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension24}">&#xd;
          &lt;mapFrom nameref="${db_dimension24}" />&#xd;
          &lt;mapTo nameref="${db_dimension24}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension25}">&#xd;
          &lt;mapFrom nameref="${db_dimension25}" />&#xd;
          &lt;mapTo nameref="${db_dimension25}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension26}">&#xd;
          &lt;mapFrom nameref="${db_dimension26}" />&#xd;
          &lt;mapTo nameref="${db_dimension26}" />&#xd;
        &lt;/dimension>&#xd;
        &lt;dimension name="${db_dimension27}">&#xd;
          &lt;mapFrom nameref="${db_dimension27}" />&#xd;
          &lt;mapTo nameref="${db_dimension27}" />&#xd;
        &lt;/dimension>&#xd;
      &lt;/dimensions>&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1582882778796" name="DIM_removeAICube" type="Dimension" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Adds the Accuracy dimension to the database.]]&gt;&lt;/comment>&#xd;
      &lt;source nameref="CT_removeAICube" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;dimension name="${sys_configCubes}">&#xd;
        &lt;elements mode="delete" />&#xd;
        &lt;consolidations mode="inactive" />&#xd;
        &lt;attributes mode="inactive" />&#xd;
      &lt;/dimension>&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1583188099346" name="LOAD_clearSetup" type="Cube" modifiedBy="admin">&#xd;
      &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode&gt;delete&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="none" deactivateSVS="true" name="${sys_aiConfigCube}" />&#xd;
    &lt;/load>&#xd;
  &lt;/loads>&#xd;
  &lt;jobs>&#xd;
    &lt;job modified="1582538264434" name="MainJob" type="Parallel" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Main job - entry point for call from outside]]&gt;&lt;/comment>&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Loop_externalVariables" parallel="false" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1583188760736" name="ClearSetup" type="Parallel" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Clear job - clears all values in the prediction slices &amp; accuracy cube]]&gt;&lt;/comment>&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="LOAD_clearSetup" parallel="false" type="load" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606947888741" name="PresetStaticInput" type="Loop" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Sets variables for main job]]&gt;&lt;/comment>&#xd;
      &lt;loop nameref="FT_variablesStaticTokenInput${service_pod}" />&#xd;
      &lt;execution nameref="Loop_getNumberOfCombinations" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="intern_bearer">&#xd;
          &lt;input nameref="intern_bearer" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_numPeriods">&#xd;
          &lt;input nameref="aip_numPeriods" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_elementEnd">&#xd;
          &lt;input nameref="time_elementEnd" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_extractSourceAccept">&#xd;
          &lt;input nameref="intern_extractSourceAccept" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_extractSourceDeny">&#xd;
          &lt;input nameref="intern_extractSourceDeny" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_extractTargetAccept">&#xd;
          &lt;input nameref="intern_extractTargetAccept" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_extractTargetDeny">&#xd;
          &lt;input nameref="intern_extractTargetDeny" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_extractCopyAccept">&#xd;
          &lt;input nameref="intern_extractCopyAccept" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_extractCopyDeny">&#xd;
          &lt;input nameref="intern_extractCopyDeny" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_currentFormat">&#xd;
          &lt;input nameref="time_currentFormat" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_dateFormat">&#xd;
          &lt;input nameref="intern_dateFormat" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_shiftValue">&#xd;
          &lt;input nameref="intern_shiftValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="service_api">&#xd;
          &lt;input nameref="service_api" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="service_combinedURL">&#xd;
          &lt;input nameref="service_combinedURL" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="service_protocol">&#xd;
          &lt;input nameref="service_protocol" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1582538264434" name="Loop_inputValues" type="Loop" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Sets the variable aip_inputValues to the returned values of the INPUT path (Extract from source cube)]]&gt;&lt;/comment>&#xd;
      &lt;loop nameref="TJ_regressionInput" />&#xd;
      &lt;execution nameref="SW_emptyCheck" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="aip_trainFeatures">&#xd;
          &lt;input nameref="aip_trainFeatures" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_inputSum">&#xd;
          &lt;input nameref="sum" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_testFeatures">&#xd;
          &lt;input nameref="aip_testFeatures" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_featureNames">&#xd;
          &lt;input nameref="aip_featureNames" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_targetFeature">&#xd;
          &lt;input nameref="selectedTarget" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1582538264434" name="SW_executionLogic" type="Switch" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Checks if the prediction returns success state, then triggers copying and loading data.]]&gt;&lt;/comment>&#xd;
      &lt;switchOn>&#xd;
        &lt;source nameref="FT_switchControlResult" row="1">&#xd;
          &lt;input nameref="switchInput" />&#xd;
        &lt;/source>&#xd;
      &lt;/switchOn>&#xd;
      &lt;switchs>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="1" />&#xd;
          &lt;execution nameref="EXECUTE_resultLoading" type="job" />&#xd;
        &lt;/switch>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="2" />&#xd;
          &lt;execution nameref="EXECUTE_resultLoadingWOaccuracy" type="job" />&#xd;
        &lt;/switch>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="0" />&#xd;
          &lt;execution nameref="GRV_logWsError" type="job" />&#xd;
        &lt;/switch>&#xd;
      &lt;/switchs>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1582538264434" name="EXECUTE_resultLoading" type="Standard" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Start copying and result loading (called by Switch job)]]&gt;&lt;/comment>&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="DIM_addAccuracy" type="load" />&#xd;
        &lt;execution nameref="CP_copyFunction" type="load" />&#xd;
        &lt;execution nameref="LOAD_result" type="load" />&#xd;
        &lt;execution nameref="LOAD_accuracy" type="load" />&#xd;
        &lt;execution nameref="GRV_logOutput" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1582538264434" name="SW_emptyCheck" type="Switch" modifiedBy="admin">&#xd;
      &lt;comment>Checks if the prediction returns success state, then triggers copying and loading data.&lt;/comment>&#xd;
      &lt;switchOn>&#xd;
        &lt;source nameref="CT_inputCheck" row="1">&#xd;
          &lt;input nameref="inputValues" />&#xd;
        &lt;/source>&#xd;
      &lt;/switchOn>&#xd;
      &lt;switchs>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="deny" value="0" />&#xd;
          &lt;execution nameref="SW_executionLogic" type="job" />&#xd;
        &lt;/switch>&#xd;
      &lt;/switchs>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1582538264434" name="UpdateExistingDatabase" type="Standard" modifiedBy="admin">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="DIM_addAccuracy" type="load" />&#xd;
      &lt;/executions>&#xd;
      &lt;comment>Update an existing database with new version elements and accuracy dimension &amp;amp; cube&lt;/comment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1582538264434" name="EXECUTE_resultLoadingWOaccuracy" type="Standard" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Start copying and result loading (called by Switch job)]]&gt;&lt;/comment>&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="CP_copyFunction" type="load" />&#xd;
        &lt;execution nameref="LOAD_result" type="load" />&#xd;
        &lt;execution nameref="GRV_logOutput" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606904607012" name="Loop_externalVariables" type="Loop" modifiedBy="peter">&#xd;
      &lt;loop nameref="FT_macroVariablesDimLoop" />&#xd;
      &lt;execution nameref="PresetStaticInput" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="service_pod">&#xd;
          &lt;input nameref="service_pod" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_elementStart">&#xd;
          &lt;input nameref="${sys_prefix}PredictionDurationStart" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_targetCube">&#xd;
          &lt;input constant="${sys_sourceCube}" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_predictionType">&#xd;
          &lt;input nameref="${sys_prefix}PredictionType" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_accuracyFlag">&#xd;
          &lt;input nameref="${sys_prefix}PredictionAccuracyCube" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementTargetVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionTargetValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionTime">&#xd;
          &lt;input nameref="${sys_prefix}TimeName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="ext_numValues">&#xd;
          &lt;input nameref="${sys_prefix}PredictionDuration" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureValueRegexed" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_dateDailySeparator">&#xd;
          &lt;input nameref="${sys_prefix}DateDailySeparator" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_inputStartDate">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueStart" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementTargetMeasure">&#xd;
          &lt;input nameref="${sys_prefix}TargetMeasureValueRegexed" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension1">&#xd;
          &lt;input nameref="dim1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim1">&#xd;
          &lt;input nameref="elem1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode1">&#xd;
          &lt;input nameref="mode1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension2">&#xd;
          &lt;input nameref="dim2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim2">&#xd;
          &lt;input nameref="elem2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode2">&#xd;
          &lt;input nameref="mode2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension3">&#xd;
          &lt;input nameref="dim3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim3">&#xd;
          &lt;input nameref="elem3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode3">&#xd;
          &lt;input nameref="mode3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension4">&#xd;
          &lt;input nameref="dim4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim4">&#xd;
          &lt;input nameref="elem4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode4">&#xd;
          &lt;input nameref="mode4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension5">&#xd;
          &lt;input nameref="dim5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim5">&#xd;
          &lt;input nameref="elem5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode5">&#xd;
          &lt;input nameref="mode5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension6">&#xd;
          &lt;input nameref="dim6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim6">&#xd;
          &lt;input nameref="elem6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode6">&#xd;
          &lt;input nameref="mode6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension7">&#xd;
          &lt;input nameref="dim7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim7">&#xd;
          &lt;input nameref="elem7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode7">&#xd;
          &lt;input nameref="mode7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension8">&#xd;
          &lt;input nameref="dim8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim8">&#xd;
          &lt;input nameref="elem8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode8">&#xd;
          &lt;input nameref="mode8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension9">&#xd;
          &lt;input nameref="dim9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim9">&#xd;
          &lt;input nameref="elem9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode9">&#xd;
          &lt;input nameref="mode9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension10">&#xd;
          &lt;input nameref="dim10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim10">&#xd;
          &lt;input nameref="elem10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode10">&#xd;
          &lt;input nameref="mode10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension11">&#xd;
          &lt;input nameref="dim11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim11">&#xd;
          &lt;input nameref="elem11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode11">&#xd;
          &lt;input nameref="mode11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension12">&#xd;
          &lt;input nameref="dim12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim12">&#xd;
          &lt;input nameref="elem12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode12">&#xd;
          &lt;input nameref="mode12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension13">&#xd;
          &lt;input nameref="dim13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim13">&#xd;
          &lt;input nameref="elem13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode13">&#xd;
          &lt;input nameref="mode13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension14">&#xd;
          &lt;input nameref="dim14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim14">&#xd;
          &lt;input nameref="elem14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode14">&#xd;
          &lt;input nameref="mode14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension15">&#xd;
          &lt;input nameref="dim15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim15">&#xd;
          &lt;input nameref="elem15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode15">&#xd;
          &lt;input nameref="mode15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension16">&#xd;
          &lt;input nameref="dim16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim16">&#xd;
          &lt;input nameref="elem16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode16">&#xd;
          &lt;input nameref="mode16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension17">&#xd;
          &lt;input nameref="dim17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim17">&#xd;
          &lt;input nameref="elem17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode17">&#xd;
          &lt;input nameref="mode17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension18">&#xd;
          &lt;input nameref="dim18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim18">&#xd;
          &lt;input nameref="elem18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode18">&#xd;
          &lt;input nameref="mode18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension19">&#xd;
          &lt;input nameref="dim19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim19">&#xd;
          &lt;input nameref="elem19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode19">&#xd;
          &lt;input nameref="mode19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension20">&#xd;
          &lt;input nameref="dim20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim20">&#xd;
          &lt;input nameref="elem20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode20">&#xd;
          &lt;input nameref="mode20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension21">&#xd;
          &lt;input nameref="dim21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim21">&#xd;
          &lt;input nameref="elem21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode21">&#xd;
          &lt;input nameref="mode21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension22">&#xd;
          &lt;input nameref="dim22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim22">&#xd;
          &lt;input nameref="elem22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode22">&#xd;
          &lt;input nameref="mode22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension23">&#xd;
          &lt;input nameref="dim23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim23">&#xd;
          &lt;input nameref="elem23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode23">&#xd;
          &lt;input nameref="mode23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension24">&#xd;
          &lt;input nameref="dim24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim24">&#xd;
          &lt;input nameref="elem24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode24">&#xd;
          &lt;input nameref="mode24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension25">&#xd;
          &lt;input nameref="dim25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim25">&#xd;
          &lt;input nameref="elem25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode25">&#xd;
          &lt;input nameref="mode25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension26">&#xd;
          &lt;input nameref="dim26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim26">&#xd;
          &lt;input nameref="elem26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode26">&#xd;
          &lt;input nameref="mode26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension27">&#xd;
          &lt;input nameref="dim27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim27">&#xd;
          &lt;input nameref="elem27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode27">&#xd;
          &lt;input nameref="mode27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="ext_shiftValue">&#xd;
          &lt;input nameref="${sys_prefix}Shift" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1583189783639" name="ClearJob" type="Standard" modifiedBy="admin">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Loop_externalVariables_clearJob" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1582538264434" name="Loop_calculateShift" type="Loop" modifiedBy="admin">&#xd;
      &lt;loop nameref="TA_getShiftValue" />&#xd;
      &lt;execution nameref="Loop_inputValues" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="intern_rowEndInput">&#xd;
          &lt;input nameref="intern_rowEndInput" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_rowBeginLabels">&#xd;
          &lt;input nameref="intern_rowBeginLabels" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_rowBeginQuery">&#xd;
          &lt;input nameref="intern_rowBeginQuery" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1607125214563" name="GRV_logWsError" type="Groovy" modifiedBy="peter">&#xd;
      &lt;jobscript>&lt;![CDATA[extract = API.initSource("FT_switchControlResult");
extract.nextRow()

err = extract.getColumnString("combinedErrorMessage");
if(err.contains("1019"))
	err = err + ' - License error: Please check your license credentials and/or check if your license is expired';

if(err.contains("401"))
	err = err + ' - License error: Please check your license credentials and/or check if your license is expired';

LOG.warn(extract.getColumnString("combinedErrorMessage"));]]&gt;&lt;/jobscript>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1583858497249" name="GRV_logOutput" type="Groovy" modifiedBy="admin">&#xd;
      &lt;jobscript>&lt;![CDATA[extract = API.initSource("FT_trimOutputUpperLower");
extract.nextRow()

LOG.info("Web Service Output: " + extract.getColumnString("values"));

extract = API.initSource("AIP_extractResult");
extract.nextRow()

LOG.info("Accuracies: " + extract.getColumnString("validation_accuracy"));]]&gt;&lt;/jobscript>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1582538264434" name="Loop_getNumberOfCombinations" type="Loop" modifiedBy="admin">&#xd;
      &lt;loop nameref="FT_shiftedInput" />&#xd;
      &lt;execution nameref="Loop_calculateShift" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="intern_numberOfCombs">&#xd;
          &lt;input nameref="intern_numberOfCombs" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_extractQueryAccept">&#xd;
          &lt;input nameref="intern_extractQueryAccept" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_extractQueryDeny">&#xd;
          &lt;input nameref="intern_extractQueryDeny" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1583189639241" name="Loop_externalVariables_clearJob" type="Loop" modifiedBy="admin">&#xd;
      &lt;loop nameref="FT_macroVariablesDimLoop" />&#xd;
      &lt;execution nameref="SW_clearValues" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="time_elementStart">&#xd;
          &lt;input nameref="${sys_prefix}PredictionDurationStart" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_targetCube">&#xd;
          &lt;input constant="${sys_sourceCube}" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_predictionType">&#xd;
          &lt;input nameref="${sys_prefix}PredictionType" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_accuracyFlag">&#xd;
          &lt;input nameref="${sys_prefix}PredictionAccuracyCube" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementTargetVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionTargetValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionTime">&#xd;
          &lt;input nameref="${sys_prefix}TimeName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="ext_numValues">&#xd;
          &lt;input nameref="${sys_prefix}PredictionDuration" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureValueRegexed" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_dateDailySeparator">&#xd;
          &lt;input nameref="${sys_prefix}DateDailySeparator" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_inputStartDate">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueStart" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementTargetMeasure">&#xd;
          &lt;input nameref="${sys_prefix}TargetMeasureValueRegexed" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension1">&#xd;
          &lt;input nameref="dim1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim1">&#xd;
          &lt;input nameref="elem1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode1">&#xd;
          &lt;input nameref="mode1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension2">&#xd;
          &lt;input nameref="dim2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim2">&#xd;
          &lt;input nameref="elem2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode2">&#xd;
          &lt;input nameref="mode2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension3">&#xd;
          &lt;input nameref="dim3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim3">&#xd;
          &lt;input nameref="elem3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode3">&#xd;
          &lt;input nameref="mode3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension4">&#xd;
          &lt;input nameref="dim4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim4">&#xd;
          &lt;input nameref="elem4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode4">&#xd;
          &lt;input nameref="mode4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension5">&#xd;
          &lt;input nameref="dim5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim5">&#xd;
          &lt;input nameref="elem5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode5">&#xd;
          &lt;input nameref="mode5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension6">&#xd;
          &lt;input nameref="dim6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim6">&#xd;
          &lt;input nameref="elem6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode6">&#xd;
          &lt;input nameref="mode6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension7">&#xd;
          &lt;input nameref="dim7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim7">&#xd;
          &lt;input nameref="elem7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode7">&#xd;
          &lt;input nameref="mode7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension8">&#xd;
          &lt;input nameref="dim8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim8">&#xd;
          &lt;input nameref="elem8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode8">&#xd;
          &lt;input nameref="mode8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension9">&#xd;
          &lt;input nameref="dim9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim9">&#xd;
          &lt;input nameref="elem9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode9">&#xd;
          &lt;input nameref="mode9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension10">&#xd;
          &lt;input nameref="dim10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim10">&#xd;
          &lt;input nameref="elem10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode10">&#xd;
          &lt;input nameref="mode10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension11">&#xd;
          &lt;input nameref="dim11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim11">&#xd;
          &lt;input nameref="elem11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode11">&#xd;
          &lt;input nameref="mode11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension12">&#xd;
          &lt;input nameref="dim12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim12"&gt;&#xd;
          &lt;input nameref="elem12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode12">&#xd;
          &lt;input nameref="mode12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension13">&#xd;
          &lt;input nameref="dim13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim13">&#xd;
          &lt;input nameref="elem13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode13">&#xd;
          &lt;input nameref="mode13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension14">&#xd;
          &lt;input nameref="dim14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim14">&#xd;
          &lt;input nameref="elem14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode14">&#xd;
          &lt;input nameref="mode14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension15">&#xd;
          &lt;input nameref="dim15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim15">&#xd;
          &lt;input nameref="elem15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode15">&#xd;
          &lt;input nameref="mode15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension16">&#xd;
          &lt;input nameref="dim16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim16">&#xd;
          &lt;input nameref="elem16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode16">&#xd;
          &lt;input nameref="mode16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension17">&#xd;
          &lt;input nameref="dim17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim17">&#xd;
          &lt;input nameref="elem17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode17">&#xd;
          &lt;input nameref="mode17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension18">&#xd;
          &lt;input nameref="dim18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim18">&#xd;
          &lt;input nameref="elem18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode18">&#xd;
          &lt;input nameref="mode18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension19">&#xd;
          &lt;input nameref="dim19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim19">&#xd;
          &lt;input nameref="elem19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode19">&#xd;
          &lt;input nameref="mode19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension20">&#xd;
          &lt;input nameref="dim20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim20">&#xd;
          &lt;input nameref="elem20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode20">&#xd;
          &lt;input nameref="mode20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension21">&#xd;
          &lt;input nameref="dim21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim21">&#xd;
          &lt;input nameref="elem21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode21">&#xd;
          &lt;input nameref="mode21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension22">&#xd;
          &lt;input nameref="dim22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim22">&#xd;
          &lt;input nameref="elem22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode22">&#xd;
          &lt;input nameref="mode22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension23">&#xd;
          &lt;input nameref="dim23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim23">&#xd;
          &lt;input nameref="elem23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode23">&#xd;
          &lt;input nameref="mode23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension24">&#xd;
          &lt;input nameref="dim24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim24">&#xd;
          &lt;input nameref="elem24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode24">&#xd;
          &lt;input nameref="mode24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension25">&#xd;
          &lt;input nameref="dim25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim25">&#xd;
          &lt;input nameref="elem25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode25">&#xd;
          &lt;input nameref="mode25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension26">&#xd;
          &lt;input nameref="dim26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim26">&#xd;
          &lt;input nameref="elem26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode26">&#xd;
          &lt;input nameref="mode26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension27">&#xd;
          &lt;input nameref="dim27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim27">&#xd;
          &lt;input nameref="elem27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode27">&#xd;
          &lt;input nameref="mode27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="ext_shiftValue">&#xd;
          &lt;input nameref="${sys_prefix}Shift" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1583189144899" name="ClearValues" type="Parallel" modifiedBy="admin">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="LOAD_clearOutput" parallel="false" type="load" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1583189691158" name="SW_clearValues" type="Switch" modifiedBy="admin">&#xd;
      &lt;switchOn>&#xd;
        &lt;source nameref="CT_accuracyFlag" row="1">&#xd;
          &lt;input nameref="flag" />&#xd;
        &lt;/source>&#xd;
      &lt;/switchOn>&#xd;
      &lt;default>&#xd;
        &lt;execution nameref="ClearValues" type="job" />&#xd;
      &lt;/default>&#xd;
      &lt;switchs>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="1" />&#xd;
          &lt;execution nameref="ClearAccuracy" type="job" />&#xd;
        &lt;/switch>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="0" />&#xd;
          &lt;execution nameref="ClearValues" type="job" />&#xd;
        &lt;/switch>&#xd;
      &lt;/switchs>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1583189713072" name="ClearAccuracy" type="Parallel" modifiedBy="admin">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="LOAD_clearAccuracy" parallel="false" type="load" />&#xd;
        &lt;execution nameref="LOAD_clearOutput" parallel="false" type="load" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
  &lt;/jobs>&#xd;
&lt;/project>&#xd;
</e0></e0><e1><e0><!-- definition / p3 / ~ -->&lt;?xml version="1.0" encoding="UTF-8"?>&#xd;
&lt;project name="DeleteAIElements" version="20.4" modified="1585707921604" modifiedBy="admin" olapId="p3" format="strict">&#xd;
  &lt;headers>&#xd;
    &lt;header name="comment" modified="1585707921604" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[Clear AI Config Cube]]&gt;&lt;/comment>&#xd;
    &lt;/header>&#xd;
  &lt;/headers>&#xd;
  &lt;variables>&#xd;
    &lt;variable modified="1582846572928" name="sys_database" modifiedBy="admin">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Name of database used.
AIssistedWizardDemoData
PlanningModels]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582846564475" name="prefix" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>DB&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1582846627259" name="sys_configParamDim" modifiedBy="admin">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIParameters&lt;/default>&#xd;
    &lt;/variable>&#xd;
  &lt;/variables>&#xd;
  &lt;connections>&#xd;
    &lt;connection modified="1582538307096" name="CON_jedoxGlobal" type="JedoxOlap" modifiedBy="admin">&#xd;
      &lt;global nameref="localhost" />&#xd;
      &lt;database>${sys_database}&lt;/database>&#xd;
      &lt;ssl>trust&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
  &lt;/connections>&#xd;
  &lt;extracts>&#xd;
    &lt;extract modified="1582846640923" name="EXT_sysDimension" type="Dimension" modifiedBy="admin">&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query>&#xd;
        &lt;dimension name="${sys_configParamDim}">&#xd;
          &lt;condition operator="like" type="accept">&lt;![CDATA[^${prefix}]]&gt;&lt;/condition>&#xd;
        &lt;/dimension>&#xd;
      &lt;/query>&#xd;
      &lt;attributesMode>none&lt;/attributesMode>&#xd;
    &lt;/extract>&#xd;
  &lt;/extracts>&#xd;
  &lt;transforms />&#xd;
  &lt;loads>&#xd;
    &lt;load modified="1582846658703" name="LOAD_sysDimension" type="Dimension" modifiedBy="admin">&#xd;
      &lt;source nameref="EXT_sysDimension" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;dimension name="${sys_configParamDim}">&#xd;
        &lt;elements mode="delete" />&#xd;
        &lt;consolidations mode="inactive" />&#xd;
        &lt;attributes mode="inactive" />&#xd;
      &lt;/dimension>&#xd;
    &lt;/load>&#xd;
  &lt;/loads>&#xd;
  &lt;jobs />&#xd;
&lt;/project>&#xd;
</e0></e1></e1></cube>