<?xml version='1.0' encoding='utf-8'?><!-- CUBE "#_com.jedox.model.aissistedplanning.datapreparation~etls" --><cube><e0><e0><e0><!-- name / p2 / ~ -->DeleteAIElements</e0></e0><e1><e0><!-- name / p3 / ~ -->Outlier Detection</e0></e1><e2><e0><!-- name / p5 / ~ -->Data Preparation</e0></e2><e3><e0><!-- name / p7 / ~ -->Interpolation</e0></e3><e4><e0><!-- name / p9 / ~ -->Extrapolation</e0></e4></e0><e1><e0><e0><!-- definition / p2 / ~ -->&lt;?xml version="1.0" encoding="UTF-8"?>&#xd;
&lt;project name="DeleteAIElements" version="20.4" modified="1592988996160" modifiedBy="peter" olapId="p2" format="strict">&#xd;
  &lt;headers>&#xd;
    &lt;header name="comment" modified="1592988975814" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Clear AI Config Cube]]&gt;&lt;/comment>&#xd;
    &lt;/header>&#xd;
  &lt;/headers>&#xd;
  &lt;variables>&#xd;
    &lt;variable modified="1592988975814" name="sys_database" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Name of database used.
AIssistedWizardDemoData
PlanningModels]]&gt;&lt;/comment>&#xd;
      &lt;default>BikeRental_updated&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592988975814" name="regexVar" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>VD&lt;/default>&#xd;
    &lt;/variable>&#xd;
  &lt;/variables>&#xd;
  &lt;connections>&#xd;
    &lt;connection modified="1592988975814" name="CON_jedoxGlobal" type="JedoxOlap" modifiedBy="peter">&#xd;
      &lt;global nameref="localhost" />&#xd;
      &lt;database>${sys_database}&lt;/database>&#xd;
      &lt;ssl>trust&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
  &lt;/connections>&#xd;
  &lt;extracts>&#xd;
    &lt;extract modified="1592988975814" name="EXT_sysDimension" type="Dimension" modifiedBy="peter">&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query>&#xd;
        &lt;dimension name="#_#_CUBE__">&#xd;
          &lt;condition operator="like" type="accept">&lt;![CDATA[^${regexVar}]]&gt;&lt;/condition>&#xd;
        &lt;/dimension>&#xd;
      &lt;/query>&#xd;
      &lt;attributesMode>none&lt;/attributesMode>&#xd;
    &lt;/extract>&#xd;
  &lt;/extracts>&#xd;
  &lt;transforms />&#xd;
  &lt;loads>&#xd;
    &lt;load modified="1592988975814" name="LOAD_sysDimension" type="Dimension" modifiedBy="peter">&#xd;
      &lt;source nameref="EXT_sysDimension" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;dimension name="#_#_CUBE__">&#xd;
        &lt;elements mode="delete" />&#xd;
        &lt;consolidations mode="inactive" />&#xd;
        &lt;attributes mode="inactive" />&#xd;
      &lt;/dimension>&#xd;
    &lt;/load>&#xd;
  &lt;/loads>&#xd;
  &lt;jobs />&#xd;
&lt;/project>&#xd;
</e0></e0><e1><e0><!-- definition / p3 / ~ -->&lt;?xml version="1.0" encoding="UTF-8"?>&#xd;
&lt;project name="Outlier Detection" version="20.4" format="strict" modified="1610457174544" modifiedBy="peter" olapId="p3">&#xd;
  &lt;headers>&#xd;
    &lt;header name="comment" modified="1592994669086" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Project description]]&gt;&lt;/comment>&#xd;
    &lt;/header>&#xd;
  &lt;/headers>&#xd;
  &lt;variables>&#xd;
    &lt;variable modified="1592994680551" name="sys_configParameters" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIParameters&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension19" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim19&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension18" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim18&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension15" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim15&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension14" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim14&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension17" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim17&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension16" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim16&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension11" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim11&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode19" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension10" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension13" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim13&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode17" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension12" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode18" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode15" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode16" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode13" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode14" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode22" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode23" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode20" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode21" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimensionTime" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"&#xd;
Use this dimension for time&lt;/comment>&#xd;
      &lt;default>timeDim&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim14" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem14&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim15" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem15&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim16" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem16&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim17" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem17&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim18" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element18&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension26" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim26&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim19" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element19&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension25" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim25&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension27" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim27&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension22" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim22&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension21" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim21&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension24" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim24&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension23" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim23&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension1" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension2" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension3" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim3&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension20" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim20&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension4" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim4&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension5" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim5&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode11" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension6" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim6&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode12" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension7" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim7&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension8" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim8&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode10" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimension9" modifiedBy="peter"&gt;&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim9&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim10" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim11" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem11&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim12" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim13" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem13&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim25" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default&gt;Element25&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim26" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element26&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim27" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element27&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementMeasure" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Measures which should be predicted.
Enter like this: M1|M2|M3|M4
-> variable "aip_numInputs" has to be the number of measures you put in here]]&gt;&lt;/comment>&#xd;
      &lt;default>elemMeasure&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim8" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem8&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim7" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem7&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim6" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem6&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="intern_extractSourceDeny" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim5" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem5&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="sys_sourceCube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Cube to use in database.]]&gt;&lt;/comment>&#xd;
      &lt;default>SOURCE-CUBE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim9" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem9&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim20" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element20&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim4" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem4&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim21" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element21&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim3" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem3&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim22" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element22&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim2" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim23" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element23&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_elementDim1" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim24" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element24&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode1" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode4" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode5" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="db_dimensionVersion" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"
Use this dimension for version]]&gt;&lt;/comment>&#xd;
      &lt;default>DimVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680551" name="intern_extractSourceAccept" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode2" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode3" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode8" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode9" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode6" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode7" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode26" modified="1592994680551" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode27" modified="1592994680552" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="db_elementVersion" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE/MAKRO TARGET:&#xd;
version element for input values&lt;/comment>&#xd;
      &lt;default>elementVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode24" modified="1592994680552" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default&gt;onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode25" modified="1592994680552" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="db_dimensionMeasure" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"
Use this for dimension with measures.]]&gt;&lt;/comment>&#xd;
      &lt;default>DimMeasure&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="intern_dateFormat" modifiedBy="peter">&#xd;
      &lt;comment>INTERN:&#xd;
Date format of Integrator project for sorting, date calculation etc.&lt;/comment>&#xd;
      &lt;default>yyyyMM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_currentFormat" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>yyyy-MM-dd&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594214822743" name="sys_AIssistedURL" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT
IP to AI Engine
E.g. could be Virtual Private Network (10.xx.xx.xx) or global (predictive-aissistedplanning.cloud.jedox.com)]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_url", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>predictive-aissistedplanning.cloud.jedox.com&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594214830741" name="sys_AIssistedPort" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Port of AIssisted Planning engine]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_port", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>12800&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="aip_period" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
type of time; yearly=1, monthly=12, weekly=52, daily=364&lt;/comment>&#xd;
      &lt;default>12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="aip_algInterpolation" modifiedBy="peter">&#xd;
      &lt;comment>Group 0 = 0 to 5, &#xd;
Group 1 = 0,1, &#xd;
Group 2 = 0,1,2&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594214846510" name="sys_AIssistedAPIKEY" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your API key for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_apikey", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>API-KEY&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="aip_algGroup" modifiedBy="peter">&#xd;
      &lt;comment>Simple 0 &#xd;
Seasonal 1 &#xd;
Advanced 2&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594214813145" name="sys_AIssistedUser" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your user name for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_user", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>USER&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594372775115" name="aip_outlierType" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[IO Innovational outlier detection 
AO Additive outlier detection
LS To detect level shifts in the time series 
TC To detect temporary changes 
SLS To consider seasonal level shifts while detecting outliers. 
TSO Basic time series outlier detection 
CD Cooks’s distance for outlier detection using linear modelling 
EV Extreme value detection]]&gt;&lt;/comment>&#xd;
      &lt;default>CD&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="aip_numSeries" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
number of different measures you want to predict.
Definition: type of input; Single input for forecasting = 0/1, Multiple inputs for forecasting > 1]]&gt;&lt;/comment>&#xd;
      &lt;default>2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="aip_algSubType" modifiedBy="peter">&#xd;
      &lt;comment>Group 0 Alg 4/5 SubType = 0,1,2 &#xd;
Group 1 Alg 0/1 SubType = 0,1,2 &#xd;
Group 2 Alg 0 SubType = 0,1&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="aip_inputValues" modifiedBy="peter">&#xd;
      &lt;comment>To be filled from groovy job/ADAPT&#xd;
Is automatically filled with values from extract "EXTRACT_InputValues".&#xd;
Adapt extract "EXTRACT_InputValues" to change input for your project&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="aip_interpolation" modifiedBy="peter">&#xd;
      &lt;comment>0 = default replacement using linear approximation, &#xd;
1 = user defined interpolation for replacement, &#xd;
2 = no replacement&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594373871382" name="aip_outputTypeOutlier" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Type of output:
0: position of outlying values and suggested replacements values, 
1: position of outlying values and input with outliers replaced
2: position of outlying values and suggested replacements values.
3: position of outlying values and suggested replacements values, zero is not an outlier]]&gt;&lt;/comment>&#xd;
      &lt;default>3&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="intern_bearer" modifiedBy="peter">&#xd;
      &lt;comment>INTERN:&#xd;
To be filled from groovy job&#xd;
Authentication Token for Jedox AIssisted Planning WebService&lt;/comment>&#xd;
      &lt;default>eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkN0ZlFDOExlLThOc0M3b0MyelFrWnBjcmZPYyIsImtpZCI6IkN0ZlFDOExlLThOc0M3b0MyelFrWnBjcmZPYyJ9.eyJhdWQiOiI3YmIzNTBjYi01NzU3LTRjODUtYjA5OC0wZjlmZDVjN2U0ZTQiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83YzMyMTY4Ni1jMzAwLTQ3ZTQtYjM5ZS04ZGU5ODg5M2U4ODYvIiwiaWF0IjoxNTYwNDMyODc2LCJuYmYiOjE1NjA0MzI4NzYsImV4cCI6MTU2MDQzNjc3NiwiYWNyIjoiMSIsImFpbyI6IjQyWmdZRWhoQ3p2WDFzWWJrbjB4N0xQYVlaN0p6NStYQ2JzY2RXVzNtaUU1d1oxM3pVOEEiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiODliMjg2MzAtMDg4Zi00NmE5LTg1ZWItMTRhOTE5YzJmOTRhIiwiYXBwaWRhY3IiOiIwIiwiaXBhZGRyIjoiMjEzLjE2NC43Ni4zOCIsIm5hbWUiOiJQcmVzYWxlcyBEZW1vIiwib2lkIjoiY2MyOTg2NWQtMmE2OC00NWMwLWJiODktMTE3MDg2MGJlZjQ4Iiwic2NwIjoidXNlcl9pbXBlcnNvbmF0aW9uIiwic3ViIjoiU3otUk16a0dPVXIxSWVES2NNakNmUDRrWUFzWlJySlJ2cXV2c2hTRGJpYyIsInRpZCI6IjdjMzIxNjg2LWMzMDAtNDdlNC1iMzllLThkZTk4ODkzZTg4NiIsInVuaXF1ZV9uYW1lIjoicHJlc2FsZXNfZGVtb0BhaXNzaXN0ZWRwbGFubmluZy5jbG91ZC5qZWRveC5jb20iLCJ1cG4iOiJwcmVzYWxlc19kZW1vQGFpc3Npc3RlZHBsYW5uaW5nLmNsb3VkLmplZG94LmNvbSIsInV0aSI6Imtyb0FYN3p2SFVDLUltQTBLTzg5QUEiLCJ2ZXIiOiIxLjAifQ.PYbZshZjNpplhciB9uLz3ChRgG-ncc8mjTkj183eEWJuZQh3FfPN01l_qwhretB4NTZ4F7KeiLkKBQ6YD1MZUHbQni-ieBGwr7gf3b-z7GhNYLGTDOTPA8ViOhF8j4ujMJn2Gey7HyXpOqRRfITWYjHNTY7ygsXfVMs0wzPG5JUJJnvLM3z_f9zyfOGH7epHL1TXFK3frueGRMvnMG-2Z4akAanEK2wbxBLTUMRdBda5iM4ByTBbelbS7bRh-9-e9LvNToIEMP6msPoL3wLVtonjErNxkAETRkavIs0rcifFjciNEhZEKrhpBNqguDN6u0PtYF3_tvG3Gb_hmMtS6w&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594373562643" name="aip_failSafe" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="intern_rowStartInput" modified="1592994680552" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_rowStopInput" modified="1592994680552" modifiedBy="peter" />&#xd;
    &lt;variable modified="1592994680552" name="sys_targetCube" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
Cube to use in database. In most cases this will be the same as source cube.&lt;/comment>&#xd;
      &lt;default>targetCube&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_elementEnd" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT (optional if aip_numValues is set):&#xd;
Put last element of prediction period here (e.g. 2019-10 if you want the last predicted element to be 2019-10).&#xd;
If you do not put sth. here, elementEnd will be calculated from: time_elementStart + aip_numValues&#xd;
RELATED: time_elementStart; aip_numValues&#xd;
WAS empty&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_yearRegExpDeny" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
Prefilled. Add more elements that should be ignored (depending on time dimension)&#xd;
-00&lt;/comment>&#xd;
      &lt;default>00&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_leadingZero" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
If there is no leading zero keep variable EMPTY.&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_yearRegExpAccept" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
To be filled from user (depending on time dimension).&#xd;
(-0.$|-1.$)&lt;/comment>&#xd;
      &lt;default>(0.|1.)&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_dateFormatSourceDaily" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
time format of custom time dimension until MONTH&#xd;
&#xd;
NOTE: if you want to use daily data, please set variable time_dateDailySeparator&lt;/comment>&#xd;
      &lt;default>yyyy-MM-dd&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="intern_copyByWeekday" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[0 - default behaviour (months are copied by month, days are copied by month)
1 - days are copied by weekday]]&gt;&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_dateDailySeparator" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE (if you want to use daily data):&#xd;
e.g. 2019-02-17 -&amp;gt; date separator daily would be (..) (for 2 day digits)&#xd;
if you do not want to use daily data, leave it $&lt;/comment>&#xd;
      &lt;default>$&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_dateSeparator" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
e.g. 2019-02 -&amp;gt; date separator would be -&#xd;
if no separator exists, keep empty&lt;/comment>&#xd;
      &lt;default>-&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_dateFormatSourceMonthly" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
time format of custom time dimension until MONTH&#xd;
&#xd;
NOTE: if you want to use daily data, please set variable time_dateDailySeparator&lt;/comment>&#xd;
      &lt;default>yyyy-MM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="ext_numValues" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[SET FROM EXTERNAL
number of values to be forecasted (e.g. 12 if you want the next 12 month to be predicted)]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="ext_period" modified="1592994680552" modifiedBy="peter" />&#xd;
    &lt;variable modified="1592994680552" name="time_inputStartDate" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
First year in database (or first year that should be used for prediction)]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="intern_copyDaysMonthlySort" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>yyyyMM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="intern_maxSeries" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="time_elementStart" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Put first element of prediction period here (e.g. 2018-11 if you want to start with prediction at November 2018-11 using all previous data froo 2018-10 backwards)
RELATED: time_elementEnd; aip_numValues]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="sys_configCubes" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AICubes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="sys_configSettings" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AISettings&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="sys_aiConfigCube" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIConfigCube&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594372889484" name="sys_prefix" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>DP&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="sys_configSettingsValue" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>~&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="intern_inputSum" modifiedBy="peter">&#xd;
      &lt;comment>INTERN&#xd;
Sum of input values for zero checking&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="intern_extractTargetDeny" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594217178475" name="db_elementTargetVersion" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Defines the version element for prediction]]&gt;&lt;/comment>&#xd;
      &lt;default>Outlier&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="intern_extractTargetAccept" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="intern_inputRange" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594214838405" name="sys_AIssistedPass" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your password for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_pass", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>YOUR-PASSWORD-HERE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1592994680552" name="sys_database" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Name of database used.]]&gt;&lt;/comment>&#xd;
      &lt;default>CUSTOM-DATABASE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="intern_extractCopyAccept" modified="1594215632284" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_extractCopyDeny" modified="1594215642002" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_dateCopyFormat" modified="1594216105906" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_copyDaysFormat" modified="1594216143332" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_seriesStart" modified="1594216206767" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_seriesStop" modified="1594216345200" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_rowStart" modified="1594216384415" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_rowStop" modified="1594216394821" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_rowCount" modified="1594216432892" modifiedBy="peter" />&#xd;
    &lt;variable name="aip_numValues" modified="1594216561711" modifiedBy="peter" />&#xd;
    &lt;variable modified="1605880876629" name="time_inputEndDate" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
First year in database (or first year that should be used for prediction)]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606124391511" name="service_api" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default&gt;ai-r/api&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606128294541" name="service_protocol" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>https&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606124391511" name="service_combinedURL" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>jedox&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606128615047" name="service_version" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>v1.3.1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606128583629" name="service_function" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>outlierJedox&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606125839352" name="service_pod" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
  &lt;/variables>&#xd;
  &lt;connections>&#xd;
    &lt;connection modified="1592994680551" name="AIP_getToken" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>Authenticate on AAD Server with AIssisted Planning user &amp;amp; password.&#xd;
Enter credentials in variables or AIssisted Planning Model settings.&lt;/comment>&#xd;
      &lt;resource>https://login.microsoftonline.com/aissistedplanning.onmicrosoft.com/oauth2/token&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Content-Type">application/x-www-form-urlencoded&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;parameters>&#xd;
        &lt;parameter name="grant_type">password&lt;/parameter>&#xd;
        &lt;parameter name="client_id">89b28630-088f-46a9-85eb-14a919c2f94a&lt;/parameter>&#xd;
        &lt;parameter name="username">${sys_AIssistedUser}&lt;/parameter>&#xd;
        &lt;parameter name="password">${sys_AIssistedPass}&lt;/parameter>&#xd;
        &lt;parameter name="resource">7bb350cb-5757-4c85-b098-0f9fd5c7e4e4&lt;/parameter>&#xd;
      &lt;/parameters>&#xd;
      &lt;ssl>verify&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1592994680552" name="CON_jedoxGlobal" type="JedoxOlap" modifiedBy="peter">&#xd;
      &lt;global nameref="localhost" />&#xd;
      &lt;database>${sys_database}&lt;/database>&#xd;
      &lt;ssl>trust&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1606128748617" name="AIP_functionCall_outlier" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[REST Call to Jedox AIssistedPlanning Web Service
FUNCTION: outlierJedox/vX.X.X
ADAPT: You have to enter all web service inputs here]]&gt;&lt;/comment>&#xd;
      &lt;resource>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;timeout>0&lt;/timeout>&#xd;
      &lt;ignoreCookiesPolicy>false&lt;/ignoreCookiesPolicy>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Authorization">Bearer ${intern_bearer}&lt;/header>&#xd;
        &lt;header name="Content-Type">application/json&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;ssl>verify&lt;/ssl>&#xd;
      &lt;requestBody>&lt;![CDATA[{
  "InputValues":"${aip_inputValues}",
  "NumInputs":${aip_numSeries},
  "AlgorithmType":"${aip_outlierType}",
  "Period":${aip_period},
  "UseInterpolation":${aip_interpolation},
  "AlgGroup":${aip_algGroup},
  "AlgInterpolate":${aip_algInterpolation},
  "AlgSubType":${aip_algSubType},
  "OutputType":${aip_outputTypeOutlier},
  "FailSafe": ${aip_failSafe},
  "user":"${sys_AIssistedUser}",
  "apiKey":"${sys_AIssistedAPIKEY}"
}]]&gt;&lt;/requestBody>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1606125636849" name="AIP_functionCall_outlier_pod" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[REST Call to Jedox AIssistedPlanning Web Service       
FUNCTION: extrapolateJedox/vX.X.X
ADAPT: You have to enter all web service inputs here]]&gt;&lt;/comment>&#xd;
      &lt;resource>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;timeout>0&lt;/timeout>&#xd;
      &lt;ignoreCookiesPolicy>false&lt;/ignoreCookiesPolicy>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Content-Type">application/json&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;ssl>off&lt;/ssl>&#xd;
      &lt;requestBody>&lt;![CDATA[{
  "InputValues":"${aip_inputValues}",
  "NumInputs":${aip_numSeries},
  "AlgorithmType":"${aip_outlierType}",
  "Period":${aip_period},
  "UseInterpolation":${aip_interpolation},
  "AlgGroup":${aip_algGroup},
  "AlgInterpolate":${aip_algInterpolation},
  "AlgSubType":${aip_algSubType},
  "OutputType":${aip_outputTypeOutlier},
  "FailSafe": ${aip_failSafe}
}]]&gt;&lt;/requestBody>&#xd;
    &lt;/connection>&#xd;
  &lt;/connections>&#xd;
  &lt;extracts>&#xd;
    &lt;extract modified="1605658842373" name="INPUT_reportVariables" type="Cube" modifiedBy="peter">&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query drillthrough="false" onlyBasisAsDefault="true" useRules="false" zeroSuppressionType="includeEmpty">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${sys_configCubes}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_sourceCube}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${sys_configSettings}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_configSettingsValue}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${sys_configParameters}">&#xd;
            &lt;condition mode="onlyBases" operator="like" type="accept">&lt;![CDATA[^${sys_prefix}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_aiConfigCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1592994680551" name="CT_inputCheck" type="ConstantTable" modifiedBy="peter">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>inputValues&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${intern_inputSum}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1592994680552" name="INPUT_sourceValues" type="Cube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input data
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query celltype="both" drillthrough="false" onlyBasisAsDefault="false" useRules="true" zeroSuppressionType="includeEmptyDefaultMapping">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractSourceAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractSourceDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606125589948" name="AIP_extractResult_outlier" type="Json" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Results from Jedox AIssisted Planning Web Service]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="AIP_functionCall_outlier${service_pod}" />&#xd;
      &lt;alias_map>&#xd;
        &lt;alias name="web_success">1&lt;/alias>&#xd;
        &lt;alias name="web_errorMessage">2&lt;/alias>&#xd;
        &lt;alias name="values">3&lt;/alias>&#xd;
        &lt;alias name="position">4&lt;/alias>&#xd;
        &lt;alias name="success">5&lt;/alias>&#xd;
        &lt;alias name="errorMessage">6&lt;/alias>&#xd;
      &lt;/alias_map>&#xd;
      &lt;query>&#xd;
        &lt;level>$&lt;/level>&#xd;
        &lt;fields>&#xd;
          &lt;field>success&lt;/field>&#xd;
          &lt;field>errorMessage&lt;/field>&#xd;
          &lt;field>outputParameters.values[0][0]&lt;/field>&#xd;
          &lt;field>outputParameters.values[0][1]&lt;/field>&#xd;
          &lt;field>outputParameters.values[1]&lt;/field>&#xd;
          &lt;field>outputParameters.values[2]&lt;/field>&#xd;
        &lt;/fields>&#xd;
      &lt;/query>&#xd;
      &lt;cache>true&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1592994680552" modifiedBy="peter" name="AIP_extractToken" type="Json">&#xd;
      &lt;comment>token for authetication&lt;/comment>&#xd;
      &lt;connection nameref="AIP_getToken" />&#xd;
      &lt;query>&#xd;
        &lt;level>$&lt;/level>&#xd;
        &lt;fields>&#xd;
          &lt;field>token_type&lt;/field>&#xd;
          &lt;field>access_token&lt;/field>&#xd;
        &lt;/fields>&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1594216649600" name="OUTPUT_rowCount" type="CubeSlice" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementTargetVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractSourceAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractSourceDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1592994680552" name="INPUT_accuracyTarget" type="CubeSlice" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementTargetVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${time_elementStart}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition&gt;&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606300037083" name="INPUT_targetValues_clearJob" type="CubeSlice" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[^Outlier$|^Interpolation$|^Extrapolation$]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606124391511" name="VAR_service" type="ConstantTable" modifiedBy="peter">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>Column1&lt;/value>&#xd;
          &lt;value>Column2&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/value>&#xd;
          &lt;value>${service_pod}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
  &lt;/extracts>&#xd;
  &lt;transforms>&#xd;
    &lt;transform modified="1592994680551" name="FT_macroVariables" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="${sys_configParameters}" />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FT_dateTransformInput" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>Adds date column which can be sorted for input&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_sourceValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FT_processCopy_outlier" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_mergeOutput_outlier" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^§§§row§§§$|^date_sort$|#Value" include=".">&#xd;
          &lt;coordinate name="${db_dimensionVersion}">&#xd;
            &lt;input constant="Outlier" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FT_trimOutput_outlier" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>Transform web service results to correct format&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractResult_outlier" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="trim" type="SubString">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="position" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;begin>2&lt;/begin>&#xd;
            &lt;fromSide>left&lt;/fromSide>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="trim2" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="trim" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>]&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="trim_1" type="SubString">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;begin>2&lt;/begin>&#xd;
            &lt;fromSide>left&lt;/fromSide>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="trim_2" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="trim_1" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>]&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="success|errorMessage">&#xd;
          &lt;coordinate name="values">&#xd;
            &lt;input nameref="trim_2" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="position">&#xd;
            &lt;input nameref="trim2" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="TV_sortInput_outlierKeys" type="TableView" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;start>${intern_rowStartInput}&lt;/start>&#xd;
      &lt;end>${intern_rowStopInput}&lt;/end>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_dateTransformInput_outlierKeys" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimensionMeasure}" order="asc" />&#xd;
        &lt;input nameref="${db_dimensionVersion}" />&#xd;
        &lt;input nameref="${db_dimension1}" />&#xd;
        &lt;input nameref="${db_dimension2}" />&#xd;
        &lt;input nameref="${db_dimension3}" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FT_switchControlResult_Outlier" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractResult_outlier" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="success" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="success" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>2&lt;/occurence>&#xd;
            &lt;separator>"&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="switchInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="success" type="String" />&#xd;
            &lt;input nameref="web_success" type="boolean" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(web_success == false || success != "True")

	return 0;

else

  return 1;]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="errorMessage" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="errorMessage" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>2&lt;/occurence>&#xd;
            &lt;separator>"&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="combinedErrorMessage" type="Concatenation">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="web_errorMessage" />&#xd;
            &lt;input nameref="errorMessage" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;delimiter>§&lt;/delimiter>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="success" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="combinedErrorMessage" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="switchInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FN_convertChunks" type="FieldNormalization" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_computeChunks" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>chunkStart&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="TA_countOutput" type="TableAggregation" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="OUTPUT_rowCount" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="count" name="outputRows" type="text">&#xd;
            &lt;input nameref="${db_dimensionMeasure}" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="TV_sortInput" type="TableView" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions
${intern_rowStop}
${intern_rowStart}]]&gt;&lt;/comment>&#xd;
      &lt;start>${intern_rowStartInput}&lt;/start>&#xd;
      &lt;end>${intern_rowStopInput}&lt;/end>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_dateTransformInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimensionVersion}" order="asc" />&#xd;
        &lt;input nameref="${db_dimensionMeasure}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension1}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension2}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension3}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" order="asc" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FT_outlierInputRows" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortInput_outlierKeys" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FT_indexOutputValues_outlier" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Add row numbers to values transform for joining.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FN_outputValues_outlier" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="§§§row§§§" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="TA_input" type="TableAggregation" modifiedBy="peter">&#xd;
      &lt;comment>Convert a column with a value in each row into a single string with comma separated values (this format is required for the web service).&#xd;
ADAPT: If using the extended dimension version change the Data Source to "PM_SP_SORT_cube_input_extended"&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="true" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="group_concat" name="aip_inputValues">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure aggregate="sum" name="sum">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FT_computeChunks" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TA_countInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="chunkStart" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="c" nameref="Count" type="int" />&#xd;
            &lt;input alias="m" constant="${intern_maxSeries}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>s = '';&#xd;
for (int i=0;i &amp;lt; c; i+=m){&#xd;
  s = s + Integer.toString(i) + ',';&#xd;
}&#xd;
s =s.substring(0, s.length()-1)&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606127550386" name="FT_macroVariablesDimLoop" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TD_macroVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="service_pod" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="_pod" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d1]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function&gt;&#xd;
        &lt;function name="elem25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d1]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="${sys_prefix}OtherDim" include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="TD_macroVariables" type="TableDenormalization" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures aggregate="first" denormalize="${sys_configParameters}" source="FT_macroVariables" valuename="#Value" />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FN_outputValues_outlier" type="FieldNormalization" modifiedBy="peter">&#xd;
      &lt;comment>Transform Comma separated values from Web Service result into a column where each value is in a separate row.&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_trimOutput_outlier" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>values&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="TA_countInput" type="TableAggregation" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_accuracyTarget" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="count" name="Count" type="text">&#xd;
            &lt;input nameref="${db_dimensionMeasure}" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="TJ_chunkSize" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FN_convertChunks" />&#xd;
        &lt;source nameref="TA_countOutput" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" unique="false">&#xd;
          &lt;left nameref="FN_convertChunks" />&#xd;
          &lt;right nameref="TA_countOutput" />&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FT_addChunkSize" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_chunkSize" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="intern_seriesStart" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="chunkStart" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return chunkStart + 1]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="aip_numSeries" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="c" nameref="Count" type="int" />&#xd;
            &lt;input alias="i" nameref="intern_seriesStart" type="int" />&#xd;
            &lt;input alias="m" constant="${intern_maxSeries}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (i + m > c &amp;&amp; c % m != 0){

  return c % m

}else{

  return m

}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_outputRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="outputRows" nameref="outputRows" type="int" />&#xd;
            &lt;input alias="numInputs" nameref="Count" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return outputRows/numInputs;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_seriesStop" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="chunkStart" type="int" />&#xd;
            &lt;input alias="a" nameref="aip_numSeries" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return i + a]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStart" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="chunkStart" type="int" />&#xd;
            &lt;input alias="p" nameref="intern_outputRange" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return (p*3) * i + 1]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStop" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="intern_rowStart" type="int" />&#xd;
            &lt;input alias="n" nameref="intern_outputRange" type="int" />&#xd;
            &lt;input alias="s" nameref="aip_numSeries" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
            &lt;script>&lt;![CDATA[return i-1 + s*n * 3;
//i * p * n * d;]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStopInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="intern_seriesStop" type="int" />&#xd;
            &lt;input alias="d" constant="${intern_inputRange}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return i * d;
//i * p * n * d;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStartInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="chunkStart" type="int" />&#xd;
            &lt;input alias="p" constant="${intern_inputRange}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return i * p +1]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^chunkStart$" include="_">&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="aip_numSeries" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_seriesStart" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_seriesStop" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStart" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStop" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_rowCount">&#xd;
            &lt;input nameref="Count" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStartInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStopInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_numValues">&#xd;
            &lt;input nameref="intern_outputRange" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="TJ_mergeOutput_outlier" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Table join for writing results in cube in correct format.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_outlierInputRows" />&#xd;
        &lt;source nameref="FT_indexOutputValues_outlier" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" type="inner" unique="false">&#xd;
          &lt;left nameref="FT_outlierInputRows">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/left>&#xd;
          &lt;right nameref="FT_indexOutputValues_outlier">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/right>&#xd;
          &lt;conditions>&#xd;
            &lt;condition type="eq" />&#xd;
          &lt;/conditions>&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1592994680552" name="FT_dateTransformInput_outlierKeys" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>Adds date column which can be sorted for input&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_sourceValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606132441881" name="FT_variablesStaticTokenInput_pod" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input for Loop job containing variables.
Calculates all the time related variables automatically.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="VAR_service" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="format_date" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstDbYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numPeriods" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="last" nameref="intern_lastDBYear" type="int" />&#xd;
            &lt;input alias="first" nameref="intern_firstDbYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>false&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[dif = last-first;
if (dif > 0)
	return dif;
else
	return 1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_periodEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="elemEnd" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="usedFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${intern_dateFormat}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[e = Date.parse(usedFormat, elemEnd);

return e.format(internFormat);]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_srcYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_numPeriods" type="int" />&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastDBMonth" type="String" />&#xd;
            &lt;input alias="lastDBYear" nameref="intern_lastDBYear" type="String" />&#xd;
            &lt;input alias="firstDbYear" nameref="intern_firstDbYear" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[srcYearRng = "(" + firstDbYear;
int firstDBYear = firstDbYear.toInteger();
for(i=1;i&lt;intern_numPeriods;i++){

 srcYearRng =  srcYearRng+"|"+(firstDBYear+i);

}

srcYearRng = srcYearRng +"|"+ lastDBYear + ")";



return srcYearRng;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)

  return "§";

nval = 12+12-intern_firstMonth+1; // full year plus rest of year

rolling = "(";

for (i = 1; i &lt;intern_firstMonth; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(i&lt;10)

  rolling = rolling+"|"+"${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-intern_firstMonth+1+1; // full year plus rest of year

rolling = "(";

//first month

first = intern_firstMonth+1;

if(first > 12)

  return "§";

if(first &lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(first &lt;10)

  rolling = rolling+"${time_leadingZero}"+first;

  else

  rolling = rolling+""+first;

for (i = intern_firstMonth+1; i &lt;=12; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}1";

  else if(i&lt;10)

  rolling = rolling+"|${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_srcYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days
arr = format.split("\\" + sep);
if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  return "^" + month + sep + year + day
}
  else {
  return "^" + year + sep + month + day
  }
}
else{
df = dailyFormat.split("\\" + sep);
def resultArr = new String[3];
  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    resultArr[i] = month
    }
    else if (df[i].toUpperCase().contains("D")) {
    resultArr[i] = "[0-3][0-9]"  
    }
    else {
    resultArr[i] = year
    } 
  }
return resultArr.join(sep);  
}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_srcYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_lastDBYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockSrcEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_firstDbYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockSrcBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);

if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  //Don't need to care for days for s1.
  s1 = month1 + sep + year1;
  s2 = month2 + sep + year2 + day;
  s3 = month3 + sep + year3 + day;
  }
  else {
  s1 = year1 + sep + month1; 
  s2 = year2 + sep + month2 + day;
  s3 = year3 + sep + month3 + day;
  }
}
else{
df = dailyFormat.split("\\" + sep);
s1 = new String[3];
s2 = new String[3];
s3 = new String[3];

  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    s1[i] = month1;
    s2[i] = month2;
    s3[i] = month3;
    }
    else if (df[i].toUpperCase().contains("D")) {
    s2[i] = day;
    s3[i] = day;    
    }
    else if (df[i].toUpperCase().contains("Y")){
    s1[i] = year1;
    s2[i] = year2;
    s3[i] = year3;
    } 
  }
  s1 = s1 - null;
  s1 = s1.join(sep);
  s2 = s2.join(sep);
  s3 = s3.join(sep);
  
}
return s1 + "|" + s2 +"|"+ s3 ;

//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetAccept" nameref="intern_extractSourceAccept" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetAccept;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetDeny" nameref="intern_extractSourceDeny" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetDeny;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="yyyyMM" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="yyyyMM" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="yyyyMMdd" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_inputRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="date1" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="date2" constant="${time_elementStart}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="daily" constant="${time_dateDailySeparator}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[import groovy.time.TimeCategory;

Date d1 = Date.parse(internFormat, date1);
Date d2 = Date.parse(internFormat, date2);

if(daily == "\$") {
	years = ((int)d1.year-(int)d2.year)*12;
	months = (int)d1.month-(int)d2.month;
	return years + months + 1;
}
else
	return d1-d2+1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="period" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="a" constant="${ext_period}" type="float" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return a;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateCopyFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_copyDaysMonthlySort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${intern_dateFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_copyDaysFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${time_currentFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_maxSeries" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_maxSeries}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="like" type="accept" value="(..)" />&#xd;
                &lt;result constant="2" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_protocol" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="http" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
            &lt;default>&#xd;
              &lt;result constant="https" />&#xd;
            &lt;/default>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_combinedURL" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="jedox" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${sys_AIssistedURL}:${sys_AIssistedPort}" />&#xd;
            &lt;/default>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_api" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="ai-r/api" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
            &lt;default>&#xd;
              &lt;result constant="api" />&#xd;
            &lt;/default>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_inputRange" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_period">&#xd;
            &lt;input nameref="period" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateCopyFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_copyDaysFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_maxSeries" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_protocol" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_combinedURL" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_api" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606127121476" name="FT_variablesStaticTokenInput" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input for Loop job containing variables.
Calculates all the time related variables automatically.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractToken" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="format_date" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstDbYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numPeriods" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="last" nameref="intern_lastDBYear" type="int" />&#xd;
            &lt;input alias="first" nameref="intern_firstDbYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>false&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[dif = last-first;
if (dif > 0)
	return dif;
else
	return 1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_periodEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="elemEnd" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="usedFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${intern_dateFormat}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[e = Date.parse(usedFormat, elemEnd);

return e.format(internFormat);]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_srcYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_numPeriods" type="int" />&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastDBMonth" type="String" />&#xd;
            &lt;input alias="lastDBYear" nameref="intern_lastDBYear" type="String" />&#xd;
            &lt;input alias="firstDbYear" nameref="intern_firstDbYear" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[srcYearRng = "(" + firstDbYear;
int firstDBYear = firstDbYear.toInteger();
for(i=1;i&lt;intern_numPeriods;i++){

 srcYearRng =  srcYearRng+"|"+(firstDBYear+i);

}

srcYearRng = srcYearRng +"|"+ lastDBYear + ")";



return srcYearRng;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)

  return "§";

nval = 12+12-intern_firstMonth+1; // full year plus rest of year

rolling = "(";

for (i = 1; i &lt;intern_firstMonth; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(i&lt;10)

  rolling = rolling+"|"+"${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-intern_firstMonth+1+1; // full year plus rest of year

rolling = "(";

//first month

first = intern_firstMonth+1;

if(first > 12)

  return "§";

if(first &lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(first &lt;10)

  rolling = rolling+"${time_leadingZero}"+first;

  else

  rolling = rolling+""+first;

for (i = intern_firstMonth+1; i &lt;=12; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}1";

  else if(i&lt;10)

  rolling = rolling+"|${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_srcYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days
arr = format.split("\\" + sep);
if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  return "^" + month + sep + year + day
}
  else {
  return "^" + year + sep + month + day
  }
}
else{
df = dailyFormat.split("\\" + sep);
def resultArr = new String[3];
  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    resultArr[i] = month
    }
    else if (df[i].toUpperCase().contains("D")) {
    resultArr[i] = "[0-3][0-9]"  
    }
    else {
    resultArr[i] = year
    } 
  }
return resultArr.join(sep);  
}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_srcYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_lastDBYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockSrcEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_firstDbYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockSrcBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);

if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  //Don't need to care for days for s1.
  s1 = month1 + sep + year1;
  s2 = month2 + sep + year2 + day;
  s3 = month3 + sep + year3 + day;
  }
  else {
  s1 = year1 + sep + month1; 
  s2 = year2 + sep + month2 + day;
  s3 = year3 + sep + month3 + day;
  }
}
else{
df = dailyFormat.split("\\" + sep);
s1 = new String[3];
s2 = new String[3];
s3 = new String[3];

  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    s1[i] = month1;
    s2[i] = month2;
    s3[i] = month3;
    }
    else if (df[i].toUpperCase().contains("D")) {
    s2[i] = day;
    s3[i] = day;    
    }
    else if (df[i].toUpperCase().contains("Y")){
    s1[i] = year1;
    s2[i] = year2;
    s3[i] = year3;
    } 
  }
  s1 = s1 - null;
  s1 = s1.join(sep);
  s2 = s2.join(sep);
  s3 = s3.join(sep);
  
}
return s1 + "|" + s2 +"|"+ s3 ;

//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetAccept" nameref="intern_extractSourceAccept" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetAccept;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetDeny" nameref="intern_extractSourceDeny" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetDeny;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="yyyyMM" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="yyyyMM" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="yyyyMMdd" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_inputRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="date1" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="date2" constant="${time_elementStart}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="daily" constant="${time_dateDailySeparator}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[import groovy.time.TimeCategory;

Date d1 = Date.parse(internFormat, date1);
Date d2 = Date.parse(internFormat, date2);

if(daily == "\$") {
	years = ((int)d1.year-(int)d2.year)*12;
	months = (int)d1.month-(int)d2.month;
	return years + months + 1;
}
else
	return d1-d2+1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="period" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="a" constant="${ext_period}" type="float" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return a;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateCopyFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_copyDaysMonthlySort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${intern_dateFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_copyDaysFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${time_currentFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_maxSeries" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_maxSeries}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="like" type="accept" value="(..)" />&#xd;
                &lt;result constant="2" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_combinedURL" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${sys_AIssistedURL}:${sys_AIssistedPort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="jedox" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_protocol" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="https" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="http" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_api" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="api" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="ai-r/api" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate name="intern_bearer">&#xd;
            &lt;input nameref="access_token" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_inputRange" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_period">&#xd;
            &lt;input nameref="period" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateCopyFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_copyDaysFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_maxSeries" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_combinedURL" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_protocol" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_api" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
  &lt;/transforms>&#xd;
  &lt;loads>&#xd;
    &lt;load modified="1592994680552" name="LOAD_outlier" type="Cube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Load Prediction data
ADAPT for own dimensions - Make sure you have added version(s) for prediction/upper/lower or accuracy]]&gt;&lt;/comment>&#xd;
      &lt;source nameref="FT_processCopy_outlier" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>insert&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="none" deactivateSVS="false" name="${sys_targetCube}" splash="default" />&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1605658076383" name="LOAD_clearOutput" type="Cube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Clear prediction data
ADAPT for own dimensions
If using the extended dimension version change the Data Source to "EXTRACT_clear_target_values_extended"]]&gt;&lt;/comment>&#xd;
      &lt;source nameref="INPUT_targetValues_clearJob" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>delete&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="noneWithDefaultWrite" deactivateSVS="false" name="${sys_sourceCube}" splash="default" />&#xd;
    &lt;/load>&#xd;
    &lt;load modified="1605658789404" name="LOAD_clearSetup" type="Cube" modifiedBy="peter">&#xd;
      &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>delete&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="none" deactivateSVS="true" name="${sys_aiConfigCube}" />&#xd;
    &lt;/load>&#xd;
  &lt;/loads>&#xd;
  &lt;jobs>&#xd;
    &lt;job modified="1594373202693" name="SW_executionLogicOutlier" type="Switch" modifiedBy="peter">&#xd;
      &lt;switchOn>&#xd;
        &lt;source nameref="FT_switchControlResult_Outlier" row="1">&#xd;
          &lt;input nameref="switchInput" />&#xd;
        &lt;/source>&#xd;
      &lt;/switchOn>&#xd;
      &lt;switchs>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="1" />&#xd;
          &lt;execution nameref="EXECUTE_outlierLoading" type="job" />&#xd;
        &lt;/switch>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="0" />&#xd;
          &lt;execution nameref="GRV_logWsError_Outlier" type="job" />&#xd;
        &lt;/switch>&#xd;
      &lt;/switchs>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1592994680552" name="Loop_overAllChunks" type="Loop" modifiedBy="peter">&#xd;
      &lt;loop nameref="FT_addChunkSize" />&#xd;
      &lt;execution nameref="Loop_inputValues" type="job" />&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1592994680552" name="SW_emptyCheck" type="Switch" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Checks if the prediction returns success state, then triggers copying and loading data.]]&gt;&lt;/comment>&#xd;
      &lt;switchOn>&#xd;
        &lt;source nameref="CT_inputCheck" row="1">&#xd;
          &lt;input nameref="inputValues" />&#xd;
        &lt;/source>&#xd;
      &lt;/switchOn>&#xd;
      &lt;switchs>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="deny" value="0" />&#xd;
          &lt;execution nameref="SW_executionLogicOutlier" type="job" />&#xd;
        &lt;/switch>&#xd;
      &lt;/switchs>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606125682059" name="PresetStaticInput" type="Loop" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Sets variables for main job]]&gt;&lt;/comment>&#xd;
      &lt;loop nameref="FT_variablesStaticTokenInput${service_pod}" />&#xd;
      &lt;execution nameref="Loop_overAllChunks" type="job" />&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1592994680552" name="EXECUTE_outlierLoading" type="Standard" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="LOAD_outlier" type="load" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1607125229243" name="GRV_logWsError_Outlier" type="Groovy" modifiedBy="peter">&#xd;
      &lt;jobscript>&lt;![CDATA[extract = API.initSource("FT_switchControlResult_Outlier");
extract.nextRow();

err = extract.getColumnString("combinedErrorMessage");
if(err.contains("1019"))
	err = err + ' - License error: Please check your license credentials and/or check if your license is expired';

if(err.contains("401"))
	err = err + ' - License error: Please check your license credentials and/or check if your license is expired';

LOG.warn(extract.getColumnString("combinedErrorMessage"));]]&gt;&lt;/jobscript>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1592994680552" name="Loop_inputValues" type="Loop" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Sets the variable aip_inputValues to the returned values of the INPUT path (Extract from source cube)]]&gt;&lt;/comment>&#xd;
      &lt;loop nameref="TA_input" />&#xd;
      &lt;execution nameref="SW_emptyCheck" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="aip_inputValues">&#xd;
          &lt;input nameref="aip_inputValues" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_inputSum">&#xd;
          &lt;input nameref="sum" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1610457174544" name="Loop_externalVariables" type="Loop" modifiedBy="peter">&#xd;
      &lt;loop nameref="FT_macroVariablesDimLoop" />&#xd;
      &lt;execution nameref="PresetStaticInput" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="service_pod">&#xd;
          &lt;input nameref="service_pod" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_elementStart">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueStart" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_elementEnd">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueEnd" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_targetCube">&#xd;
          &lt;input constant="${sys_sourceCube}" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="ext_period">&#xd;
          &lt;input nameref="${sys_prefix}Interval" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementTargetVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionTime">&#xd;
          &lt;input nameref="${sys_prefix}TimeName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureValueRegexed" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_inputStartDate">&#xd;
          &lt;input nameref="${sys_prefix}InputStartDate" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_dateDailySeparator">&#xd;
          &lt;input nameref="${sys_prefix}DateDailySeparator" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension1">&#xd;
          &lt;input nameref="dim1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim1">&#xd;
          &lt;input nameref="elem1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode1">&#xd;
          &lt;input nameref="mode1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension2">&#xd;
          &lt;input nameref="dim2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim2">&#xd;
          &lt;input nameref="elem2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode2">&#xd;
          &lt;input nameref="mode2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension3">&#xd;
          &lt;input nameref="dim3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim3">&#xd;
          &lt;input nameref="elem3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode3">&#xd;
          &lt;input nameref="mode3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension4">&#xd;
          &lt;input nameref="dim4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim4">&#xd;
          &lt;input nameref="elem4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode4">&#xd;
          &lt;input nameref="mode4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension5">&#xd;
          &lt;input nameref="dim5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim5">&#xd;
          &lt;input nameref="elem5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode5">&#xd;
          &lt;input nameref="mode5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension6">&#xd;
          &lt;input nameref="dim6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim6">&#xd;
          &lt;input nameref="elem6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode6">&#xd;
          &lt;input nameref="mode6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension7">&#xd;
          &lt;input nameref="dim7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim7">&#xd;
          &lt;input nameref="elem7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode7">&#xd;
          &lt;input nameref="mode7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension8">&#xd;
          &lt;input nameref="dim8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim8">&#xd;
          &lt;input nameref="elem8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode8">&#xd;
          &lt;input nameref="mode8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension9">&#xd;
          &lt;input nameref="dim9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim9">&#xd;
          &lt;input nameref="elem9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode9">&#xd;
          &lt;input nameref="mode9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension10">&#xd;
          &lt;input nameref="dim10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim10">&#xd;
          &lt;input nameref="elem10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode10">&#xd;
          &lt;input nameref="mode10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension11">&#xd;
          &lt;input nameref="dim11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim11">&#xd;
          &lt;input nameref="elem11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode11">&#xd;
          &lt;input nameref="mode11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension12">&#xd;
          &lt;input nameref="dim12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim12">&#xd;
          &lt;input nameref="elem12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode12">&#xd;
          &lt;input nameref="mode12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension13">&#xd;
          &lt;input nameref="dim13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim13">&#xd;
          &lt;input nameref="elem13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode13">&#xd;
          &lt;input nameref="mode13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension14">&#xd;
          &lt;input nameref="dim14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim14">&#xd;
          &lt;input nameref="elem14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode14">&#xd;
          &lt;input nameref="mode14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension15">&#xd;
          &lt;input nameref="dim15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim15">&#xd;
          &lt;input nameref="elem15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode15">&#xd;
          &lt;input nameref="mode15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension16">&#xd;
          &lt;input nameref="dim16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim16">&#xd;
          &lt;input nameref="elem16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode16">&#xd;
          &lt;input nameref="mode16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension17">&#xd;
          &lt;input nameref="dim17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim17">&#xd;
          &lt;input nameref="elem17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode17">&#xd;
          &lt;input nameref="mode17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension18">&#xd;
          &lt;input nameref="dim18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim18">&#xd;
          &lt;input nameref="elem18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode18">&#xd;
          &lt;input nameref="mode18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension19">&#xd;
          &lt;input nameref="dim19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim19">&#xd;
          &lt;input nameref="elem19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode19">&#xd;
          &lt;input nameref="mode19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension20">&#xd;
          &lt;input nameref="dim20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim20">&#xd;
          &lt;input nameref="elem20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode20">&#xd;
          &lt;input nameref="mode20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension21">&#xd;
          &lt;input nameref="dim21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim21">&#xd;
          &lt;input nameref="elem21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode21">&#xd;
          &lt;input nameref="mode21" />&#xd;
        &lt;/variable&gt;&#xd;
        &lt;variable name="db_dimension22">&#xd;
          &lt;input nameref="dim22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim22">&#xd;
          &lt;input nameref="elem22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode22">&#xd;
          &lt;input nameref="mode22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension23">&#xd;
          &lt;input nameref="dim23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim23">&#xd;
          &lt;input nameref="elem23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode23">&#xd;
          &lt;input nameref="mode23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension24">&#xd;
          &lt;input nameref="dim24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim24">&#xd;
          &lt;input nameref="elem24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode24">&#xd;
          &lt;input nameref="mode24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension25">&#xd;
          &lt;input nameref="dim25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim25">&#xd;
          &lt;input nameref="elem25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode25">&#xd;
          &lt;input nameref="mode25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension26">&#xd;
          &lt;input nameref="dim26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim26">&#xd;
          &lt;input nameref="elem26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode26">&#xd;
          &lt;input nameref="mode26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension27">&#xd;
          &lt;input nameref="dim27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim27">&#xd;
          &lt;input nameref="elem27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode27">&#xd;
          &lt;input nameref="mode27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_currentFormat">&#xd;
          &lt;input nameref="${sys_prefix}DateFormat" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_copyByWeekday">&#xd;
          &lt;input nameref="${sys_prefix}CopyDaysByWeekday" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_outlierType">&#xd;
          &lt;input nameref="${sys_prefix}OutlierType" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_failSafe">&#xd;
          &lt;input nameref="${sys_prefix}OutlierFailSafe" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_outputTypeOutlier">&#xd;
          &lt;input nameref="${sys_prefix}OutlierOutputType" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1592994680552" name="MainJob" type="Parallel" modifiedBy="peter">&#xd;
      &lt;comment>Main job - entry point for call from outside&lt;/comment>&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Loop_externalVariables" parallel="false" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605658178043" name="ClearValues" type="Parallel" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="LOAD_clearOutput" parallel="false" type="load" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605658400893" name="Loop_externalVariables_clearValues" type="Loop" modifiedBy="peter">&#xd;
      &lt;loop nameref="FT_macroVariablesDimLoop" />&#xd;
      &lt;execution nameref="ClearValues" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="time_elementStart">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueStart" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_elementEnd">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueEnd" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_targetCube">&#xd;
          &lt;input constant="${sys_sourceCube}" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="ext_period">&#xd;
          &lt;input nameref="${sys_prefix}PredictionInterval" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementTargetVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionTargetValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionTime">&#xd;
          &lt;input nameref="${sys_prefix}TimeName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="ext_numValues">&#xd;
          &lt;input nameref="${sys_prefix}PredictionDuration" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureValueRegexed" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_inputStartDate">&#xd;
          &lt;input nameref="${sys_prefix}InputStartDate" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_dateDailySeparator">&#xd;
          &lt;input nameref="${sys_prefix}DateDailySeparator" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension1">&#xd;
          &lt;input nameref="dim1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim1">&#xd;
          &lt;input nameref="elem1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode1">&#xd;
          &lt;input nameref="mode1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension2">&#xd;
          &lt;input nameref="dim2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim2">&#xd;
          &lt;input nameref="elem2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode2">&#xd;
          &lt;input nameref="mode2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension3">&#xd;
          &lt;input nameref="dim3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim3">&#xd;
          &lt;input nameref="elem3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode3">&#xd;
          &lt;input nameref="mode3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension4">&#xd;
          &lt;input nameref="dim4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim4">&#xd;
          &lt;input nameref="elem4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode4">&#xd;
          &lt;input nameref="mode4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension5">&#xd;
          &lt;input nameref="dim5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim5">&#xd;
          &lt;input nameref="elem5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode5">&#xd;
          &lt;input nameref="mode5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension6">&#xd;
          &lt;input nameref="dim6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim6">&#xd;
          &lt;input nameref="elem6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode6">&#xd;
          &lt;input nameref="mode6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension7">&#xd;
          &lt;input nameref="dim7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim7">&#xd;
          &lt;input nameref="elem7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode7">&#xd;
          &lt;input nameref="mode7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension8">&#xd;
          &lt;input nameref="dim8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim8">&#xd;
          &lt;input nameref="elem8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode8">&#xd;
          &lt;input nameref="mode8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension9">&#xd;
          &lt;input nameref="dim9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim9">&#xd;
          &lt;input nameref="elem9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode9">&#xd;
          &lt;input nameref="mode9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension10">&#xd;
          &lt;input nameref="dim10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim10">&#xd;
          &lt;input nameref="elem10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode10">&#xd;
          &lt;input nameref="mode10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension11">&#xd;
          &lt;input nameref="dim11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim11">&#xd;
          &lt;input nameref="elem11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode11">&#xd;
          &lt;input nameref="mode11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension12">&#xd;
          &lt;input nameref="dim12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim12">&#xd;
          &lt;input nameref="elem12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode12">&#xd;
          &lt;input nameref="mode12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension13">&#xd;
          &lt;input nameref="dim13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim13">&#xd;
          &lt;input nameref="elem13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode13">&#xd;
          &lt;input nameref="mode13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension14">&#xd;
          &lt;input nameref="dim14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim14">&#xd;
          &lt;input nameref="elem14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode14">&#xd;
          &lt;input nameref="mode14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension15">&#xd;
          &lt;input nameref="dim15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim15">&#xd;
          &lt;input nameref="elem15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode15">&#xd;
          &lt;input nameref="mode15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension16">&#xd;
          &lt;input nameref="dim16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim16">&#xd;
          &lt;input nameref="elem16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode16">&#xd;
          &lt;input nameref="mode16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension17">&#xd;
          &lt;input nameref="dim17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim17">&#xd;
          &lt;input nameref="elem17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode17">&#xd;
          &lt;input nameref="mode17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension18">&#xd;
          &lt;input nameref="dim18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim18">&#xd;
          &lt;input nameref="elem18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode18">&#xd;
          &lt;input nameref="mode18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension19">&#xd;
          &lt;input nameref="dim19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim19">&#xd;
          &lt;input nameref="elem19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode19">&#xd;
          &lt;input nameref="mode19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension20">&#xd;
          &lt;input nameref="dim20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim20">&#xd;
          &lt;input nameref="elem20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode20">&#xd;
          &lt;input nameref="mode20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension21">&#xd;
          &lt;input nameref="dim21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim21">&#xd;
          &lt;input nameref="elem21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode21">&#xd;
          &lt;input nameref="mode21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension22">&#xd;
          &lt;input nameref="dim22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim22">&#xd;
          &lt;input nameref="elem22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode22">&#xd;
          &lt;input nameref="mode22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension23">&#xd;
          &lt;input nameref="dim23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim23">&#xd;
          &lt;input nameref="elem23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode23">&#xd;
          &lt;input nameref="mode23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension24">&#xd;
          &lt;input nameref="dim24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim24">&#xd;
          &lt;input nameref="elem24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode24">&#xd;
          &lt;input nameref="mode24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension25">&#xd;
          &lt;input nameref="dim25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim25">&#xd;
          &lt;input nameref="elem25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode25">&#xd;
          &lt;input nameref="mode25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension26">&#xd;
          &lt;input nameref="dim26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim26">&#xd;
          &lt;input nameref="elem26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode26">&#xd;
          &lt;input nameref="mode26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension27">&#xd;
          &lt;input nameref="dim27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim27">&#xd;
          &lt;input nameref="elem27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode27">&#xd;
          &lt;input nameref="mode27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_currentFormat">&#xd;
          &lt;input nameref="${sys_prefix}DateFormat" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_copyByWeekday">&#xd;
          &lt;input nameref="${sys_prefix}CopyDaysByWeekday" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605658329663" name="ClearJob" type="Standard" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Loop_externalVariables_clearValues" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605658720495" name="ClearSetup" type="Parallel" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="LOAD_clearSetup" parallel="false" type="load" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
  &lt;/jobs>&#xd;
&lt;/project>&#xd;
</e0></e1><e2><e0><!-- definition / p5 / ~ -->&lt;?xml version="1.0" encoding="UTF-8"?>&#xd;
&lt;project name="Data Preparation" version="20.4" format="strict" modified="1605917127125" modifiedBy="peter" olapId="p5">&#xd;
  &lt;headers>&#xd;
    &lt;header name="comment" modified="1593462798279" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Project description]]&gt;&lt;/comment>&#xd;
    &lt;/header>&#xd;
  &lt;/headers>&#xd;
  &lt;variables>&#xd;
    &lt;variable modified="1594033420723" name="sys_configSettingsValue" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>~&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594033437424" name="sys_database" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>CUSTOM_DATABASE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594033452739" name="sys_sourceCube" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>SOURCE_CUBE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1605914436057" name="sys_aiConfigCube" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIConfigCube&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1605914458967" name="sys_configCubes" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AICubes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1605914470137" name="sys_configSettings" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AISettings&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1605917127125" name="sys_prefix" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>DP&lt;/default>&#xd;
    &lt;/variable>&#xd;
  &lt;/variables>&#xd;
  &lt;connections>&#xd;
    &lt;connection modified="1605914389257" name="CON_jedoxGlobal" type="JedoxOlap" modifiedBy="peter">&#xd;
      &lt;global nameref="localhost" />&#xd;
      &lt;database>${sys_database}&lt;/database>&#xd;
      &lt;ssl>trust&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
  &lt;/connections>&#xd;
  &lt;extracts>&#xd;
    &lt;extract modified="1605914652756" name="EXT_Types" type="Cube" modifiedBy="peter">&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query celltype="only_numeric" drillthrough="false" onlyBasisAsDefault="true" useRules="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${sys_configCubes}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_sourceCube}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${sys_configSettings}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_configSettingsValue}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="AIParameters">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[UseOutlier|UseInterpolation|UseExtrapolation]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_aiConfigCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
  &lt;/extracts>&#xd;
  &lt;transforms>&#xd;
    &lt;transform modified="1605914906642" name="FT_Types" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="EXT_Types" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="AIParameters" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="#VALUE" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
  &lt;/transforms>&#xd;
  &lt;loads />&#xd;
  &lt;jobs>&#xd;
    &lt;job modified="1605909453196" name="Interpolation" type="ExternalJob" modifiedBy="peter">&#xd;
      &lt;project scope="com.jedox.model.aissistedplanning.datapreparation">Interpolation&lt;/project>&#xd;
      &lt;execution nameref="MainJob" type="job" />&#xd;
      &lt;variables>&#xd;
        &lt;variable name="sys_database">&#xd;
          &lt;default>${sys_database}&lt;/default>&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_sourceCube">&#xd;
          &lt;default>${sys_sourceCube}&lt;/default>&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_configSettingsValue">&#xd;
          &lt;default>${sys_configSettingsValue}&lt;/default>&#xd;
        &lt;/variable>&#xd;
      &lt;/variables>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605909469911" name="Outlier" type="ExternalJob" modifiedBy="peter">&#xd;
      &lt;project scope="com.jedox.model.aissistedplanning.datapreparation">Outlier Detection&lt;/project>&#xd;
      &lt;execution nameref="MainJob" type="job" />&#xd;
      &lt;variables>&#xd;
        &lt;variable name="sys_database">&#xd;
          &lt;default>${sys_database}&lt;/default>&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_sourceCube">&#xd;
          &lt;default>${sys_sourceCube}&lt;/default>&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_configSettingsValue">&#xd;
          &lt;default>${sys_configSettingsValue}&lt;/default>&#xd;
        &lt;/variable>&#xd;
      &lt;/variables>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605909434181" name="Extrapolation" type="ExternalJob" modifiedBy="peter">&#xd;
      &lt;project scope="com.jedox.model.aissistedplanning.datapreparation">Extrapolation&lt;/project>&#xd;
      &lt;execution nameref="MainJob" type="job" />&#xd;
      &lt;variables>&#xd;
        &lt;variable name="sys_database">&#xd;
          &lt;default>${sys_database}&lt;/default>&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_sourceCube">&#xd;
          &lt;default>${sys_sourceCube}&lt;/default>&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_configSettingsValue">&#xd;
          &lt;default>${sys_configSettingsValue}&lt;/default>&#xd;
        &lt;/variable>&#xd;
      &lt;/variables>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job name="SWITCH_Types" type="Switch" modified="1605914211227" modifiedBy="peter" />&#xd;
    &lt;job modified="1605915868066" name="MainJob_IOX" type="Parallel" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Outlier" parallel="true" type="job" />&#xd;
        &lt;execution nameref="Interpolation" parallel="true" type="job" />&#xd;
        &lt;execution nameref="Extrapolation" parallel="true" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605915874536" name="MainJob_I" type="Parallel" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Interpolation" parallel="false" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605915878656" name="MainJob_X" type="Parallel" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Extrapolation" parallel="false" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605915883356" name="MainJob_O" type="Parallel" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Outlier" parallel="false" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605915895136" name="MainJob_IX" type="Parallel" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Interpolation" parallel="true" type="job" />&#xd;
        &lt;execution nameref="Extrapolation" parallel="true" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605915898676" name="MainJob_OX" type="Parallel" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Outlier" parallel="true" type="job" />&#xd;
        &lt;execution nameref="Extrapolation" parallel="true" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1605915902936" name="MainJob_IO" type="Parallel" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Outlier" parallel="true" type="job" />&#xd;
        &lt;execution nameref="Interpolation" parallel="true" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
  &lt;/jobs>&#xd;
&lt;/project>&#xd;
</e0></e2><e3><e0><!-- definition / p7 / ~ -->&lt;?xml version="1.0" encoding="UTF-8"?>&#xd;
&lt;project name="Interpolation" version="20.4" modified="1610457509645" modifiedBy="peter" olapId="p7" format="strict">&#xd;
  &lt;headers>&#xd;
    &lt;header name="comment" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Project description]]&gt;&lt;/comment>&#xd;
    &lt;/header>&#xd;
  &lt;/headers>&#xd;
  &lt;variables>&#xd;
    &lt;variable modified="1593697644039" name="sys_configParameters" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIParameters&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension19" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim19&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension18" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim18&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension15" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim15&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension14" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim14&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension17" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim17&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension16" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim16&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension11" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim11&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode19" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension10" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension13" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim13&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode17" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension12" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode18" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode15" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode16" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode13" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode14" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode22" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode23" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode20" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode21" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimensionTime" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"&#xd;
Use this dimension for time&lt;/comment>&#xd;
      &lt;default>timeDim&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim14" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem14&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim15" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem15&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim16" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem16&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim17" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem17&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim18" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element18&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension26" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim26&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim19" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element19&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension25" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim25&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension27" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim27&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension22" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim22&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension21" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim21&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension24" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim24&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension23" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim23&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension1" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension2" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension3" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim3&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension20" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim20&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension4" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim4&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension5" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim5&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode11" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension6" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim6&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode12" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension7" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim7&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension8" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim8&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode10" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimension9" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim9&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim10" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim11" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem11&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim12" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim13" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem13&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim25" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element25&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim26" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element26&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim27" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element27&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementMeasure" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Measures which should be predicted.
Enter like this: M1|M2|M3|M4
-> variable "aip_numInputs" has to be the number of measures you put in here]]&gt;&lt;/comment>&#xd;
      &lt;default>elemMeasure&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim8" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem8&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim7" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem7&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim6" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem6&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_extractSourceDeny" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim5" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem5&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="sys_sourceCube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Cube to use in database.]]&gt;&lt;/comment>&#xd;
      &lt;default>SOURCE-CUBE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim9" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem9&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim20" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element20&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim4" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem4&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim21" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element21&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim3" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem3&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim22" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element22&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim2" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim23" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element23&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementDim1" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim24" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element24&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode1" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode4" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode5" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimensionVersion" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"
Use this dimension for version]]&gt;&lt;/comment>&#xd;
      &lt;default>DimVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_extractSourceAccept" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode2" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode3" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode8" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode9" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode6" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode7" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode26" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode27" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementVersion" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE/MAKRO TARGET:&#xd;
version element for input values&lt;/comment>&#xd;
      &lt;default>elementVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode24" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode25" modified="1593697644039" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_dimensionMeasure" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"
Use this for dimension with measures.]]&gt;&lt;/comment>&#xd;
      &lt;default>DimMeasure&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_dateFormat" modifiedBy="peter">&#xd;
      &lt;comment>INTERN:&#xd;
Date format of Integrator project for sorting, date calculation etc.&lt;/comment>&#xd;
      &lt;default>yyyyMM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594213829399" name="time_currentFormat" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>yyyy-MM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594019346244" name="sys_AIssistedURL" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT
IP to AI Engine
E.g. could be Virtual Private Network (10.xx.xx.xx) or global (predictive-aissistedplanning.cloud.jedox.com)]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_url", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>predictive-aissistedplanning.cloud.jedox.com&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594019356562" name="sys_AIssistedPort" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Port of AIssisted Planning engine]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_port", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>12800&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="aip_period" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
type of time; yearly=1, monthly=12, weekly=52, daily=364&lt;/comment>&#xd;
      &lt;default>12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594019372795" name="sys_AIssistedAPIKEY" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your API key for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_apikey", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>API-KEY&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594369188013" name="aip_algGroup" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Simple 0 
Seasonal 1 
Advanced 2]]&gt;&lt;/comment>&#xd;
      &lt;default>2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594019225510" name="sys_AIssistedUser" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your user name for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_user", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>USER&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594369181095" name="aip_interpolationType" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[GROUP ALGORITHM SUB-TYPE DESCRIPTION
0 0 Not Applicable Last observation carried forward(LOCF)
0 1 Not Applicable Linear approximation 
0 2 Not Applicable Spline
0 3 Not Applicable Random Sampling
0 4 0 Moving average with equal weights for all observations
0 4 1 Moving average with linear weights
0 4 2 Moving average with exponential weights
0 5 0 Mean
0 5 1 Mode
0 5 2 Median
1 0 0 Seasonal decomposition with LOCF
1 0 1 Seasonal decomposition with mean
1 0 2 Seasonal decomposition with linear approximation
1 1 0 Seasonal split with LOCF
1 1 1 Seasonal split with mean
1 1 2 Seasonal split with linearapproximation
2 0 0 Kalman smoothing with basic ARIMA model
2 0 1 Kalman smoothing with basic state space model
2 1 Not Applicable k-nearest neighbors with median
2 2 Not Applicable Linear regression model]]&gt;&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594016157028" name="aip_numSeries" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
number of different measures you want to predict.
Definition: type of input; Single input for forecasting = 0/1, Multiple inputs for forecasting > 1]]&gt;&lt;/comment>&#xd;
      &lt;default>1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594369195805" name="aip_algSubType" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Group 0 Alg 4/5 SubType = 0,1,2 
Group 1 Alg 0/1 SubType = 0,1,2 
Group 2 Alg 0 SubType = 0,1]]&gt;&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594016140768" name="aip_inputValues" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[To be filled from groovy job/ADAPT
Is automatically filled with values from extract "EXTRACT_InputValues".
Adapt extract "EXTRACT_InputValues" to change input for your project]]&gt;&lt;/comment>&#xd;
      &lt;default>1,2,3,4,0,0,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,22,0,0,0,0,0,28,29,30,31,32,33,34,0,0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606092606624" name="aip_outputTypeInterpolation" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Type of output:
0: position of outlying values and suggested replacements values, 
1: position of outlying values and input with interpolations replaced
2: position of outlying values and suggested replacements values.
3: position of outlying values and suggested replacements values, zero is not an interpolation]]&gt;&lt;/comment>&#xd;
      &lt;default>2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594028012794" name="intern_bearer" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[INTERN:
To be filled from groovy job
Authentication Token for Jedox AIssisted Planning WebService]]&gt;&lt;/comment>&#xd;
      &lt;default>eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IlNzWnNCTmhaY0YzUTlTNHRycFFCVEJ5TlJSSSIsImtpZCI6IlNzWnNCTmhaY0YzUTlTNHRycFFCVEJ5TlJSSSJ9.eyJhdWQiOiI3YmIzNTBjYi01NzU3LTRjODUtYjA5OC0wZjlmZDVjN2U0ZTQiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83YzMyMTY4Ni1jMzAwLTQ3ZTQtYjM5ZS04ZGU5ODg5M2U4ODYvIiwiaWF0IjoxNTk0MDI3Njk4LCJuYmYiOjE1OTQwMjc2OTgsImV4cCI6MTU5NDAzMTU5OCwiYWNyIjoiMSIsImFpbyI6IkUyQmdZT2plb3k0cjJSMFo5UzVpMTlLeml0UC9pNS82RUNYQS9wekpmZTE4cDlvWkV6TUEiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiODliMjg2MzAtMDg4Zi00NmE5LTg1ZWItMTRhOTE5YzJmOTRhIiwiYXBwaWRhY3IiOiIwIiwiaXBhZGRyIjoiMTc4LjcuMTEwLjE3MiIsIm5hbWUiOiJQZXRlciBTdHJvaG0iLCJvaWQiOiJmODQ5NDFjOC0wMTY5LTQ3MGItOTJkOC01OTM2YzA5NTk0YzgiLCJzY3AiOiJ1c2VyX2ltcGVyc29uYXRpb24iLCJzdWIiOiI5WU5iVzdMVC1HWExXbXdfSGl5cDJQYnAyWlVtQWlURHRSbjl2cFg4alRJIiwidGlkIjoiN2MzMjE2ODYtYzMwMC00N2U0LWIzOWUtOGRlOTg4OTNlODg2IiwidW5pcXVlX25hbWUiOiJwZXRlckBhaXNzaXN0ZWRwbGFubmluZy5jbG91ZC5KZWRveC5jb20iLCJ1cG4iOiJwZXRlckBhaXNzaXN0ZWRwbGFubmluZy5jbG91ZC5KZWRveC5jb20iLCJ1dGkiOiJZdXhWd3lVb0JFcXNoNTVkMjE1TUFBIiwidmVyIjoiMS4wIn0.a_DP73hLtw1LyANuUjWpZJJao2YzAxToNYqfgwNimhGqMgQQ6yJz8GdCP91i8DgHiCIGLPN5d_Reen5Mrdbz8cnG9llBuO0Gg2W_j8ZBq65Me6oG6hqP3ALyFO0nzQHzhHKEcBt0FeJ82jS5OPgJAApLf46jzi25IAtiLWwZc20PRBiO7MnW-AEPz5c9Xj_UGmmJuADiHApFltPgua4xTJLh8wMee571xI3UpNPIwBaYoQcPaCvYN6qA2lvNgqDWl-etK77YM8EqI9IMii1fQOVH0x6FtdzlQpBpZ_H3FdIBwb8K2i9O8xdO_chUQjaBauRe9VwjZTvmMPO6cru7EQ&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="aip_failSafe" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="intern_rowStartInput" modified="1593697644039" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_rowStopInput" modified="1593697644039" modifiedBy="peter" />&#xd;
    &lt;variable modified="1593697644039" name="sys_targetCube" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
Cube to use in database. In most cases this will be the same as source cube.&lt;/comment>&#xd;
      &lt;default>targetCube&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594213609206" name="time_elementEnd" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT (optional if aip_numValues is set):
Put last element of prediction period here (e.g. 2019-10 if you want the last predicted element to be 2019-10).
If you do not put sth. here, elementEnd will be calculated from: time_elementStart + aip_numValues
RELATED: time_elementStart; aip_numValues
WAS empty]]&gt;&lt;/comment>&#xd;
      &lt;default>2019-06&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="time_yearRegExpDeny" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
Prefilled. Add more elements that should be ignored (depending on time dimension)&#xd;
-00&lt;/comment>&#xd;
      &lt;default>00&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="time_leadingZero" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
If there is no leading zero keep variable EMPTY.&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="time_yearRegExpAccept" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
To be filled from user (depending on time dimension).&#xd;
(-0.$|-1.$)&lt;/comment>&#xd;
      &lt;default>(0.|1.)&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="time_dateFormatSourceDaily" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
time format of custom time dimension until MONTH&#xd;
&#xd;
NOTE: if you want to use daily data, please set variable time_dateDailySeparator&lt;/comment>&#xd;
      &lt;default>yyyy-MM-dd&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_copyByWeekday" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[0 - default behaviour (months are copied by month, days are copied by month)
1 - days are copied by weekday]]&gt;&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="time_dateDailySeparator" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE (if you want to use daily data):&#xd;
e.g. 2019-02-17 -&amp;gt; date separator daily would be (..) (for 2 day digits)&#xd;
if you do not want to use daily data, leave it $&lt;/comment>&#xd;
      &lt;default>$&lt;/default>&#xd;
    &lt;/variable&gt;&#xd;
    &lt;variable modified="1593697644039" name="time_dateSeparator" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
e.g. 2019-02 -&amp;gt; date separator would be -&#xd;
if no separator exists, keep empty&lt;/comment>&#xd;
      &lt;default>-&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="time_dateFormatSourceMonthly" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
time format of custom time dimension until MONTH&#xd;
&#xd;
NOTE: if you want to use daily data, please set variable time_dateDailySeparator&lt;/comment>&#xd;
      &lt;default>yyyy-MM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="ext_numValues" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[SET FROM EXTERNAL
number of values to be forecasted (e.g. 12 if you want the next 12 month to be predicted)]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="ext_period" modified="1593697644039" modifiedBy="peter" />&#xd;
    &lt;variable modified="1593697644039" name="time_inputStartDate" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
First year in database (or first year that should be used for prediction)]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_copyDaysMonthlySort" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>yyyyMM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_maxSeries" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594213603369" name="time_elementStart" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Put first element of prediction period here (e.g. 2018-11 if you want to start with prediction at November 2018-11 using all previous data froo 2018-10 backwards)
RELATED: time_elementEnd; aip_numValues]]&gt;&lt;/comment>&#xd;
      &lt;default>2016-07&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="sys_configCubes" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AICubes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="sys_configSettings" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AISettings&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="sys_aiConfigCube" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIConfigCube&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594040608046" name="sys_prefix" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>DP&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="sys_configSettingsValue" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>~&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_inputSum" modifiedBy="peter">&#xd;
      &lt;comment>INTERN&#xd;
Sum of input values for zero checking&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_extractTargetDeny" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="db_elementTargetVersion" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Defines the version element for prediction]]&gt;&lt;/comment>&#xd;
      &lt;default>elemTargetVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_extractTargetAccept" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="intern_inputRange" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594019364617" name="sys_AIssistedPass" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your password for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_pass", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>YOUR-PASSWORD-HERE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1593697644039" name="sys_database" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Name of database used.]]&gt;&lt;/comment>&#xd;
      &lt;default>CUSTOM-DATABASE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594034043075" name="intern_dateCopyFormat" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594034089058" name="intern_copyDaysFormat" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594034143404" name="intern_seriesStart" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594034178724" name="intern_seriesStop" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594034224253" name="intern_rowStart" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594034252094" name="intern_rowStop" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594034297229" name="intern_rowCount" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1594034383917" name="aip_numValues" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="intern_extractCopyAccept" modified="1594041784330" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_extractCopyDeny" modified="1594041815164" modifiedBy="peter" />&#xd;
    &lt;variable modified="1606124302747" name="service_api" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>ai-r/api&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606128225311" name="service_protocol" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>https&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606124302747" name="service_combinedURL" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>jedox&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606215919734" name="service_version" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>v1.1.2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606128540049" name="service_function" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>interpolationJedox&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606128280426" name="service_pod" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606310013230" name="service_version_pod" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>v1.1.1&lt;/default>&#xd;
    &lt;/variable>&#xd;
  &lt;/variables>&#xd;
  &lt;connections>&#xd;
    &lt;connection modified="1593697644039" name="AIP_getToken" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>Authenticate on AAD Server with AIssisted Planning user &amp;amp; password.&#xd;
Enter credentials in variables or AIssisted Planning Model settings.&lt;/comment>&#xd;
      &lt;resource>https://login.microsoftonline.com/aissistedplanning.onmicrosoft.com/oauth2/token&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Content-Type">application/x-www-form-urlencoded&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;parameters>&#xd;
        &lt;parameter name="grant_type">password&lt;/parameter>&#xd;
        &lt;parameter name="client_id">89b28630-088f-46a9-85eb-14a919c2f94a&lt;/parameter>&#xd;
        &lt;parameter name="username">${sys_AIssistedUser}&lt;/parameter>&#xd;
        &lt;parameter name="password">${sys_AIssistedPass}&lt;/parameter>&#xd;
        &lt;parameter name="resource">7bb350cb-5757-4c85-b098-0f9fd5c7e4e4&lt;/parameter>&#xd;
      &lt;/parameters>&#xd;
      &lt;ssl>verify&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1593697644039" name="CON_jedoxGlobal" type="JedoxOlap" modifiedBy="peter">&#xd;
      &lt;global nameref="localhost" />&#xd;
      &lt;database>${sys_database}&lt;/database>&#xd;
      &lt;ssl>trust&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1606310225482" name="AIP_functionCall_interpolation" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[REST Call to Jedox AIssistedPlanning Web Service
FUNCTION: interpolationJedox/vX.X.X
ADAPT: You have to enter all web service inputs here]]&gt;&lt;/comment>&#xd;
      &lt;resource>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;timeout>0&lt;/timeout>&#xd;
      &lt;ignoreCookiesPolicy>false&lt;/ignoreCookiesPolicy>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Authorization">Bearer ${intern_bearer}&lt;/header>&#xd;
        &lt;header name="Content-Type">application/json&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;ssl>verify&lt;/ssl>&#xd;
      &lt;requestBody>&lt;![CDATA[{
  "InputValues":"${aip_inputValues}",
  "Period":${aip_period},
  "NumInputs":${aip_numSeries},
  "AlgGroup":${aip_algGroup},
  "AlgorithmType":${aip_interpolationType},
  "AlgSubType":${aip_algSubType},
  "OutputType":${aip_outputTypeInterpolation},
  "AIssistedUser":"${sys_AIssistedUser}",
  "AIssistedKey":"${sys_AIssistedAPIKEY}"
}]]&gt;&lt;/requestBody>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1606310059059" name="AIP_functionCall_interpolation_pod" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[REST Call to Jedox AIssistedPlanning Web Service       
FUNCTION: extrapolateJedox/vX.X.X
ADAPT: You have to enter all web service inputs here]]&gt;&lt;/comment>&#xd;
      &lt;resource>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version_pod}&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;timeout>0&lt;/timeout>&#xd;
      &lt;ignoreCookiesPolicy>false&lt;/ignoreCookiesPolicy>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Content-Type">application/json&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;ssl>off&lt;/ssl>&#xd;
      &lt;requestBody>&lt;![CDATA[{
  "InputValues":"${aip_inputValues}",
  "Period":${aip_period},
  "NumInputs":${aip_numSeries},
  "AlgGroup":${aip_algGroup},
  "AlgorithmType":${aip_interpolationType},
  "AlgSubType":${aip_algSubType},
  "OutputType":${aip_outputTypeInterpolation}
}]]&gt;&lt;/requestBody>&#xd;
    &lt;/connection>&#xd;
  &lt;/connections>&#xd;
  &lt;extracts>&#xd;
    &lt;extract modified="1593697644039" name="INPUT_reportVariables" type="Cube" modifiedBy="peter">&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query drillthrough="false" onlyBasisAsDefault="true" useRules="false" zeroSuppressionType="includeEmpty">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${sys_configCubes}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_sourceCube}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${sys_configSettings}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_configSettingsValue}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${sys_configParameters}">&#xd;
            &lt;condition mode="onlyBases" operator="like" type="accept">&lt;![CDATA[^${sys_prefix}]]&gt;&lt;/condition>&#xd;
            &lt;condition mode="onlyBases" operator="like" type="deny">&lt;![CDATA[${sys_prefix}PredictionInterpolationFailSafe|${sys_prefix}PredictionInterpolationType]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_aiConfigCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1593697644039" name="CT_inputCheck" type="ConstantTable" modifiedBy="peter">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>inputValues&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${intern_inputSum}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1593697644039" name="INPUT_sourceValues" type="Cube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input data
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query celltype="both" drillthrough="false" onlyBasisAsDefault="false" useRules="true" zeroSuppressionType="includeEmptyDefaultMapping">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractSourceAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractSourceDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606321008812" name="AIP_extractResult_interpolation" type="Json" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Results from Jedox AIssisted Planning Web Service]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="AIP_functionCall_interpolation${service_pod}" />&#xd;
      &lt;alias_map>&#xd;
        &lt;alias name="web_success">1&lt;/alias>&#xd;
        &lt;alias name="web_errorMessage">2&lt;/alias>&#xd;
        &lt;alias name="values">3&lt;/alias>&#xd;
        &lt;alias name="position">4&lt;/alias>&#xd;
        &lt;alias name="success">5&lt;/alias>&#xd;
        &lt;alias name="errorMessage">6&lt;/alias>&#xd;
      &lt;/alias_map>&#xd;
      &lt;query>&#xd;
        &lt;level>$&lt;/level>&#xd;
        &lt;fields>&#xd;
          &lt;field>success&lt;/field>&#xd;
          &lt;field>errorMessage&lt;/field>&#xd;
          &lt;field>outputParameters.values[0][0]&lt;/field>&#xd;
          &lt;field>outputParameters.values[0][1]&lt;/field>&#xd;
          &lt;field>outputParameters.values[1]&lt;/field>&#xd;
          &lt;field>outputParameters.values[2]&lt;/field>&#xd;
        &lt;/fields>&#xd;
      &lt;/query>&#xd;
      &lt;cache>true&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1593697644039" modifiedBy="peter" name="AIP_extractToken" type="Json">&#xd;
      &lt;comment>token for authetication&lt;/comment>&#xd;
      &lt;connection nameref="AIP_getToken" />&#xd;
      &lt;query>&#xd;
        &lt;level>$&lt;/level>&#xd;
        &lt;fields>&#xd;
          &lt;field>token_type&lt;/field>&#xd;
          &lt;field>access_token&lt;/field>&#xd;
        &lt;/fields>&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1594213335012" name="OUTPUT_rowCount" type="CubeSlice" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementTargetVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractSourceAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractSourceDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept"&gt;&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1593697644039" name="INPUT_accuracyTarget" type="CubeSlice" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementTargetVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${time_elementStart}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}"&gt;&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606124302747" name="VAR_service" type="ConstantTable" modifiedBy="peter">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>Column1&lt;/value>&#xd;
          &lt;value>Column2&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/value>&#xd;
          &lt;value>${service_pod}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
  &lt;/extracts>&#xd;
  &lt;transforms>&#xd;
    &lt;transform modified="1593697644039" name="FT_macroVariables" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="${sys_configParameters}" />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FT_dateTransformInput" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>Adds date column which can be sorted for input&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_sourceValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606087537674" name="FT_processCopy_interpolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_mergeOutput_interpolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^§§§row§§§$|^date_sort$|#Value" include=".">&#xd;
          &lt;coordinate name="${db_dimensionVersion}">&#xd;
            &lt;input constant="Interpolation" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FT_trimOutput_interpolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>Transform web service results to correct format&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractResult_interpolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="trim" type="SubString">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="position" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;begin>2&lt;/begin>&#xd;
            &lt;fromSide>left&lt;/fromSide>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="trim2" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="trim" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>]&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="trim_1" type="SubString">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;begin>2&lt;/begin>&#xd;
            &lt;fromSide>left&lt;/fromSide>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="trim_2" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="trim_1" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>]&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="success|errorMessage">&#xd;
          &lt;coordinate name="values">&#xd;
            &lt;input nameref="trim_2" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="position">&#xd;
            &lt;input nameref="trim2" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="TV_sortInput_interpolationKeys" type="TableView" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;start>${intern_rowStartInput}&lt;/start>&#xd;
      &lt;end>${intern_rowStopInput}&lt;/end>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_dateTransformInput_interpolationKeys" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimensionMeasure}" order="asc" />&#xd;
        &lt;input nameref="${db_dimensionVersion}" />&#xd;
        &lt;input nameref="${db_dimension1}" />&#xd;
        &lt;input nameref="${db_dimension2}" />&#xd;
        &lt;input nameref="${db_dimension3}" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FT_switchControlResult_Interpolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractResult_interpolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="success" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="success" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>2&lt;/occurence>&#xd;
            &lt;separator>"&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="switchInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="success" type="String" />&#xd;
            &lt;input nameref="web_success" type="boolean" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(web_success == false || success != "True")

	return 0;

else

  return 1;]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="errorMessage" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="errorMessage" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>2&lt;/occurence>&#xd;
            &lt;separator>"&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="combinedErrorMessage" type="Concatenation">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="web_errorMessage" />&#xd;
            &lt;input nameref="errorMessage" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;delimiter>§&lt;/delimiter>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="success" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="combinedErrorMessage" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="switchInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FN_convertChunks" type="FieldNormalization" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_computeChunks" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>chunkStart&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="TA_countOutput" type="TableAggregation" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="OUTPUT_rowCount" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="count" name="outputRows" type="text">&#xd;
            &lt;input nameref="${db_dimensionMeasure}" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="TV_sortInput" type="TableView" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions
${intern_rowStop}
${intern_rowStart}]]&gt;&lt;/comment>&#xd;
      &lt;start>${intern_rowStartInput}&lt;/start>&#xd;
      &lt;end>${intern_rowStopInput}&lt;/end>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_dateTransformInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimensionVersion}" order="asc" />&#xd;
        &lt;input nameref="${db_dimensionMeasure}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension1}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension2}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension3}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" order="asc" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FT_interpolationInputRows" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortInput_interpolationKeys" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FT_indexOutputValues_interpolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Add row numbers to values transform for joining.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FN_outputValues_interpolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="§§§row§§§" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="TA_input" type="TableAggregation" modifiedBy="peter">&#xd;
      &lt;comment>Convert a column with a value in each row into a single string with comma separated values (this format is required for the web service).&#xd;
ADAPT: If using the extended dimension version change the Data Source to "PM_SP_SORT_cube_input_extended"&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="true" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="group_concat" name="aip_inputValues">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure aggregate="sum" name="sum">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FT_computeChunks" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TA_countInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="chunkStart" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="c" nameref="Count" type="int" />&#xd;
            &lt;input alias="m" constant="${intern_maxSeries}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>s = '';&#xd;
for (int i=0;i &amp;lt; c; i+=m){&#xd;
  s = s + Integer.toString(i) + ',';&#xd;
}&#xd;
s =s.substring(0, s.length()-1)&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606126433192" name="FT_macroVariablesDimLoop" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TD_macroVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="service_pod" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="_pod" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" /&gt;&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d1]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d1]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode15" type="Groovy"&gt;&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="${sys_prefix}OtherDim" include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="TD_macroVariables" type="TableDenormalization" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures aggregate="first" denormalize="${sys_configParameters}" source="FT_macroVariables" valuename="#Value" />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FN_outputValues_interpolation" type="FieldNormalization" modifiedBy="peter">&#xd;
      &lt;comment>Transform Comma separated values from Web Service result into a column where each value is in a separate row.&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_trimOutput_interpolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>values&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="TA_countInput" type="TableAggregation" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_accuracyTarget" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="count" name="Count" type="text">&#xd;
            &lt;input nameref="${db_dimensionMeasure}" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="TJ_chunkSize" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FN_convertChunks" />&#xd;
        &lt;source nameref="TA_countOutput" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" unique="false">&#xd;
          &lt;left nameref="FN_convertChunks" />&#xd;
          &lt;right nameref="TA_countOutput" />&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FT_addChunkSize" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_chunkSize" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="intern_seriesStart" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="chunkStart" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return chunkStart + 1]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="aip_numSeries" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="c" nameref="Count" type="int" />&#xd;
            &lt;input alias="i" nameref="intern_seriesStart" type="int" />&#xd;
            &lt;input alias="m" constant="${intern_maxSeries}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (i + m > c &amp;&amp; c % m != 0){

  return c % m

}else{

  return m

}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_outputRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="outputRows" nameref="outputRows" type="int" />&#xd;
            &lt;input alias="numInputs" nameref="Count" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return outputRows/numInputs;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_seriesStop" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="chunkStart" type="int" />&#xd;
            &lt;input alias="a" nameref="aip_numSeries" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return i + a]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStart" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="chunkStart" type="int" />&#xd;
            &lt;input alias="p" nameref="intern_outputRange" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return (p*3) * i + 1]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStop" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="intern_rowStart" type="int" />&#xd;
            &lt;input alias="n" nameref="intern_outputRange" type="int" />&#xd;
            &lt;input alias="s" nameref="aip_numSeries" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
            &lt;script>&lt;![CDATA[return i-1 + s*n * 3;
//i * p * n * d;]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStopInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="intern_seriesStop" type="int" />&#xd;
            &lt;input alias="d" constant="${intern_inputRange}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return i * d;
//i * p * n * d;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStartInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="chunkStart" type="int" />&#xd;
            &lt;input alias="p" constant="${intern_inputRange}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return i * p +1]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^chunkStart$" include="_">&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="aip_numSeries" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_seriesStart" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_seriesStop" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStart" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStop" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_rowCount">&#xd;
            &lt;input nameref="Count" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStartInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStopInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_numValues">&#xd;
            &lt;input nameref="intern_outputRange" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1594034879883" name="TJ_mergeOutput_interpolation" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Table join for writing results in cube in correct format.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_interpolationInputRows" />&#xd;
        &lt;source nameref="FT_outputValues_interpolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" type="inner" unique="false">&#xd;
          &lt;left nameref="FT_interpolationInputRows">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/left>&#xd;
          &lt;right nameref="FT_outputValues_interpolation">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/right>&#xd;
          &lt;conditions>&#xd;
            &lt;condition type="eq" />&#xd;
          &lt;/conditions>&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1593697644039" name="FT_dateTransformInput_interpolationKeys" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>Adds date column which can be sorted for input&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_sourceValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1594028403317" name="FT_normalizePositions_interpoaltion" type="FieldNormalization" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_trimOutput_interpolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>position&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1594028489449" name="FT_indexOutputPositions_interpolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Add row numbers to values transform for joining.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_normalizePositions_interpoaltion" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="position" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="§§§row§§§" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1594028564169" name="TJ_mergeOutputPositions_interpolation" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Table join for writing results in cube in correct format.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_indexOutputPositions_interpolation" />&#xd;
        &lt;source nameref="FT_indexOutputValues_interpolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" type="inner" unique="false">&#xd;
          &lt;left nameref="FT_indexOutputPositions_interpolation">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/left>&#xd;
          &lt;right nameref="FT_indexOutputValues_interpolation">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/right>&#xd;
          &lt;conditions>&#xd;
            &lt;condition type="eq" />&#xd;
          &lt;/conditions>&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1594028889463" name="FT_outputValues_interpolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_mergeOutputPositions_interpolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="val" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="position" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="0.0" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1.0" />&#xd;
                &lt;result nameref="values" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate name="values">&#xd;
            &lt;input nameref="val" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="§§§row§§§" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606126995906" name="FT_variablesStaticTokenInput" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input for Loop job containing variables.
Calculates all the time related variables automatically.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractToken" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="format_date" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstDbYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numPeriods" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="last" nameref="intern_lastDBYear" type="int" />&#xd;
            &lt;input alias="first" nameref="intern_firstDbYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>false&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[dif = last-first;
if (dif > 0)
	return dif;
else
	return 1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_periodEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="elemEnd" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="usedFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${intern_dateFormat}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[e = Date.parse(usedFormat, elemEnd);

return e.format(internFormat);]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_srcYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_numPeriods" type="int" />&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastDBMonth" type="String" />&#xd;
            &lt;input alias="lastDBYear" nameref="intern_lastDBYear" type="String" />&#xd;
            &lt;input alias="firstDbYear" nameref="intern_firstDbYear" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[srcYearRng = "(" + firstDbYear;
int firstDBYear = firstDbYear.toInteger();
for(i=1;i&lt;intern_numPeriods;i++){

 srcYearRng =  srcYearRng+"|"+(firstDBYear+i);

}

srcYearRng = srcYearRng +"|"+ lastDBYear + ")";



return srcYearRng;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)

  return "§";

nval = 12+12-intern_firstMonth+1; // full year plus rest of year

rolling = "(";

for (i = 1; i &lt;intern_firstMonth; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(i&lt;10)

  rolling = rolling+"|"+"${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script&gt;&lt;![CDATA[nval = 12+12-intern_firstMonth+1+1; // full year plus rest of year

rolling = "(";

//first month

first = intern_firstMonth+1;

if(first > 12)

  return "§";

if(first &lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(first &lt;10)

  rolling = rolling+"${time_leadingZero}"+first;

  else

  rolling = rolling+""+first;

for (i = intern_firstMonth+1; i &lt;=12; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}1";

  else if(i&lt;10)

  rolling = rolling+"|${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_srcYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days
arr = format.split("\\" + sep);
if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  return "^" + month + sep + year + day
}
  else {
  return "^" + year + sep + month + day
  }
}
else{
df = dailyFormat.split("\\" + sep);
def resultArr = new String[3];
  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    resultArr[i] = month
    }
    else if (df[i].toUpperCase().contains("D")) {
    resultArr[i] = "[0-3][0-9]"  
    }
    else {
    resultArr[i] = year
    } 
  }
return resultArr.join(sep);  
}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults&gt;&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_srcYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_lastDBYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockSrcEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_firstDbYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockSrcBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);

if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  //Don't need to care for days for s1.
  s1 = month1 + sep + year1;
  s2 = month2 + sep + year2 + day;
  s3 = month3 + sep + year3 + day;
  }
  else {
  s1 = year1 + sep + month1; 
  s2 = year2 + sep + month2 + day;
  s3 = year3 + sep + month3 + day;
  }
}
else{
df = dailyFormat.split("\\" + sep);
s1 = new String[3];
s2 = new String[3];
s3 = new String[3];

  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    s1[i] = month1;
    s2[i] = month2;
    s3[i] = month3;
    }
    else if (df[i].toUpperCase().contains("D")) {
    s2[i] = day;
    s3[i] = day;    
    }
    else if (df[i].toUpperCase().contains("Y")){
    s1[i] = year1;
    s2[i] = year2;
    s3[i] = year3;
    } 
  }
  s1 = s1 - null;
  s1 = s1.join(sep);
  s2 = s2.join(sep);
  s3 = s3.join(sep);
  
}
return s1 + "|" + s2 +"|"+ s3 ;

//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetAccept" nameref="intern_extractSourceAccept" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetAccept;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetDeny" nameref="intern_extractSourceDeny" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetDeny;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="yyyyMM" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="yyyyMM" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="yyyyMMdd" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_inputRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="date1" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="date2" constant="${time_elementStart}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="daily" constant="${time_dateDailySeparator}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[import groovy.time.TimeCategory;

Date d1 = Date.parse(internFormat, date1);
Date d2 = Date.parse(internFormat, date2);

if(daily == "\$") {
	years = ((int)d1.year-(int)d2.year)*12;
	months = (int)d1.month-(int)d2.month;
	return years + months + 1;
}
else
	return d1-d2+1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="period" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="a" constant="${ext_period}" type="float" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return a;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateCopyFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_copyDaysMonthlySort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${intern_dateFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_copyDaysFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${time_currentFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_maxSeries" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_maxSeries}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="like" type="accept" value="(..)" />&#xd;
                &lt;result constant="2" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_combinedURL" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${sys_AIssistedURL}:${sys_AIssistedPort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="jedox" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_protocol" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="https" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="http" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_api" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="api" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="ai-r/api" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate name="intern_bearer">&#xd;
            &lt;input nameref="access_token" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_inputRange" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_period">&#xd;
            &lt;input nameref="period" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateCopyFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_copyDaysFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_maxSeries" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_combinedURL" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_protocol" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_api" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606126495226" name="FT_variablesStaticTokenInput_pod" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input for Loop job containing variables.
Calculates all the time related variables automatically.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="VAR_service" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="format_date" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstDbYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numPeriods" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="last" nameref="intern_lastDBYear" type="int" />&#xd;
            &lt;input alias="first" nameref="intern_firstDbYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>false&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[dif = last-first;
if (dif > 0)
	return dif;
else
	return 1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_periodEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="elemEnd" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="usedFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${intern_dateFormat}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[e = Date.parse(usedFormat, elemEnd);

return e.format(internFormat);]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_srcYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_numPeriods" type="int" />&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastDBMonth" type="String" />&#xd;
            &lt;input alias="lastDBYear" nameref="intern_lastDBYear" type="String" />&#xd;
            &lt;input alias="firstDbYear" nameref="intern_firstDbYear" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[srcYearRng = "(" + firstDbYear;
int firstDBYear = firstDbYear.toInteger();
for(i=1;i&lt;intern_numPeriods;i++){

 srcYearRng =  srcYearRng+"|"+(firstDBYear+i);

}

srcYearRng = srcYearRng +"|"+ lastDBYear + ")";



return srcYearRng;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)

  return "§";

nval = 12+12-intern_firstMonth+1; // full year plus rest of year

rolling = "(";

for (i = 1; i &lt;intern_firstMonth; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(i&lt;10)

  rolling = rolling+"|"+"${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-intern_firstMonth+1+1; // full year plus rest of year

rolling = "(";

//first month

first = intern_firstMonth+1;

if(first > 12)

  return "§";

if(first &lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(first &lt;10)

  rolling = rolling+"${time_leadingZero}"+first;

  else

  rolling = rolling+""+first;

for (i = intern_firstMonth+1; i &lt;=12; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}1";

  else if(i&lt;10)

  rolling = rolling+"|${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_srcYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days
arr = format.split("\\" + sep);
if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  return "^" + month + sep + year + day
}
  else {
  return "^" + year + sep + month + day
  }
}
else{
df = dailyFormat.split("\\" + sep);
def resultArr = new String[3];
  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    resultArr[i] = month
    }
    else if (df[i].toUpperCase().contains("D")) {
    resultArr[i] = "[0-3][0-9]"  
    }
    else {
    resultArr[i] = year
    } 
  }
return resultArr.join(sep);  
}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_srcYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_lastDBYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockSrcEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_firstDbYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockSrcBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);

if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  //Don't need to care for days for s1.
  s1 = month1 + sep + year1;
  s2 = month2 + sep + year2 + day;
  s3 = month3 + sep + year3 + day;
  }
  else {
  s1 = year1 + sep + month1; 
  s2 = year2 + sep + month2 + day;
  s3 = year3 + sep + month3 + day;
  }
}
else{
df = dailyFormat.split("\\" + sep);
s1 = new String[3];
s2 = new String[3];
s3 = new String[3];

  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    s1[i] = month1;
    s2[i] = month2;
    s3[i] = month3;
    }
    else if (df[i].toUpperCase().contains("D")) {
    s2[i] = day;
    s3[i] = day;    
    }
    else if (df[i].toUpperCase().contains("Y")){
    s1[i] = year1;
    s2[i] = year2;
    s3[i] = year3;
    } 
  }
  s1 = s1 - null;
  s1 = s1.join(sep);
  s2 = s2.join(sep);
  s3 = s3.join(sep);
  
}
return s1 + "|" + s2 +"|"+ s3 ;

//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetAccept" nameref="intern_extractSourceAccept" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetAccept;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetDeny" nameref="intern_extractSourceDeny" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetDeny;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="yyyyMM" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="yyyyMM" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="yyyyMMdd" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_inputRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="date1" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="date2" constant="${time_elementStart}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="daily" constant="${time_dateDailySeparator}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[import groovy.time.TimeCategory;

Date d1 = Date.parse(internFormat, date1);
Date d2 = Date.parse(internFormat, date2);

if(daily == "\$") {
	years = ((int)d1.year-(int)d2.year)*12;
	months = (int)d1.month-(int)d2.month;
	return years + months + 1;
}
else
	return d1-d2+1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="period" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="a" constant="${ext_period}" type="float" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return a;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateCopyFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_copyDaysMonthlySort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${intern_dateFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_copyDaysFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${time_currentFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_maxSeries" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_maxSeries}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="like" type="accept" value="(..)" />&#xd;
                &lt;result constant="2" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_protocol" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="https" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="http" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_combinedURL" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${sys_AIssistedURL}:${sys_AIssistedPort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="jedox" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_api" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="api" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="ai-r/api" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_inputRange" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_period">&#xd;
            &lt;input nameref="period" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateCopyFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_copyDaysFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_maxSeries" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_protocol" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_combinedURL" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_api" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
  &lt;/transforms>&#xd;
  &lt;loads>&#xd;
    &lt;load modified="1606216460616" name="LOAD_interpolation" type="Cube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Load Prediction data
ADAPT for own dimensions - Make sure you have added version(s) for prediction/upper/lower or accuracy]]&gt;&lt;/comment>&#xd;
      &lt;source nameref="FT_processCopy_interpolation" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>insert&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="none" deactivateSVS="false" name="${sys_targetCube}" splash="default" />&#xd;
    &lt;/load>&#xd;
  &lt;/loads>&#xd;
  &lt;jobs>&#xd;
    &lt;job modified="1593697644039" name="SW_executionLogicInterpolation" type="Switch" modifiedBy="peter">&#xd;
      &lt;switchOn>&#xd;
        &lt;source nameref="FT_switchControlResult_Interpolation" row="1">&#xd;
          &lt;input nameref="switchInput" />&#xd;
        &lt;/source>&#xd;
      &lt;/switchOn>&#xd;
      &lt;switchs>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="1" />&#xd;
          &lt;execution nameref="EXECUTE_interpolationLoading" type="job" />&#xd;
        &lt;/switch>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="0" />&#xd;
          &lt;execution nameref="GRV_logWsError_Interpolation" type="job" />&#xd;
        &lt;/switch>&#xd;
      &lt;/switchs>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1593697644039" name="Loop_overAllChunks" type="Loop" modifiedBy="peter">&#xd;
      &lt;loop nameref="FT_addChunkSize" />&#xd;
      &lt;execution nameref="Loop_inputValues" type="job" />&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1593697644039" name="SW_emptyCheck" type="Switch" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Checks if the prediction returns success state, then triggers copying and loading data.]]&gt;&lt;/comment>&#xd;
      &lt;switchOn>&#xd;
        &lt;source nameref="CT_inputCheck" row="1">&#xd;
          &lt;input nameref="inputValues" />&#xd;
        &lt;/source>&#xd;
      &lt;/switchOn>&#xd;
      &lt;switchs>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="deny" value="0" />&#xd;
          &lt;execution nameref="SW_executionLogicInterpolation" type="job" />&#xd;
        &lt;/switch>&#xd;
      &lt;/switchs>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606125939906" name="PresetStaticInput" type="Loop" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Sets variables for main job]]&gt;&lt;/comment>&#xd;
      &lt;loop nameref="FT_variablesStaticTokenInput${service_pod}" />&#xd;
      &lt;execution nameref="Loop_overAllChunks" type="job" />&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1593697644039" name="EXECUTE_interpolationLoading" type="Standard" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="LOAD_interpolation" type="load" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1607125242823" name="GRV_logWsError_Interpolation" type="Groovy" modifiedBy="peter">&#xd;
      &lt;jobscript>&lt;![CDATA[extract = API.initSource("FT_switchControlResult_Interpolation");
extract.nextRow();

err = extract.getColumnString("combinedErrorMessage");
if(err.contains("1019"))
	err = err + ' - License error: Please check your license credentials and/or check if your license is expired';

if(err.contains("401"))
	err = err + ' - License error: Please check your license credentials and/or check if your license is expired';

LOG.warn(extract.getColumnString("combinedErrorMessage"));]]&gt;&lt;/jobscript>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1593697644039" name="Loop_inputValues" type="Loop" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Sets the variable aip_inputValues to the returned values of the INPUT path (Extract from source cube)]]&gt;&lt;/comment>&#xd;
      &lt;loop nameref="TA_input" />&#xd;
      &lt;execution nameref="SW_emptyCheck" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="aip_inputValues">&#xd;
          &lt;input nameref="aip_inputValues" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_inputSum">&#xd;
          &lt;input nameref="sum" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1610457509645" name="Loop_externalVariables" type="Loop" modifiedBy="peter">&#xd;
      &lt;loop nameref="FT_macroVariablesDimLoop" />&#xd;
      &lt;execution nameref="PresetStaticInput" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="service_pod">&#xd;
          &lt;input nameref="service_pod" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_elementStart">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueStart" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_elementEnd">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueEnd" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_targetCube">&#xd;
          &lt;input constant="${sys_sourceCube}" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="ext_period">&#xd;
          &lt;input nameref="${sys_prefix}Interval" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementTargetVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionTime">&#xd;
          &lt;input nameref="${sys_prefix}TimeName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureValueRegexed" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_inputStartDate">&#xd;
          &lt;input nameref="${sys_prefix}InputStartDate" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_dateDailySeparator">&#xd;
          &lt;input nameref="${sys_prefix}DateDailySeparator" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension1">&#xd;
          &lt;input nameref="dim1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim1">&#xd;
          &lt;input nameref="elem1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode1">&#xd;
          &lt;input nameref="mode1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension2">&#xd;
          &lt;input nameref="dim2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim2">&#xd;
          &lt;input nameref="elem2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode2">&#xd;
          &lt;input nameref="mode2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension3">&#xd;
          &lt;input nameref="dim3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim3">&#xd;
          &lt;input nameref="elem3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode3">&#xd;
          &lt;input nameref="mode3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension4">&#xd;
          &lt;input nameref="dim4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim4">&#xd;
          &lt;input nameref="elem4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode4">&#xd;
          &lt;input nameref="mode4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension5">&#xd;
          &lt;input nameref="dim5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim5">&#xd;
          &lt;input nameref="elem5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode5">&#xd;
          &lt;input nameref="mode5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension6">&#xd;
          &lt;input nameref="dim6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim6">&#xd;
          &lt;input nameref="elem6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode6">&#xd;
          &lt;input nameref="mode6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension7">&#xd;
          &lt;input nameref="dim7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim7">&#xd;
          &lt;input nameref="elem7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode7">&#xd;
          &lt;input nameref="mode7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension8">&#xd;
          &lt;input nameref="dim8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim8">&#xd;
          &lt;input nameref="elem8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode8">&#xd;
          &lt;input nameref="mode8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension9">&#xd;
          &lt;input nameref="dim9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim9">&#xd;
          &lt;input nameref="elem9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode9">&#xd;
          &lt;input nameref="mode9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension10">&#xd;
          &lt;input nameref="dim10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim10">&#xd;
          &lt;input nameref="elem10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode10">&#xd;
          &lt;input nameref="mode10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension11">&#xd;
          &lt;input nameref="dim11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim11">&#xd;
          &lt;input nameref="elem11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode11">&#xd;
          &lt;input nameref="mode11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension12">&#xd;
          &lt;input nameref="dim12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim12">&#xd;
          &lt;input nameref="elem12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode12">&#xd;
          &lt;input nameref="mode12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension13">&#xd;
          &lt;input nameref="dim13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim13">&#xd;
          &lt;input nameref="elem13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode13">&#xd;
          &lt;input nameref="mode13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension14">&#xd;
          &lt;input nameref="dim14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim14">&#xd;
          &lt;input nameref="elem14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode14">&#xd;
          &lt;input nameref="mode14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension15">&#xd;
          &lt;input nameref="dim15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim15">&#xd;
          &lt;input nameref="elem15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode15">&#xd;
          &lt;input nameref="mode15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension16">&#xd;
          &lt;input nameref="dim16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim16">&#xd;
          &lt;input nameref="elem16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode16">&#xd;
          &lt;input nameref="mode16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension17">&#xd;
          &lt;input nameref="dim17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim17">&#xd;
          &lt;input nameref="elem17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode17">&#xd;
          &lt;input nameref="mode17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension18">&#xd;
          &lt;input nameref="dim18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim18">&#xd;
          &lt;input nameref="elem18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode18">&#xd;
          &lt;input nameref="mode18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension19">&#xd;
          &lt;input nameref="dim19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim19">&#xd;
          &lt;input nameref="elem19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode19">&#xd;
          &lt;input nameref="mode19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension20">&#xd;
          &lt;input nameref="dim20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim20">&#xd;
          &lt;input nameref="elem20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode20">&#xd;
          &lt;input nameref="mode20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension21">&#xd;
          &lt;input nameref="dim21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim21">&#xd;
          &lt;input nameref="elem21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode21">&#xd;
          &lt;input nameref="mode21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension22">&#xd;
          &lt;input nameref="dim22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim22">&#xd;
          &lt;input nameref="elem22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode22">&#xd;
          &lt;input nameref="mode22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension23">&#xd;
          &lt;input nameref="dim23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim23">&#xd;
          &lt;input nameref="elem23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode23">&#xd;
          &lt;input nameref="mode23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension24">&#xd;
          &lt;input nameref="dim24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim24">&#xd;
          &lt;input nameref="elem24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode24">&#xd;
          &lt;input nameref="mode24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension25">&#xd;
          &lt;input nameref="dim25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim25">&#xd;
          &lt;input nameref="elem25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode25">&#xd;
          &lt;input nameref="mode25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension26">&#xd;
          &lt;input nameref="dim26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim26">&#xd;
          &lt;input nameref="elem26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode26">&#xd;
          &lt;input nameref="mode26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension27">&#xd;
          &lt;input nameref="dim27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim27">&#xd;
          &lt;input nameref="elem27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode27">&#xd;
          &lt;input nameref="mode27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_currentFormat">&#xd;
          &lt;input nameref="${sys_prefix}DateFormat" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_copyByWeekday">&#xd;
          &lt;input nameref="${sys_prefix}CopyDaysByWeekday" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_algGroup">&#xd;
          &lt;input nameref="${sys_prefix}InterpolationGroup" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_interpolationType">&#xd;
          &lt;input nameref="${sys_prefix}InterpolationAlg" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_algSubType">&#xd;
          &lt;input nameref="${sys_prefix}InterpolationSubtype" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1593697644039" name="MainJob" type="Parallel" modifiedBy="peter">&#xd;
      &lt;comment>Main job - entry point for call from outside&lt;/comment>&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Loop_externalVariables" parallel="false" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
  &lt;/jobs>&#xd;
&lt;/project>&#xd;
</e0></e3><e4><e0><!-- definition / p9 / ~ -->&lt;?xml version="1.0" encoding="UTF-8"?>&#xd;
&lt;project name="Extrapolation" version="20.4" modified="1610457530823" modifiedBy="peter" olapId="p9" format="strict">&#xd;
  &lt;headers>&#xd;
    &lt;header name="comment" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Project description]]&gt;&lt;/comment>&#xd;
    &lt;/header>&#xd;
  &lt;/headers>&#xd;
  &lt;variables>&#xd;
    &lt;variable modified="1606097161593" name="sys_configParameters" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIParameters&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension19" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim19&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension18" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim18&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension15" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim15&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension14" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim14&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension17" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim17&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension16" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim16&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension11" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim11&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode19" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension10" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension13" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim13&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode17" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension12" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode18" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode15" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode16" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode13" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode14" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode22" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode23" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode20" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode21" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimensionTime" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"&#xd;
Use this dimension for time&lt;/comment>&#xd;
      &lt;default>timeDim&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim14" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem14&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim15" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem15&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim16" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem16&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim17" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem17&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim18" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element18&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension26" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim26&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim19" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element19&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension25" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim25&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension27" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim27&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension22" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim22&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension21" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim21&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension24" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim24&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension23" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim23&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension1" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension2" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension3" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim3&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_dimension20" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
dimension variables define dimensions for extracts&lt;/comment>&#xd;
      &lt;default>Dim20&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension4" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim4&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension5" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim5&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode11" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension6" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim6&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode12" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension7" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim7&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension8" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim8&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode10" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimension9" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
dimension variables define dimensions for extracts]]&gt;&lt;/comment>&#xd;
      &lt;default>Dim9&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim10" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim11" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem11&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim12" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim13" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem13&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim25" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element25&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim26" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element26&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim27" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element27&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementMeasure" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Measures which should be predicted.
Enter like this: M1|M2|M3|M4
-> variable "aip_numInputs" has to be the number of measures you put in here]]&gt;&lt;/comment>&#xd;
      &lt;default>elemMeasure&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim8" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem8&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim7" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem7&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim6" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem6&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_extractSourceDeny" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim5" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem5&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_sourceCube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Cube to use in database.]]&gt;&lt;/comment>&#xd;
      &lt;default>SOURCE-CUBE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim9" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem9&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim20" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element20&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim4" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem4&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim21" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element21&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim3" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem3&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim22" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element22&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim2" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim23" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element23&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementDim1" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[MAKRO TARGET:
To be filled from report call to integrator job.
Element variables define filter criteria for extract]]&gt;&lt;/comment>&#xd;
      &lt;default>elem1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementDim24" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>Element24&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode1" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode4" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode5" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimensionVersion" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"
Use this dimension for version]]&gt;&lt;/comment>&#xd;
      &lt;default>DimVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_extractSourceAccept" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode2" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode3" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode8" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode9" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode6" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode7" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode26" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode27" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementVersion" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE/MAKRO TARGET:&#xd;
version element for input values&lt;/comment>&#xd;
      &lt;default>elementVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode24" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="db_elementMode25" modified="1606097161593" modifiedBy="peter">&#xd;
      &lt;comment>MAKRO TARGET:&#xd;
To be filled from report call to integrator job.&#xd;
Element variables define filter criteria for extract&lt;/comment>&#xd;
      &lt;default>onlyNodes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_dimensionMeasure" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
dimension variables define dimensions for extracts e.g. "EXTRACT_input_values"
Use this for dimension with measures.]]&gt;&lt;/comment>&#xd;
      &lt;default>DimMeasure&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_dateFormat" modifiedBy="peter">&#xd;
      &lt;comment>INTERN:&#xd;
Date format of Integrator project for sorting, date calculation etc.&lt;/comment>&#xd;
      &lt;default>yyyyMM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_currentFormat" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>yyyy-MM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_AIssistedURL" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT
IP to AI Engine
E.g. could be Virtual Private Network (10.xx.xx.xx) or global (predictive-aissistedplanning.cloud.jedox.com)]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_url", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>predictive-aissistedplanning.cloud.jedox.com&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_AIssistedPort" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Port of AIssisted Planning engine]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_port", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>12800&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="aip_period" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
type of time; yearly=1, monthly=12, weekly=52, daily=364&lt;/comment>&#xd;
      &lt;default>12&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_AIssistedAPIKEY" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your API key for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_apikey", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>API-KEY&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="aip_algGroup" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Simple 0 
Seasonal 1 
Advanced 2]]&gt;&lt;/comment>&#xd;
      &lt;default>2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_AIssistedUser" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your user name for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_user", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>USER&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="aip_extrapolationType" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[GROUP ALGORITHM SUB-TYPE DESCRIPTION
0 0 Not Applicable Last observation carried forward(LOCF)
0 1 Not Applicable Linear approximation 
0 2 Not Applicable Spline
0 3 Not Applicable Random Sampling
0 4 0 Moving average with equal weights for all observations
0 4 1 Moving average with linear weights
0 4 2 Moving average with exponential weights
0 5 0 Mean
0 5 1 Mode
0 5 2 Median
1 0 0 Seasonal decomposition with LOCF
1 0 1 Seasonal decomposition with mean
1 0 2 Seasonal decomposition with linear approximation
1 1 0 Seasonal split with LOCF
1 1 1 Seasonal split with mean
1 1 2 Seasonal split with linearapproximation
2 0 0 Kalman smoothing with basic ARIMA model
2 0 1 Kalman smoothing with basic state space model
2 1 Not Applicable k-nearest neighbors with median
2 2 Not Applicable Linear regression model]]&gt;&lt;/comment>&#xd;
      &lt;default>lin&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="aip_numSeries" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
number of different measures you want to predict.
Definition: type of input; Single input for forecasting = 0/1, Multiple inputs for forecasting > 1]]&gt;&lt;/comment>&#xd;
      &lt;default>1&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="aip_algSubType" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Group 0 Alg 4/5 SubType = 0,1,2 
Group 1 Alg 0/1 SubType = 0,1,2 
Group 2 Alg 0 SubType = 0,1]]&gt;&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="aip_inputValues" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[To be filled from groovy job/ADAPT
Is automatically filled with values from extract "EXTRACT_InputValues".
Adapt extract "EXTRACT_InputValues" to change input for your project]]&gt;&lt;/comment>&#xd;
      &lt;default>1,2,3,4,0,0,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,22,0,0,0,0,0,28,29,30,31,32,33,34,0,0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="aip_outputType" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Type of output:
0: forward
1: backward
2: bidirectional]]&gt;&lt;/comment>&#xd;
      &lt;default>2&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_bearer" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[INTERN:
To be filled from groovy job
Authentication Token for Jedox AIssisted Planning WebService]]&gt;&lt;/comment>&#xd;
      &lt;default>eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IlNzWnNCTmhaY0YzUTlTNHRycFFCVEJ5TlJSSSIsImtpZCI6IlNzWnNCTmhaY0YzUTlTNHRycFFCVEJ5TlJSSSJ9.eyJhdWQiOiI3YmIzNTBjYi01NzU3LTRjODUtYjA5OC0wZjlmZDVjN2U0ZTQiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83YzMyMTY4Ni1jMzAwLTQ3ZTQtYjM5ZS04ZGU5ODg5M2U4ODYvIiwiaWF0IjoxNTk0MDI3Njk4LCJuYmYiOjE1OTQwMjc2OTgsImV4cCI6MTU5NDAzMTU5OCwiYWNyIjoiMSIsImFpbyI6IkUyQmdZT2plb3k0cjJSMFo5UzVpMTlLeml0UC9pNS82RUNYQS9wekpmZTE4cDlvWkV6TUEiLCJhbXIiOlsicHdkIl0sImFwcGlkIjoiODliMjg2MzAtMDg4Zi00NmE5LTg1ZWItMTRhOTE5YzJmOTRhIiwiYXBwaWRhY3IiOiIwIiwiaXBhZGRyIjoiMTc4LjcuMTEwLjE3MiIsIm5hbWUiOiJQZXRlciBTdHJvaG0iLCJvaWQiOiJmODQ5NDFjOC0wMTY5LTQ3MGItOTJkOC01OTM2YzA5NTk0YzgiLCJzY3AiOiJ1c2VyX2ltcGVyc29uYXRpb24iLCJzdWIiOiI5WU5iVzdMVC1HWExXbXdfSGl5cDJQYnAyWlVtQWlURHRSbjl2cFg4alRJIiwidGlkIjoiN2MzMjE2ODYtYzMwMC00N2U0LWIzOWUtOGRlOTg4OTNlODg2IiwidW5pcXVlX25hbWUiOiJwZXRlckBhaXNzaXN0ZWRwbGFubmluZy5jbG91ZC5KZWRveC5jb20iLCJ1cG4iOiJwZXRlckBhaXNzaXN0ZWRwbGFubmluZy5jbG91ZC5KZWRveC5jb20iLCJ1dGkiOiJZdXhWd3lVb0JFcXNoNTVkMjE1TUFBIiwidmVyIjoiMS4wIn0.a_DP73hLtw1LyANuUjWpZJJao2YzAxToNYqfgwNimhGqMgQQ6yJz8GdCP91i8DgHiCIGLPN5d_Reen5Mrdbz8cnG9llBuO0Gg2W_j8ZBq65Me6oG6hqP3ALyFO0nzQHzhHKEcBt0FeJ82jS5OPgJAApLf46jzi25IAtiLWwZc20PRBiO7MnW-AEPz5c9Xj_UGmmJuADiHApFltPgua4xTJLh8wMee571xI3UpNPIwBaYoQcPaCvYN6qA2lvNgqDWl-etK77YM8EqI9IMii1fQOVH0x6FtdzlQpBpZ_H3FdIBwb8K2i9O8xdO_chUQjaBauRe9VwjZTvmMPO6cru7EQ&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="aip_failSafe" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="intern_rowStartInput" modified="1606097161593" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_rowStopInput" modified="1606097161593" modifiedBy="peter" />&#xd;
    &lt;variable modified="1606097161593" name="sys_targetCube" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
Cube to use in database. In most cases this will be the same as source cube.&lt;/comment>&#xd;
      &lt;default>targetCube&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_elementEnd" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT (optional if aip_numValues is set):
Put last element of prediction period here (e.g. 2019-10 if you want the last predicted element to be 2019-10).
If you do not put sth. here, elementEnd will be calculated from: time_elementStart + aip_numValues
RELATED: time_elementStart; aip_numValues
WAS empty]]&gt;&lt;/comment>&#xd;
      &lt;default>2019-06&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_yearRegExpDeny" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
Prefilled. Add more elements that should be ignored (depending on time dimension)&#xd;
-00&lt;/comment>&#xd;
      &lt;default>00&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_leadingZero" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
If there is no leading zero keep variable EMPTY.&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_yearRegExpAccept" modifiedBy="peter">&#xd;
      &lt;comment>ADAPT:&#xd;
To be filled from user (depending on time dimension).&#xd;
(-0.$|-1.$)&lt;/comment>&#xd;
      &lt;default>(0.|1.)&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_dateFormatSourceDaily" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
time format of custom time dimension until MONTH&#xd;
&#xd;
NOTE: if you want to use daily data, please set variable time_dateDailySeparator&lt;/comment>&#xd;
      &lt;default>yyyy-MM-dd&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_copyByWeekday" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[0 - default behaviour (months are copied by month, days are copied by month)
1 - days are copied by weekday]]&gt;&lt;/comment>&#xd;
      &lt;default>0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_dateDailySeparator" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE (if you want to use daily data):&#xd;
e.g. 2019-02-17 -&amp;gt; date separator daily would be (..) (for 2 day digits)&#xd;
if you do not want to use daily data, leave it $&lt;/comment>&#xd;
      &lt;default>$&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_dateSeparator" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
e.g. 2019-02 -&amp;gt; date separator would be -&#xd;
if no separator exists, keep empty&lt;/comment>&#xd;
      &lt;default>-&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_dateFormatSourceMonthly" modifiedBy="peter">&#xd;
      &lt;comment>UPDATE:&#xd;
time format of custom time dimension until MONTH&#xd;
&#xd;
NOTE: if you want to use daily data, please set variable time_dateDailySeparator&lt;/comment>&#xd;
      &lt;default>yyyy-MM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="ext_numValues" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[SET FROM EXTERNAL
number of values to be forecasted (e.g. 12 if you want the next 12 month to be predicted)]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="ext_period" modified="1606097161593" modifiedBy="peter" />&#xd;
    &lt;variable modified="1606097161593" name="time_inputStartDate" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
First year in database (or first year that should be used for prediction)]]&gt;&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_copyDaysMonthlySort" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>yyyyMM&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_maxSeries" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>10&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="time_elementStart" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Put first element of prediction period here (e.g. 2018-11 if you want to start with prediction at November 2018-11 using all previous data froo 2018-10 backwards)
RELATED: time_elementEnd; aip_numValues]]&gt;&lt;/comment>&#xd;
      &lt;default>2016-07&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_configCubes" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AICubes&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_configSettings" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AISettings&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_aiConfigCube" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>AIConfigCube&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_prefix" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>DP&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_configSettingsValue" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>~&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_inputSum" modifiedBy="peter">&#xd;
      &lt;comment>INTERN&#xd;
Sum of input values for zero checking&lt;/comment>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_extractTargetDeny" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="db_elementTargetVersion" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE/MAKRO TARGET:
Defines the version element for prediction]]&gt;&lt;/comment>&#xd;
      &lt;default>elemTargetVersion&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_extractTargetAccept" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_inputRange" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_AIssistedPass" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[ADAPT:
Enter your password for the Jedox AIssisted(R) Planning Service here or in the global settings section.]]&gt;&lt;/comment>&#xd;
      &lt;script>&lt;![CDATA[String a = API.getProjectName();
String[] str;
str = a.split('~');
proj = str[0].substring(0,str[0].length()-16);
val = API.getConfigSetting("System.aissisted_pass", proj);
return val;]]&gt;&lt;/script>&#xd;
      &lt;default>YOUR-PASSWORD-HERE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="sys_database" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[UPDATE:
Name of database used.]]&gt;&lt;/comment>&#xd;
      &lt;default>CUSTOM-DATABASE&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_dateCopyFormat" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_copyDaysFormat" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_seriesStart" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_seriesStop" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_rowStart" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_rowStop" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="intern_rowCount" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606097161593" name="aip_numValues" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
    &lt;variable name="intern_extractCopyAccept" modified="1606097161593" modifiedBy="peter" />&#xd;
    &lt;variable name="intern_extractCopyDeny" modified="1606097161593" modifiedBy="peter" />&#xd;
    &lt;variable modified="1606122693888" name="service_protocol" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>http&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606122693888" name="service_combinedURL" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>jedox&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606122693888" name="service_api" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>ai-r/api&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606122087110" name="service_function" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>extrapolateJedox&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606310106813" name="service_version" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
      &lt;default>v1.0.0&lt;/default>&#xd;
    &lt;/variable>&#xd;
    &lt;variable modified="1606312923379" name="service_pod" modifiedBy="peter">&#xd;
      &lt;comment />&#xd;
    &lt;/variable>&#xd;
  &lt;/variables>&#xd;
  &lt;connections>&#xd;
    &lt;connection modified="1606097161593" name="AIP_getToken" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>Authenticate on AAD Server with AIssisted Planning user &amp;amp; password.&#xd;
Enter credentials in variables or AIssisted Planning Model settings.&lt;/comment>&#xd;
      &lt;resource>https://login.microsoftonline.com/aissistedplanning.onmicrosoft.com/oauth2/token&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Content-Type">application/x-www-form-urlencoded&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;parameters>&#xd;
        &lt;parameter name="grant_type">password&lt;/parameter>&#xd;
        &lt;parameter name="client_id">89b28630-088f-46a9-85eb-14a919c2f94a&lt;/parameter>&#xd;
        &lt;parameter name="username">${sys_AIssistedUser}&lt;/parameter>&#xd;
        &lt;parameter name="password">${sys_AIssistedPass}&lt;/parameter>&#xd;
        &lt;parameter name="resource">7bb350cb-5757-4c85-b098-0f9fd5c7e4e4&lt;/parameter>&#xd;
      &lt;/parameters>&#xd;
      &lt;ssl>verify&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1606097161593" name="CON_jedoxGlobal" type="JedoxOlap" modifiedBy="peter">&#xd;
      &lt;global nameref="localhost" />&#xd;
      &lt;database>${sys_database}&lt;/database>&#xd;
      &lt;ssl>trust&lt;/ssl>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1606310182339" name="AIP_functionCall_extrapolation" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[REST Call to Jedox AIssistedPlanning Web Service       
FUNCTION: extrapolateJedox/vX.X.X
ADAPT: You have to enter all web service inputs here]]&gt;&lt;/comment>&#xd;
      &lt;resource>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;timeout>0&lt;/timeout>&#xd;
      &lt;ignoreCookiesPolicy>false&lt;/ignoreCookiesPolicy>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Authorization">Bearer ${intern_bearer}&lt;/header>&#xd;
        &lt;header name="Content-Type">application/json&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;ssl>verify&lt;/ssl>&#xd;
      &lt;requestBody>&lt;![CDATA[{
  "InputValues":"${aip_inputValues}",
  "NumInputs":${aip_numSeries},
  "AlgorithmType":"${aip_extrapolationType}",
  "OutputType":${aip_outputType},
  "AIssistedUser":"${sys_AIssistedUser}",
  "AIssistedKey":"${sys_AIssistedAPIKEY}"
}]]&gt;&lt;/requestBody>&#xd;
    &lt;/connection>&#xd;
    &lt;connection modified="1606310193029" name="AIP_functionCall_extrapolation_pod" type="Rest" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[REST Call to Jedox AIssistedPlanning Web Service       
FUNCTION: extrapolateJedox/vX.X.X
ADAPT: You have to enter all web service inputs here]]&gt;&lt;/comment>&#xd;
      &lt;resource>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/resource>&#xd;
      &lt;httpMethod>POST&lt;/httpMethod>&#xd;
      &lt;timeout>0&lt;/timeout>&#xd;
      &lt;ignoreCookiesPolicy>false&lt;/ignoreCookiesPolicy>&#xd;
      &lt;headers>&#xd;
        &lt;header name="Content-Type">application/json&lt;/header>&#xd;
      &lt;/headers>&#xd;
      &lt;ssl>off&lt;/ssl>&#xd;
      &lt;requestBody>&lt;![CDATA[{
  "InputValues":"${aip_inputValues}",
  "NumInputs":${aip_numSeries},
  "AlgorithmType":"${aip_extrapolationType}",
  "OutputType":${aip_outputType}
}]]&gt;&lt;/requestBody>&#xd;
    &lt;/connection>&#xd;
  &lt;/connections>&#xd;
  &lt;extracts>&#xd;
    &lt;extract modified="1606097161593" name="INPUT_reportVariables" type="Cube" modifiedBy="peter">&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query drillthrough="false" onlyBasisAsDefault="true" useRules="false" zeroSuppressionType="includeEmpty">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${sys_configCubes}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_sourceCube}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${sys_configSettings}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${sys_configSettingsValue}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${sys_configParameters}">&#xd;
            &lt;condition mode="onlyBases" operator="like" type="accept">&lt;![CDATA[^${sys_prefix}]]&gt;&lt;/condition>&#xd;
            &lt;condition mode="onlyBases" operator="like" type="deny">&lt;![CDATA[${sys_prefix}PredictionInterpolationFailSafe|${sys_prefix}PredictionInterpolationType]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_aiConfigCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606121624275" name="CT_inputCheck" type="ConstantTable" modifiedBy="peter">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>inputValues&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${intern_inputSum}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606097161593" name="INPUT_sourceValues" type="Cube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input data
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query celltype="both" drillthrough="false" onlyBasisAsDefault="false" useRules="true" zeroSuppressionType="includeEmptyDefaultMapping">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractSourceAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractSourceDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606122929636" name="AIP_extractResult_extrapolation" type="Json" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Results from Jedox AIssisted Planning Web Service]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="AIP_functionCall_extrapolation${service_pod}" />&#xd;
      &lt;alias_map>&#xd;
        &lt;alias name="web_success">1&lt;/alias>&#xd;
        &lt;alias name="web_errorMessage">2&lt;/alias>&#xd;
        &lt;alias name="values">3&lt;/alias>&#xd;
        &lt;alias name="position">4&lt;/alias>&#xd;
        &lt;alias name="success">5&lt;/alias>&#xd;
        &lt;alias name="errorMessage">6&lt;/alias>&#xd;
      &lt;/alias_map>&#xd;
      &lt;query>&#xd;
        &lt;level>$&lt;/level>&#xd;
        &lt;fields>&#xd;
          &lt;field>success&lt;/field>&#xd;
          &lt;field>errorMessage&lt;/field>&#xd;
          &lt;field>outputParameters.values[0][0]&lt;/field>&#xd;
          &lt;field>outputParameters.values[0][1]&lt;/field>&#xd;
          &lt;field>outputParameters.values[1]&lt;/field>&#xd;
          &lt;field>outputParameters.values[2]&lt;/field>&#xd;
        &lt;/fields>&#xd;
      &lt;/query>&#xd;
      &lt;cache>true&lt;/cache>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606097161593" modifiedBy="peter" name="AIP_extractToken" type="Json">&#xd;
      &lt;comment>token for authetication&lt;/comment>&#xd;
      &lt;connection nameref="AIP_getToken" />&#xd;
      &lt;query>&#xd;
        &lt;level>$&lt;/level>&#xd;
        &lt;fields>&#xd;
          &lt;field>token_type&lt;/field>&#xd;
          &lt;field>access_token&lt;/field>&#xd;
        &lt;/fields>&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606097161593" name="OUTPUT_rowCount" type="CubeSlice" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementTargetVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${intern_extractSourceAccept}]]&gt;&lt;/condition>&#xd;
            &lt;condition operator="like" type="deny">&lt;![CDATA[${intern_extractSourceDeny}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606097161593" name="INPUT_accuracyTarget" type="CubeSlice" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Target data
ADAPT for own dimensions 
(Should be #aip_numValues * #aip_numLoops paths)
(In normal case: should be same as input, adapt only target version and time (#numValues in the future))]]&gt;&lt;/comment>&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;query mode="exclude" randomPaths="false">&#xd;
        &lt;dimensions>&#xd;
          &lt;dimension name="${db_dimensionVersion}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${db_elementTargetVersion}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionMeasure}">&#xd;
            &lt;condition operator="like" type="accept">&lt;![CDATA[${db_elementMeasure}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimensionTime}">&#xd;
            &lt;condition operator="equal" type="accept">&lt;![CDATA[${time_elementStart}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension1}">&#xd;
            &lt;condition mode="${db_elementMode1}" operator="like" type="accept">&lt;![CDATA[${db_elementDim1}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension2}">&#xd;
            &lt;condition mode="${db_elementMode2}" operator="like" type="accept">&lt;![CDATA[${db_elementDim2}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension3}">&#xd;
            &lt;condition mode="${db_elementMode3}" operator="like" type="accept">&lt;![CDATA[${db_elementDim3}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension4}">&#xd;
            &lt;condition mode="${db_elementMode4}" operator="like" type="accept">&lt;![CDATA[${db_elementDim4}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension5}">&#xd;
            &lt;condition mode="${db_elementMode5}" operator="like" type="accept">&lt;![CDATA[${db_elementDim5}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension6}">&#xd;
            &lt;condition mode="${db_elementMode6}" operator="like" type="accept">&lt;![CDATA[${db_elementDim6}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension7}">&#xd;
            &lt;condition mode="${db_elementMode7}" operator="like" type="accept">&lt;![CDATA[${db_elementDim7}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension8}">&#xd;
            &lt;condition mode="${db_elementMode8}" operator="like" type="accept">&lt;![CDATA[${db_elementDim8}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension9}">&#xd;
            &lt;condition mode="${db_elementMode9}" operator="like" type="accept">&lt;![CDATA[${db_elementDim9}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension10}">&#xd;
            &lt;condition mode="${db_elementMode10}" operator="like" type="accept">&lt;![CDATA[${db_elementDim10}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension11}">&#xd;
            &lt;condition mode="${db_elementMode11}" operator="like" type="accept">&lt;![CDATA[${db_elementDim11}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension12}">&#xd;
            &lt;condition mode="${db_elementMode12}" operator="like" type="accept">&lt;![CDATA[${db_elementDim12}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension13}">&#xd;
            &lt;condition mode="${db_elementMode13}" operator="like" type="accept">&lt;![CDATA[${db_elementDim13}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension14}">&#xd;
            &lt;condition mode="${db_elementMode14}" operator="like" type="accept">&lt;![CDATA[${db_elementDim14}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension15}">&#xd;
            &lt;condition mode="${db_elementMode15}" operator="like" type="accept">&lt;![CDATA[${db_elementDim15}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension16}">&#xd;
            &lt;condition mode="${db_elementMode16}" operator="like" type="accept">&lt;![CDATA[${db_elementDim16}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension17}">&#xd;
            &lt;condition mode="${db_elementMode17}" operator="like" type="accept">&lt;![CDATA[${db_elementDim17}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension18}">&#xd;
            &lt;condition mode="${db_elementMode18}" operator="like" type="accept">&lt;![CDATA[${db_elementDim18}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension19}">&#xd;
            &lt;condition mode="${db_elementMode19}" operator="like" type="accept">&lt;![CDATA[${db_elementDim19}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension20}">&#xd;
            &lt;condition mode="${db_elementMode20}" operator="like" type="accept">&lt;![CDATA[${db_elementDim20}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension21}">&#xd;
            &lt;condition mode="${db_elementMode21}" operator="like" type="accept">&lt;![CDATA[${db_elementDim21}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension22}">&#xd;
            &lt;condition mode="${db_elementMode22}" operator="like" type="accept">&lt;![CDATA[${db_elementDim22}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension23}">&#xd;
            &lt;condition mode="${db_elementMode23}" operator="like" type="accept">&lt;![CDATA[${db_elementDim23}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension24}">&#xd;
            &lt;condition mode="${db_elementMode24}" operator="like" type="accept">&lt;![CDATA[${db_elementDim24}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension25}">&#xd;
            &lt;condition mode="${db_elementMode25}" operator="like" type="accept">&lt;![CDATA[${db_elementDim25}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension26}">&#xd;
            &lt;condition mode="${db_elementMode26}" operator="like" type="accept">&lt;![CDATA[${db_elementDim26}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
          &lt;dimension name="${db_dimension27}">&#xd;
            &lt;condition mode="${db_elementMode27}" operator="like" type="accept">&lt;![CDATA[${db_elementDim27}]]&gt;&lt;/condition>&#xd;
          &lt;/dimension>&#xd;
        &lt;/dimensions>&#xd;
        &lt;cube name="${sys_sourceCube}" />&#xd;
      &lt;/query>&#xd;
    &lt;/extract>&#xd;
    &lt;extract modified="1606123541570" name="VAR_service" type="ConstantTable" modifiedBy="peter">&#xd;
      &lt;data>&#xd;
        &lt;header>&#xd;
          &lt;value>Column1&lt;/value>&#xd;
          &lt;value>Column2&lt;/value>&#xd;
        &lt;/header>&#xd;
        &lt;row>&#xd;
          &lt;value>${service_protocol}://${service_combinedURL}/${service_api}/${service_function}/${service_version}&lt;/value>&#xd;
          &lt;value>${service_pod}&lt;/value>&#xd;
        &lt;/row>&#xd;
      &lt;/data>&#xd;
    &lt;/extract>&#xd;
  &lt;/extracts>&#xd;
  &lt;transforms>&#xd;
    &lt;transform modified="1606097161593" name="FT_macroVariables" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="${sys_configParameters}" />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_dateTransformInput" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>Adds date column which can be sorted for input&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_sourceValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_processCopy_extrapolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_mergeOutput_extrapolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^§§§row§§§$|^date_sort$|#Value" include=".">&#xd;
          &lt;coordinate name="${db_dimensionVersion}">&#xd;
            &lt;input constant="Extrapolation" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_trimOutput_extrapolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>Transform web service results to correct format&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractResult_extrapolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="trim" type="SubString">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="position" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;begin>2&lt;/begin>&#xd;
            &lt;fromSide>left&lt;/fromSide>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="trim2" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="trim" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>]&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="trim_1" type="SubString">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;begin>2&lt;/begin>&#xd;
            &lt;fromSide>left&lt;/fromSide>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="trim_2" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="trim_1" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>1&lt;/occurence>&#xd;
            &lt;separator>]&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="success|errorMessage">&#xd;
          &lt;coordinate name="values">&#xd;
            &lt;input nameref="trim_2" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="position">&#xd;
            &lt;input nameref="trim2" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="TV_sortInput_extrapolationKeys" type="TableView" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions]]&gt;&lt;/comment>&#xd;
      &lt;start>${intern_rowStartInput}&lt;/start>&#xd;
      &lt;end>${intern_rowStopInput}&lt;/end>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_dateTransformInput_extrapolationKeys" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimensionMeasure}" order="asc" />&#xd;
        &lt;input nameref="${db_dimensionVersion}" />&#xd;
        &lt;input nameref="${db_dimension1}" />&#xd;
        &lt;input nameref="${db_dimension2}" />&#xd;
        &lt;input nameref="${db_dimension3}" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_switchControlResult_extrapolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractResult_extrapolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="success" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="success" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>2&lt;/occurence>&#xd;
            &lt;separator>"&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="switchInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="success" type="String" />&#xd;
            &lt;input nameref="web_success" type="boolean" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(web_success == false || success != "True")

	return 0;

else

  return 1;]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="errorMessage" type="Split">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="errorMessage" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;occurence>2&lt;/occurence>&#xd;
            &lt;separator>"&lt;/separator>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="combinedErrorMessage" type="Concatenation">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="web_errorMessage" />&#xd;
            &lt;input nameref="errorMessage" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;delimiter>§&lt;/delimiter>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="success" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="combinedErrorMessage" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="switchInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FN_convertChunks" type="FieldNormalization" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_computeChunks" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>chunkStart&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="TA_countOutput" type="TableAggregation" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="OUTPUT_rowCount" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="count" name="outputRows" type="text">&#xd;
            &lt;input nameref="${db_dimensionMeasure}" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="TV_sortInput" type="TableView" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Inputs have to be sorted (time, measures...)
ADAPT for own dimensions
${intern_rowStop}
${intern_rowStart}]]&gt;&lt;/comment>&#xd;
      &lt;start>${intern_rowStartInput}&lt;/start>&#xd;
      &lt;end>${intern_rowStopInput}&lt;/end>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_dateTransformInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;sorter>&#xd;
        &lt;input nameref="${db_dimensionVersion}" order="asc" />&#xd;
        &lt;input nameref="${db_dimensionMeasure}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension1}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension2}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension3}" order="asc" />&#xd;
        &lt;input nameref="${db_dimension4}" />&#xd;
        &lt;input nameref="${db_dimension5}" />&#xd;
        &lt;input nameref="${db_dimension6}" />&#xd;
        &lt;input nameref="${db_dimension7}" />&#xd;
        &lt;input nameref="${db_dimension8}" />&#xd;
        &lt;input nameref="${db_dimension9}" />&#xd;
        &lt;input nameref="${db_dimension10}" />&#xd;
        &lt;input nameref="${db_dimension11}" />&#xd;
        &lt;input nameref="${db_dimension12}" />&#xd;
        &lt;input nameref="${db_dimension13}" />&#xd;
        &lt;input nameref="${db_dimension14}" />&#xd;
        &lt;input nameref="${db_dimension15}" />&#xd;
        &lt;input nameref="${db_dimension16}" />&#xd;
        &lt;input nameref="${db_dimension17}" />&#xd;
        &lt;input nameref="${db_dimension18}" />&#xd;
        &lt;input nameref="${db_dimension19}" />&#xd;
        &lt;input nameref="${db_dimension20}" />&#xd;
        &lt;input nameref="${db_dimension21}" />&#xd;
        &lt;input nameref="${db_dimension22}" />&#xd;
        &lt;input nameref="${db_dimension23}" />&#xd;
        &lt;input nameref="${db_dimension24}" />&#xd;
        &lt;input nameref="${db_dimension25}" />&#xd;
        &lt;input nameref="${db_dimension26}" />&#xd;
        &lt;input nameref="${db_dimension27}" />&#xd;
        &lt;input nameref="date_sort" order="asc" />&#xd;
      &lt;/sorter>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_extrapolationInputRows" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortInput_extrapolationKeys" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_indexOutputValues_extrapolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Add row numbers to values transform for joining.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FN_outputValues_extrapolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="values" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="§§§row§§§" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="TA_input" type="TableAggregation" modifiedBy="peter">&#xd;
      &lt;comment>Convert a column with a value in each row into a single string with comma separated values (this format is required for the web service).&#xd;
ADAPT: If using the extended dimension version change the Data Source to "PM_SP_SORT_cube_input_extended"&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TV_sortInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="true" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="group_concat" name="aip_inputValues">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
          &lt;measure aggregate="sum" name="sum">&#xd;
            &lt;input nameref="#Value" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_computeChunks" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TA_countInput" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="chunkStart" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="c" nameref="Count" type="int" />&#xd;
            &lt;input alias="m" constant="${intern_maxSeries}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>s = '';&#xd;
for (int i=0;i &amp;lt; c; i+=m){&#xd;
  s = s + Integer.toString(i) + ',';&#xd;
}&#xd;
s =s.substring(0, s.length()-1)&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606123379151" name="FT_macroVariablesDimLoop" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TD_macroVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="service_pod" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="_pod" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
            &lt;default>&#xd;
              &lt;result constant="" />&#xd;
            &lt;/default>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type&gt;&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function&gt;&#xd;
        &lt;function name="dim14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="dim27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimName27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimName1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d1]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function&gt;&#xd;
        &lt;function name="elem3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="elem27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimValueRegexed27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimValueRegexed1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode1" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return d1]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode2" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode2" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode3" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode3" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode4" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode4" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode5" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode5" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode6" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode6" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode7" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode7" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode8" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode8" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode9" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode9" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode10" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode10" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode11" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode11" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode12" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode12" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode13" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode13" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode14" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode14" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode15" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode15" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode16" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode16" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode17" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode17" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode18" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode18" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode19" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode19" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode20" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode20" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode21" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode21" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode22" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode22" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode23" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode23" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode24" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode24" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode25" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode25" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode26" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode26" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="mode27" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="d" nameref="${sys_prefix}OtherDimMode27" type="String" />&#xd;
            &lt;input alias="d1" nameref="${sys_prefix}OtherDimMode1" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (d){

  return d

}else{

  return d1

}]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="${sys_prefix}OtherDim" include="." />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="TD_macroVariables" type="TableDenormalization" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_reportVariables" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures aggregate="first" denormalize="${sys_configParameters}" source="FT_macroVariables" valuename="#Value" />&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FN_outputValues_extrapolation" type="FieldNormalization" modifiedBy="peter">&#xd;
      &lt;comment>Transform Comma separated values from Web Service result into a column where each value is in a separate row.&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_trimOutput_extrapolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>values&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="TA_countInput" type="TableAggregation" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_accuracyTarget" />&#xd;
      &lt;/sources>&#xd;
      &lt;target>&#xd;
        &lt;coordinates keepSourceOrder="false" />&#xd;
        &lt;measures>&#xd;
          &lt;measure aggregate="count" name="Count" type="text">&#xd;
            &lt;input nameref="${db_dimensionMeasure}" />&#xd;
          &lt;/measure>&#xd;
        &lt;/measures>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="TJ_chunkSize" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FN_convertChunks" />&#xd;
        &lt;source nameref="TA_countOutput" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" unique="false">&#xd;
          &lt;left nameref="FN_convertChunks" />&#xd;
          &lt;right nameref="TA_countOutput" />&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_addChunkSize" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_chunkSize" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="intern_seriesStart" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="chunkStart" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return chunkStart + 1]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="aip_numSeries" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="c" nameref="Count" type="int" />&#xd;
            &lt;input alias="i" nameref="intern_seriesStart" type="int" />&#xd;
            &lt;input alias="m" constant="${intern_maxSeries}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if (i + m > c &amp;&amp; c % m != 0){

  return c % m

}else{

  return m

}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_outputRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="outputRows" nameref="outputRows" type="int" />&#xd;
            &lt;input alias="numInputs" nameref="Count" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return outputRows/numInputs;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_seriesStop" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="chunkStart" type="int" />&#xd;
            &lt;input alias="a" nameref="aip_numSeries" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return i + a]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStart" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="chunkStart" type="int" />&#xd;
            &lt;input alias="p" nameref="intern_outputRange" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return (p*3) * i + 1]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStop" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="intern_rowStart" type="int" />&#xd;
            &lt;input alias="n" nameref="intern_outputRange" type="int" />&#xd;
            &lt;input alias="s" nameref="aip_numSeries" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
            &lt;script>&lt;![CDATA[return i-1 + s*n * 3;
//i * p * n * d;]]&gt;&lt;/script>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStopInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="intern_seriesStop" type="int" />&#xd;
            &lt;input alias="d" constant="${intern_inputRange}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return i * d;
//i * p * n * d;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_rowStartInput" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="i" nameref="chunkStart" type="int" />&#xd;
            &lt;input alias="p" constant="${intern_inputRange}" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return i * p +1]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates exclude="^chunkStart$" include="_">&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="aip_numSeries" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_seriesStart" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_seriesStop" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStart" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStop" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="intern_rowCount">&#xd;
            &lt;input nameref="Count" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStartInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_rowStopInput" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_numValues">&#xd;
            &lt;input nameref="intern_outputRange" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="TJ_mergeOutput_extrapolation" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Table join for writing results in cube in correct format.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_extrapolationInputRows" />&#xd;
        &lt;source nameref="FT_outputValues_extrapolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" type="inner" unique="false">&#xd;
          &lt;left nameref="FT_extrapolationInputRows">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/left>&#xd;
          &lt;right nameref="FT_outputValues_extrapolation">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/right>&#xd;
          &lt;conditions>&#xd;
            &lt;condition type="eq" />&#xd;
          &lt;/conditions>&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_dateTransformInput_extrapolationKeys" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>Adds date column which can be sorted for input&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="INPUT_sourceValues" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="date_sort" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="${db_dimensionTime}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates include="." />&#xd;
      &lt;/target>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_normalizePositions_interpoaltion" type="FieldNormalization" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_trimOutput_extrapolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;splitColumnName>position&lt;/splitColumnName>&#xd;
      &lt;delimiter>,&lt;/delimiter>&#xd;
      &lt;ignoreEmpty>false&lt;/ignoreEmpty>&#xd;
      &lt;ignoreDuplicates>false&lt;/ignoreDuplicates>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_indexOutputPositions_extrapolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Add row numbers to values transform for joining.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_normalizePositions_interpoaltion" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="§§§row§§§" type="RowNumber">&#xd;
          &lt;parameters />&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="position" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="§§§row§§§" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="TJ_mergeOutputPositions_extrapolation" type="TableJoin" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Table join for writing results in cube in correct format.
ADAPT dimensions]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="FT_indexOutputPositions_extrapolation" />&#xd;
        &lt;source nameref="FT_indexOutputValues_extrapolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;joins persist="false">&#xd;
        &lt;join allColumns="false" type="inner" unique="false">&#xd;
          &lt;left nameref="FT_indexOutputPositions_extrapolation">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/left>&#xd;
          &lt;right nameref="FT_indexOutputValues_extrapolation">&#xd;
            &lt;key nameref="§§§row§§§" />&#xd;
          &lt;/right>&#xd;
          &lt;conditions>&#xd;
            &lt;condition type="eq" />&#xd;
          &lt;/conditions>&#xd;
        &lt;/join>&#xd;
      &lt;/joins>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606097161593" name="FT_outputValues_extrapolation" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="TJ_mergeOutputPositions_extrapolation" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="val" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="position" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="0.0" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1.0" />&#xd;
                &lt;result nameref="values" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate name="values">&#xd;
            &lt;input nameref="val" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="§§§row§§§" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606128058355" name="FT_variablesStaticTokenInput_pod" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input for Loop job containing variables.
Calculates all the time related variables automatically.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="VAR_service" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="format_date" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstDbYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numPeriods" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="last" nameref="intern_lastDBYear" type="int" />&#xd;
            &lt;input alias="first" nameref="intern_firstDbYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>false&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[dif = last-first;
if (dif > 0)
	return dif;
else
	return 1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_periodEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="elemEnd" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="usedFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${intern_dateFormat}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[e = Date.parse(usedFormat, elemEnd);

return e.format(internFormat);]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_srcYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_numPeriods" type="int" />&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastDBMonth" type="String" />&#xd;
            &lt;input alias="lastDBYear" nameref="intern_lastDBYear" type="String" />&#xd;
            &lt;input alias="firstDbYear" nameref="intern_firstDbYear" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[srcYearRng = "(" + firstDbYear;
int firstDBYear = firstDbYear.toInteger();
for(i=1;i&lt;intern_numPeriods;i++){

 srcYearRng =  srcYearRng+"|"+(firstDBYear+i);

}

srcYearRng = srcYearRng +"|"+ lastDBYear + ")";



return srcYearRng;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)

  return "§";

nval = 12+12-intern_firstMonth+1; // full year plus rest of year

rolling = "(";

for (i = 1; i &lt;intern_firstMonth; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(i&lt;10)

  rolling = rolling+"|"+"${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-intern_firstMonth+1+1; // full year plus rest of year

rolling = "(";

//first month

first = intern_firstMonth+1;

if(first > 12)

  return "§";

if(first &lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(first &lt;10)

  rolling = rolling+"${time_leadingZero}"+first;

  else

  rolling = rolling+""+first;

for (i = intern_firstMonth+1; i &lt;=12; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}1";

  else if(i&lt;10)

  rolling = rolling+"|${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_srcYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days
arr = format.split("\\" + sep);
if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  return "^" + month + sep + year + day
}
  else {
  return "^" + year + sep + month + day
  }
}
else{
df = dailyFormat.split("\\" + sep);
def resultArr = new String[3];
  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    resultArr[i] = month
    }
    else if (df[i].toUpperCase().contains("D")) {
    resultArr[i] = "[0-3][0-9]"  
    }
    else {
    resultArr[i] = year
    } 
  }
return resultArr.join(sep);  
}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_srcYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_lastDBYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockSrcEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_firstDbYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockSrcBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);

if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  //Don't need to care for days for s1.
  s1 = month1 + sep + year1;
  s2 = month2 + sep + year2 + day;
  s3 = month3 + sep + year3 + day;
  }
  else {
  s1 = year1 + sep + month1; 
  s2 = year2 + sep + month2 + day;
  s3 = year3 + sep + month3 + day;
  }
}
else{
df = dailyFormat.split("\\" + sep);
s1 = new String[3];
s2 = new String[3];
s3 = new String[3];

  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    s1[i] = month1;
    s2[i] = month2;
    s3[i] = month3;
    }
    else if (df[i].toUpperCase().contains("D")) {
    s2[i] = day;
    s3[i] = day;    
    }
    else if (df[i].toUpperCase().contains("Y")){
    s1[i] = year1;
    s2[i] = year2;
    s3[i] = year3;
    } 
  }
  s1 = s1 - null;
  s1 = s1.join(sep);
  s2 = s2.join(sep);
  s3 = s3.join(sep);
  
}
return s1 + "|" + s2 +"|"+ s3 ;

//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetAccept" nameref="intern_extractSourceAccept" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetAccept;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetDeny" nameref="intern_extractSourceDeny" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetDeny;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="yyyyMM" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="yyyyMM" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="yyyyMMdd" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_inputRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="date1" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="date2" constant="${time_elementStart}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="daily" constant="${time_dateDailySeparator}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[import groovy.time.TimeCategory;

Date d1 = Date.parse(internFormat, date1);
Date d2 = Date.parse(internFormat, date2);

if(daily == "\$") {
	years = ((int)d1.year-(int)d2.year)*12;
	months = (int)d1.month-(int)d2.month;
	return years + months + 1;
}
else
	return d1-d2+1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="period" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="a" constant="${ext_period}" type="float" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return a;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateCopyFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_copyDaysMonthlySort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${intern_dateFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_copyDaysFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${time_currentFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_maxSeries" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_maxSeries}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="like" type="accept" value="(..)" />&#xd;
                &lt;result constant="2" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_protocol" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="https" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="http" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_combinedURL" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${sys_AIssistedURL}:${sys_AIssistedPort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="jedox" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_api" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="api" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="ai-r/api" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_inputRange" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_period">&#xd;
            &lt;input nameref="period" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateCopyFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_copyDaysFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_maxSeries" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_protocol" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_combinedURL" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_api" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
    &lt;transform modified="1606127083371" name="FT_variablesStaticTokenInput" type="FieldTransform" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Input for Loop job containing variables.
Calculates all the time related variables automatically.]]&gt;&lt;/comment>&#xd;
      &lt;sources>&#xd;
        &lt;source nameref="AIP_extractToken" />&#xd;
      &lt;/sources>&#xd;
      &lt;functions>&#xd;
        &lt;function name="format_date" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>${intern_dateFormat}&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstDbYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_numPeriods" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="last" nameref="intern_lastDBYear" type="int" />&#xd;
            &lt;input alias="first" nameref="intern_firstDbYear" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>false&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[dif = last-first;
if (dif > 0)
	return dif;
else
	return 1;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_firstMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementStart}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_currentFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastDBMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_elementEnd}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${time_dateFormatSourceMonthly}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_periodEnd" type="Groovy"&gt;&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="elemEnd" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="usedFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${intern_dateFormat}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[e = Date.parse(usedFormat, elemEnd);

return e.format(internFormat);]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastYear" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>yyyy&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_srcYearRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_numPeriods" type="int" />&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastDBMonth" type="String" />&#xd;
            &lt;input alias="lastDBYear" nameref="intern_lastDBYear" type="String" />&#xd;
            &lt;input alias="firstDbYear" nameref="intern_firstDbYear" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[srcYearRng = "(" + firstDbYear;
int firstDBYear = firstDbYear.toInteger();
for(i=1;i&lt;intern_numPeriods;i++){

 srcYearRng =  srcYearRng+"|"+(firstDBYear+i);

}

srcYearRng = srcYearRng +"|"+ lastDBYear + ")";



return srcYearRng;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_lastMonth" type="DateFormat">&#xd;
          &lt;inputs>&#xd;
            &lt;input nameref="intern_periodEnd" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;targetformat>MM&lt;/targetformat>&#xd;
            &lt;sourceformat>${intern_dateFormat}&lt;/sourceformat>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcBeginning" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_firstMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[if(intern_firstMonth==1)

  return "§";

nval = 12+12-intern_firstMonth+1; // full year plus rest of year

rolling = "(";

for (i = 1; i &lt;intern_firstMonth; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(i&lt;10)

  rolling = rolling+"|"+"${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="rng_blockSrcEnd" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="intern_firstMonth" nameref="intern_lastMonth" type="int" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>String&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[nval = 12+12-intern_firstMonth+1+1; // full year plus rest of year

rolling = "(";

//first month

first = intern_firstMonth+1;

if(first > 12)

  return "§";

if(first &lt;2)

  rolling += "${time_leadingZero}"+"1";

  else if(first &lt;10)

  rolling = rolling+"${time_leadingZero}"+first;

  else

  rolling = rolling+""+first;

for (i = intern_firstMonth+1; i &lt;=12; i++)

{

  if(i&lt;2)

  rolling += "${time_leadingZero}1";

  else if(i&lt;10)

  rolling = rolling+"|${time_leadingZero}"+i;

  else

  rolling = rolling+"|"+i;

}

rolling +=")";

return rolling;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year" nameref="intern_srcYearRange" type="String" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" type="String" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" type="String" />&#xd;
            &lt;input alias="month" constant="${time_yearRegExpAccept}" type="String" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[// which position is year, which month, which days
arr = format.split("\\" + sep);
if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  return "^" + month + sep + year + day
}
  else {
  return "^" + year + sep + month + day
  }
}
else{
df = dailyFormat.split("\\" + sep);
def resultArr = new String[3];
  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    resultArr[i] = month
    }
    else if (df[i].toUpperCase().contains("D")) {
    resultArr[i] = "[0-3][0-9]"  
    }
    else {
    resultArr[i] = year
    } 
  }
return resultArr.join(sep);  
}]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractSourceDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="year1" nameref="intern_srcYearRange" />&#xd;
            &lt;input alias="sep" constant="${time_dateSeparator}" />&#xd;
            &lt;input alias="month1" constant="${time_yearRegExpDeny}" />&#xd;
            &lt;input alias="year2" nameref="intern_lastDBYear" />&#xd;
            &lt;input alias="month2" nameref="rng_blockSrcEnd" />&#xd;
            &lt;input alias="year3" nameref="intern_firstDbYear" />&#xd;
            &lt;input alias="month3" nameref="rng_blockSrcBeginning" />&#xd;
            &lt;input alias="day" constant="${time_dateDailySeparator}" />&#xd;
            &lt;input alias="dailyFormat" constant="${time_dateFormatSourceDaily}" />&#xd;
            &lt;input alias="format" constant="${time_dateFormatSourceMonthly}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[arr = format.split("\\" + sep);

if (day == "\$") {
  if (arr[0].toUpperCase().contains("M")){
  //Don't need to care for days for s1.
  s1 = month1 + sep + year1;
  s2 = month2 + sep + year2 + day;
  s3 = month3 + sep + year3 + day;
  }
  else {
  s1 = year1 + sep + month1; 
  s2 = year2 + sep + month2 + day;
  s3 = year3 + sep + month3 + day;
  }
}
else{
df = dailyFormat.split("\\" + sep);
s1 = new String[3];
s2 = new String[3];
s3 = new String[3];

  for (i = 0; i &lt; 3; i++){
    if (df[i].toUpperCase().contains("M")) {
    s1[i] = month1;
    s2[i] = month2;
    s3[i] = month3;
    }
    else if (df[i].toUpperCase().contains("D")) {
    s2[i] = day;
    s3[i] = day;    
    }
    else if (df[i].toUpperCase().contains("Y")){
    s1[i] = year1;
    s2[i] = year2;
    s3[i] = year3;
    } 
  }
  s1 = s1 - null;
  s1 = s1.join(sep);
  s2 = s2.join(sep);
  s3 = s3.join(sep);
  
}
return s1 + "|" + s2 +"|"+ s3 ;

//////////////////////////////////////]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyAccept" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetAccept" nameref="intern_extractSourceAccept" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetAccept;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_extractCopyDeny" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="targetDeny" nameref="intern_extractSourceDeny" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;script>&lt;![CDATA[return targetDeny;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="yyyyMM" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="$" />&#xd;
                &lt;result constant="yyyyMM" />&#xd;
              &lt;/switch>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="(..)" />&#xd;
                &lt;result constant="yyyyMMdd" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_inputRange" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="date1" constant="${time_elementEnd}" type="String" />&#xd;
            &lt;input alias="date2" constant="${time_elementStart}" type="String" />&#xd;
            &lt;input alias="internFormat" constant="${time_dateFormatSourceMonthly}" type="String" />&#xd;
            &lt;input alias="daily" constant="${time_dateDailySeparator}" type="String" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[import groovy.time.TimeCategory;

Date d1 = Date.parse(internFormat, date1);
Date d2 = Date.parse(internFormat, date2);

if(daily == "\$") {
	years = ((int)d1.year-(int)d2.year)*12;
	months = (int)d1.month-(int)d2.month;
	return years + months + 1;
}
else
	return d1-d2+1;]]&gt;&lt;/script&gt;&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="period" type="Groovy">&#xd;
          &lt;inputs>&#xd;
            &lt;input alias="a" constant="${ext_period}" type="float" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;buffered>true&lt;/buffered>&#xd;
            &lt;type>int&lt;/type>&#xd;
            &lt;script>&lt;![CDATA[return a;]]&gt;&lt;/script>&#xd;
            &lt;nullDefaults>false&lt;/nullDefaults>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_dateCopyFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_copyDaysMonthlySort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${intern_dateFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_copyDaysFormat" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${intern_copyByWeekday}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${time_dateFormatSourceMonthly}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="1" />&#xd;
                &lt;result constant="${time_currentFormat}" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="intern_maxSeries" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${time_dateDailySeparator}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${intern_maxSeries}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="like" type="accept" value="(..)" />&#xd;
                &lt;result constant="2" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_combinedURL" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="${sys_AIssistedURL}:${sys_AIssistedPort}" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="jedox" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_protocol" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="https" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="http" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
        &lt;function name="service_api" type="Switch">&#xd;
          &lt;inputs>&#xd;
            &lt;input constant="${sys_AIssistedURL}" />&#xd;
          &lt;/inputs>&#xd;
          &lt;parameters>&#xd;
            &lt;default>&#xd;
              &lt;result constant="api" />&#xd;
            &lt;/default>&#xd;
            &lt;switchs>&#xd;
              &lt;switch>&#xd;
                &lt;condition operator="equal" type="accept" value="jedox" />&#xd;
                &lt;result constant="ai-r/api" />&#xd;
              &lt;/switch>&#xd;
            &lt;/switchs>&#xd;
          &lt;/parameters>&#xd;
        &lt;/function>&#xd;
      &lt;/functions>&#xd;
      &lt;target>&#xd;
        &lt;coordinates>&#xd;
          &lt;coordinate name="intern_bearer">&#xd;
            &lt;input nameref="access_token" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceAccept" />&#xd;
          &lt;/coordinate&gt;&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractSourceDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyAccept" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_extractCopyDeny" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_inputRange" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate name="aip_period">&#xd;
            &lt;input nameref="period" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_dateCopyFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_copyDaysFormat" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="intern_maxSeries" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_combinedURL" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_protocol" />&#xd;
          &lt;/coordinate>&#xd;
          &lt;coordinate>&#xd;
            &lt;input nameref="service_api" />&#xd;
          &lt;/coordinate>&#xd;
        &lt;/coordinates>&#xd;
      &lt;/target>&#xd;
      &lt;cache>false&lt;/cache>&#xd;
    &lt;/transform>&#xd;
  &lt;/transforms>&#xd;
  &lt;loads>&#xd;
    &lt;load modified="1606216470710" name="LOAD_extrapolation" type="Cube" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Load Prediction data
ADAPT for own dimensions - Make sure you have added version(s) for prediction/upper/lower or accuracy]]&gt;&lt;/comment>&#xd;
      &lt;source nameref="FT_processCopy_extrapolation" />&#xd;
      &lt;connection nameref="CON_jedoxGlobal" />&#xd;
      &lt;mode>insert&lt;/mode>&#xd;
      &lt;bulksize>100000&lt;/bulksize>&#xd;
      &lt;cube cubeLayoutChangeMode="none" deactivateSVS="false" name="${sys_targetCube}" splash="default" />&#xd;
    &lt;/load>&#xd;
  &lt;/loads>&#xd;
  &lt;jobs>&#xd;
    &lt;job modified="1606097161593" name="SW_executionLogicInterpolation" type="Switch" modifiedBy="peter">&#xd;
      &lt;switchOn>&#xd;
        &lt;source nameref="FT_switchControlResult_extrapolation" row="1">&#xd;
          &lt;input nameref="switchInput" />&#xd;
        &lt;/source>&#xd;
      &lt;/switchOn>&#xd;
      &lt;switchs>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="1" />&#xd;
          &lt;execution nameref="EXECUTE_extrapolationLoading" type="job" />&#xd;
        &lt;/switch>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="accept" value="0" />&#xd;
          &lt;execution nameref="GRV_logWsError_extrapolation" type="job" />&#xd;
        &lt;/switch&gt;&#xd;
      &lt;/switchs>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606123213853" name="Loop_overAllChunks" type="Loop" modifiedBy="peter">&#xd;
      &lt;loop nameref="FT_addChunkSize" />&#xd;
      &lt;execution nameref="Loop_inputValues" type="job" />&#xd;
      &lt;failStatus>none&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606097161593" name="SW_emptyCheck" type="Switch" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Checks if the prediction returns success state, then triggers copying and loading data.]]&gt;&lt;/comment>&#xd;
      &lt;switchOn>&#xd;
        &lt;source nameref="CT_inputCheck" row="1">&#xd;
          &lt;input nameref="inputValues" />&#xd;
        &lt;/source>&#xd;
      &lt;/switchOn>&#xd;
      &lt;switchs>&#xd;
        &lt;switch>&#xd;
          &lt;condition operator="equal" type="deny" value="0" />&#xd;
          &lt;execution nameref="SW_executionLogicInterpolation" type="job" />&#xd;
        &lt;/switch>&#xd;
      &lt;/switchs>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606123475843" name="PresetStaticInput" type="Loop" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Sets variables for main job]]&gt;&lt;/comment>&#xd;
      &lt;loop nameref="FT_variablesStaticTokenInput${service_pod}" />&#xd;
      &lt;execution nameref="Loop_overAllChunks" type="job" />&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606097161593" name="EXECUTE_extrapolationLoading" type="Standard" modifiedBy="peter">&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="LOAD_extrapolation" type="load" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1607125524003" name="GRV_logWsError_extrapolation" type="Groovy" modifiedBy="peter">&#xd;
      &lt;jobscript>&lt;![CDATA[extract = API.initSource("FT_switchControlResult_extrapolation");
extract.nextRow();

err = extract.getColumnString("combinedErrorMessage");
if(err.contains("1019"))
	err = err + ' - License error: Please check your license credentials and/or check if your license is expired';
if(err.contains("401"))
	err = err + ' - License error: Please check your license credentials and/or check if your license is expired';

LOG.warn(extract.getColumnString("combinedErrorMessage"));]]&gt;&lt;/jobscript>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606123209460" name="Loop_inputValues" type="Loop" modifiedBy="peter">&#xd;
      &lt;comment>&lt;![CDATA[Sets the variable aip_inputValues to the returned values of the INPUT path (Extract from source cube)]]&gt;&lt;/comment>&#xd;
      &lt;loop nameref="TA_input" />&#xd;
      &lt;execution nameref="SW_emptyCheck" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="aip_inputValues">&#xd;
          &lt;input nameref="aip_inputValues" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_inputSum">&#xd;
          &lt;input nameref="sum" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>none&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1610457530823" name="Loop_externalVariables" type="Loop" modifiedBy="peter">&#xd;
      &lt;loop nameref="FT_macroVariablesDimLoop" />&#xd;
      &lt;execution nameref="PresetStaticInput" type="job" />&#xd;
      &lt;assignment>&#xd;
        &lt;variable name="service_pod">&#xd;
          &lt;input nameref="service_pod" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_elementStart">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueStart" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_elementEnd">&#xd;
          &lt;input nameref="${sys_prefix}TimeValueEnd" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="sys_targetCube">&#xd;
          &lt;input constant="${sys_sourceCube}" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="ext_period">&#xd;
          &lt;input nameref="${sys_prefix}Interval" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementTargetVersion">&#xd;
          &lt;input nameref="${sys_prefix}VersionValue" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimensionTime">&#xd;
          &lt;input nameref="${sys_prefix}TimeName" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMeasure">&#xd;
          &lt;input nameref="${sys_prefix}MeasureValueRegexed" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_inputStartDate">&#xd;
          &lt;input nameref="${sys_prefix}InputStartDate" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_dateDailySeparator">&#xd;
          &lt;input nameref="${sys_prefix}DateDailySeparator" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension1">&#xd;
          &lt;input nameref="dim1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim1">&#xd;
          &lt;input nameref="elem1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode1">&#xd;
          &lt;input nameref="mode1" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension2">&#xd;
          &lt;input nameref="dim2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim2">&#xd;
          &lt;input nameref="elem2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode2">&#xd;
          &lt;input nameref="mode2" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension3">&#xd;
          &lt;input nameref="dim3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim3">&#xd;
          &lt;input nameref="elem3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode3">&#xd;
          &lt;input nameref="mode3" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension4">&#xd;
          &lt;input nameref="dim4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim4">&#xd;
          &lt;input nameref="elem4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode4">&#xd;
          &lt;input nameref="mode4" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension5">&#xd;
          &lt;input nameref="dim5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim5">&#xd;
          &lt;input nameref="elem5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode5">&#xd;
          &lt;input nameref="mode5" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension6">&#xd;
          &lt;input nameref="dim6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim6">&#xd;
          &lt;input nameref="elem6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode6">&#xd;
          &lt;input nameref="mode6" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension7">&#xd;
          &lt;input nameref="dim7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim7">&#xd;
          &lt;input nameref="elem7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode7">&#xd;
          &lt;input nameref="mode7" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension8">&#xd;
          &lt;input nameref="dim8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim8">&#xd;
          &lt;input nameref="elem8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode8">&#xd;
          &lt;input nameref="mode8" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension9">&#xd;
          &lt;input nameref="dim9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim9">&#xd;
          &lt;input nameref="elem9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode9">&#xd;
          &lt;input nameref="mode9" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension10">&#xd;
          &lt;input nameref="dim10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim10">&#xd;
          &lt;input nameref="elem10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode10">&#xd;
          &lt;input nameref="mode10" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension11">&#xd;
          &lt;input nameref="dim11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim11">&#xd;
          &lt;input nameref="elem11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode11">&#xd;
          &lt;input nameref="mode11" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension12">&#xd;
          &lt;input nameref="dim12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim12">&#xd;
          &lt;input nameref="elem12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode12">&#xd;
          &lt;input nameref="mode12" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension13">&#xd;
          &lt;input nameref="dim13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim13">&#xd;
          &lt;input nameref="elem13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode13">&#xd;
          &lt;input nameref="mode13" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension14">&#xd;
          &lt;input nameref="dim14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim14">&#xd;
          &lt;input nameref="elem14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode14">&#xd;
          &lt;input nameref="mode14" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension15">&#xd;
          &lt;input nameref="dim15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim15">&#xd;
          &lt;input nameref="elem15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode15">&#xd;
          &lt;input nameref="mode15" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension16">&#xd;
          &lt;input nameref="dim16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim16">&#xd;
          &lt;input nameref="elem16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode16">&#xd;
          &lt;input nameref="mode16" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension17">&#xd;
          &lt;input nameref="dim17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim17">&#xd;
          &lt;input nameref="elem17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode17">&#xd;
          &lt;input nameref="mode17" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension18">&#xd;
          &lt;input nameref="dim18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim18">&#xd;
          &lt;input nameref="elem18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode18">&#xd;
          &lt;input nameref="mode18" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension19">&#xd;
          &lt;input nameref="dim19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim19">&#xd;
          &lt;input nameref="elem19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode19">&#xd;
          &lt;input nameref="mode19" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension20">&#xd;
          &lt;input nameref="dim20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim20">&#xd;
          &lt;input nameref="elem20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode20">&#xd;
          &lt;input nameref="mode20" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension21">&#xd;
          &lt;input nameref="dim21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim21">&#xd;
          &lt;input nameref="elem21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode21">&#xd;
          &lt;input nameref="mode21" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension22">&#xd;
          &lt;input nameref="dim22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim22">&#xd;
          &lt;input nameref="elem22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode22">&#xd;
          &lt;input nameref="mode22" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension23">&#xd;
          &lt;input nameref="dim23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim23">&#xd;
          &lt;input nameref="elem23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode23">&#xd;
          &lt;input nameref="mode23" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension24">&#xd;
          &lt;input nameref="dim24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim24">&#xd;
          &lt;input nameref="elem24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode24">&#xd;
          &lt;input nameref="mode24" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension25">&#xd;
          &lt;input nameref="dim25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim25">&#xd;
          &lt;input nameref="elem25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode25">&#xd;
          &lt;input nameref="mode25" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension26">&#xd;
          &lt;input nameref="dim26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim26">&#xd;
          &lt;input nameref="elem26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode26">&#xd;
          &lt;input nameref="mode26" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_dimension27">&#xd;
          &lt;input nameref="dim27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementDim27">&#xd;
          &lt;input nameref="elem27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="db_elementMode27">&#xd;
          &lt;input nameref="mode27" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="time_currentFormat">&#xd;
          &lt;input nameref="${sys_prefix}DateFormat" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="intern_copyByWeekday">&#xd;
          &lt;input nameref="${sys_prefix}CopyDaysByWeekday" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_algGroup">&#xd;
          &lt;input nameref="${sys_prefix}InterpolationGroup" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_extrapolationType">&#xd;
          &lt;input nameref="${sys_prefix}ExtrapolationType" />&#xd;
        &lt;/variable>&#xd;
        &lt;variable name="aip_algSubType">&#xd;
          &lt;input nameref="${sys_prefix}InterpolationSubtype" />&#xd;
        &lt;/variable>&#xd;
      &lt;/assignment>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
    &lt;job modified="1606097161593" name="MainJob" type="Parallel" modifiedBy="peter">&#xd;
      &lt;comment>Main job - entry point for call from outside&lt;/comment>&#xd;
      &lt;executions>&#xd;
        &lt;execution nameref="Loop_externalVariables" parallel="false" type="job" />&#xd;
      &lt;/executions>&#xd;
      &lt;failStatus>error&lt;/failStatus>&#xd;
    &lt;/job>&#xd;
  &lt;/jobs>&#xd;
&lt;/project>&#xd;
</e0></e4></e1></cube>